[2025-07-06 21:05:00,989 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250706_210500
[2025-07-06 21:05:00,990 - __main__] INFO: Log directory: logs/20250706_210500
[2025-07-06 21:05:00,990 - __main__] INFO: Configuration:
[2025-07-06 21:05:00,990 - __main__] INFO:   GTEX_TISSUE: artery_coronary
[2025-07-06 21:05:00,990 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-06 21:05:00,990 - __main__] INFO:   TOP_N_GENES: all
[2025-07-06 21:05:00,990 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-06 21:05:00,990 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-06 21:05:00,990 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-06 21:05:00,990 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_artery_coronary-var_pc_log2-all.pkl
[2025-07-06 21:05:00,990 - __main__] INFO: Loading correlation data...
[2025-07-06 21:05:08,940 - __main__] INFO: Dataframe shape: (1373430255, 3)
[2025-07-06 21:05:08,940 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-06 21:05:08,945 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000229807.10 ENSG00000129824.15  0.464600  0.808594  0.702148
ENSG00000181092.9  ENSG00000129824.15  0.050995  0.098206  0.238037
                   ENSG00000229807.10  0.012993  0.031342  0.103638
ENSG00000211595.2  ENSG00000129824.15  0.015617  0.044739  0.107727
                   ENSG00000229807.10  0.028595  0.076965  0.174072
                   ENSG00000181092.9   0.038239  0.041412  0.170410
ENSG00000187288.10 ENSG00000129824.15  0.052673  0.094543  0.209839
                   ENSG00000229807.10  0.012825  0.002272  0.091675
                   ENSG00000181092.9   0.809082  0.937012  0.975586
                   ENSG00000211595.2   0.028183  0.048431  0.153320
ENSG00000067048.16 ENSG00000129824.15  0.499756  0.875000  0.815918
                   ENSG00000229807.10  0.430908  0.763184  0.701172
                   ENSG00000181092.9   0.029022  0.129883  0.214111
                   ENSG00000211595.2   0.019928  0.100159  0.060883
                   ENSG00000187288.10  0.038239  0.120667  0.195679
[2025-07-06 21:05:08,945 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-06 21:09:17,153 - __main__] INFO: 
                ccc       pearson      spearman
count  1.373430e+09  1.373430e+09  1.373430e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.424551e-04  2.371216e-02  2.734375e-02
50%    4.360199e-03  5.264282e-02  6.002808e-02
75%    1.686096e-02  1.094360e-01  1.115723e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-06 21:10:51,220 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-06 21:10:51,223 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000049  0.019043  0.021851
0.242105  0.000139  0.022964  0.026489
0.284211  0.000288  0.027054  0.031281
0.326316  0.000573  0.031342  0.036285
0.368421  0.001050  0.035919  0.041534
0.410526  0.001781  0.040802  0.047150
0.452632  0.002810  0.046082  0.052948
0.494737  0.004173  0.051849  0.059235
0.536842  0.005798  0.058258  0.065918
0.578947  0.007599  0.065430  0.073181
0.621053  0.009499  0.073669  0.081055
0.663158  0.011642  0.083252  0.089783
0.705263  0.013878  0.094604  0.099548
0.747368  0.016647  0.108459  0.110779
0.789474  0.019974  0.125732  0.125610
0.831579  0.024658  0.148315  0.145020
0.873684  0.031738  0.179199  0.172974
0.915789  0.043854  0.225220  0.218018
0.957895  0.069641  0.308594  0.302002
1.000000  1.000000  1.000000  1.000000
[2025-07-06 21:11:08,980 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-06 21:11:08,981 - __main__] INFO: 0.2    0.000049
0.8    0.021042
Name: ccc, dtype: float64
[2025-07-06 21:11:08,982 - __main__] INFO: CCC lower quantile: 4.887580871582031e-05, upper quantile: 0.0210418701171875
[2025-07-06 21:11:24,991 - __main__] INFO: Clustermatch quantiles: lower=0.00039458274841308594, upper=0.01364898681640625
[2025-07-06 21:11:43,473 - __main__] INFO: Pearson quantiles: lower=0.0286407470703125, upper=0.09307861328125
[2025-07-06 21:12:03,559 - __main__] INFO: Spearman quantiles: lower=0.03314208984375, upper=0.09832763671875
[2025-07-06 21:12:07,893 - __main__] INFO: Pearson higher count: 412100697
[2025-07-06 21:12:10,992 - __main__] INFO: Pearson lower count: 412135708
[2025-07-06 21:12:14,926 - __main__] INFO: Spearman higher count: 412175820
[2025-07-06 21:12:18,034 - __main__] INFO: Spearman lower count: 412109919
[2025-07-06 21:12:22,380 - __main__] INFO: Clustermatch higher count: 413734708
[2025-07-06 21:12:25,486 - __main__] INFO: Clustermatch lower count: 412038264
[2025-07-06 21:12:29,981 - __main__] INFO: Plot dataframe shape: (1373430255, 9)
[2025-07-06 21:12:29,981 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-06 21:12:39,085 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-06 21:12:39,085 - __main__] INFO: Data shape for upset plot: (1373430255, 9)
[2025-07-06 21:21:04,690 - __main__] INFO: Gene pairs by categories shape: (1373430255, 9)
[2025-07-06 21:21:04,691 - __main__] INFO: First few entries:
[2025-07-06 21:21:04,699 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.702148
                                                                               True                           True  ...  0.238037
                                                                False          False                         False  ...  0.103638
                                                                               True                          False  ...  0.107727
                                                                               True                          False  ...  0.174072

[5 rows x 9 columns]
[2025-07-06 21:21:04,699 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-06 21:23:05,281 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_coronary_full.svg
[2025-07-06 21:23:05,281 - __main__] INFO: Copied full upset plot to log directory: logs/20250706_210500/upsetplot_gtex_artery_coronary_full.svg
[2025-07-06 21:23:05,281 - __main__] INFO: Data shape for trimmed plot: (1373430255, 9)
[2025-07-06 21:26:30,503 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-06 21:26:30,503 - __main__] INFO: Shape: (1373430255, 9)
[2025-07-06 21:29:57,456 - __main__] INFO: Unique index combinations:
[2025-07-06 21:29:57,462 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-06 21:29:57,463 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-06 21:29:57,466 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-06 21:29:57,467 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-06 21:29:57,470 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-06 21:29:57,472 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-06 21:29:57,475 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-06 21:41:59,226 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-06 21:41:59,234 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.702148
                                                                               True                           True  ...  0.238037
                                                                               True                           True  ...  0.209839
                                                                               True                           True  ...  0.975586
                                                                               True                           True  ...  0.815918

[5 rows x 9 columns]
[2025-07-06 21:42:00,661 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-06 21:43:10,698 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_coronary_trimmed.svg
[2025-07-06 21:43:10,698 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250706_210500/upsetplot_gtex_artery_coronary_trimmed.svg
[2025-07-06 21:43:10,699 - __main__] INFO: Final dataframe shape: (1373430255, 9)
[2025-07-06 21:43:10,699 - __main__] INFO: Final dataframe head:
[2025-07-06 21:43:10,704 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000229807.10 ENSG00000129824.15            True  ...  0.702148
ENSG00000181092.9  ENSG00000129824.15            True  ...  0.238037
                   ENSG00000229807.10           False  ...  0.103638
ENSG00000211595.2  ENSG00000129824.15           False  ...  0.107727
                   ENSG00000229807.10           False  ...  0.174072

[5 rows x 9 columns]
[2025-07-06 21:43:10,704 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-artery_coronary-var_pc_log2.pkl
[2025-07-06 21:43:10,704 - __main__] INFO: Saving gene pair intersections data...
[2025-07-06 21:43:15,212 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-artery_coronary-var_pc_log2.pkl
[2025-07-06 21:43:15,212 - __main__] INFO: Script completed successfully!
[2025-07-06 21:43:15,212 - __main__] INFO: All outputs saved to log directory: logs/20250706_210500
[2025-07-06 21:43:21,053 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250706_214321
[2025-07-06 21:43:21,053 - __main__] INFO: Log directory: logs/20250706_214321
[2025-07-06 21:43:21,053 - __main__] INFO: Configuration:
[2025-07-06 21:43:21,053 - __main__] INFO:   GTEX_TISSUE: artery_tibial
[2025-07-06 21:43:21,053 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-06 21:43:21,053 - __main__] INFO:   TOP_N_GENES: all
[2025-07-06 21:43:21,053 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-06 21:43:21,053 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-06 21:43:21,053 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-06 21:43:21,053 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_artery_tibial-var_pc_log2-all.pkl
[2025-07-06 21:43:21,054 - __main__] INFO: Loading correlation data...
[2025-07-06 21:43:33,431 - __main__] INFO: Dataframe shape: (1454033701, 3)
[2025-07-06 21:43:33,432 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-06 21:43:33,436 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000229807.10 ENSG00000129824.15  0.432861  0.809570  0.693359
ENSG00000067048.16 ENSG00000129824.15  0.436523  0.849609  0.629883
                   ENSG00000229807.10  0.422363  0.809570  0.619629
ENSG00000224114.1  ENSG00000129824.15  0.009125  0.015823  0.008904
                   ENSG00000229807.10  0.006886  0.018280  0.046875
                   ENSG00000067048.16  0.006481  0.038025  0.042145
ENSG00000134184.12 ENSG00000129824.15  0.010559  0.034821  0.034180
                   ENSG00000229807.10  0.009117  0.025757  0.035034
                   ENSG00000067048.16  0.002115  0.024857  0.026337
                   ENSG00000224114.1   0.005169  0.006405  0.037292
ENSG00000012817.15 ENSG00000129824.15  0.439697  0.800781  0.580078
                   ENSG00000229807.10  0.420410  0.787598  0.620605
                   ENSG00000067048.16  0.498291  0.916504  0.821289
                   ENSG00000224114.1   0.009338  0.037170  0.062561
                   ENSG00000134184.12  0.004383  0.050690  0.061035
[2025-07-06 21:43:33,436 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-06 21:48:31,043 - __main__] INFO: 
                ccc       pearson      spearman
count  1.454034e+09  1.454034e+09  1.454034e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    3.254414e-05  1.408386e-02  1.672363e-02
50%    1.567841e-03  3.244019e-02  3.741455e-02
75%    8.110046e-03  7.006836e-02  7.287598e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-06 21:50:09,462 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-06 21:50:09,466 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000009  0.011200  0.013283
0.242105  0.000027  0.013618  0.016159
0.284211  0.000066  0.016159  0.019180
0.326316  0.000141  0.018860  0.022324
0.368421  0.000282  0.021744  0.025650
0.410526  0.000525  0.024857  0.029160
0.452632  0.000917  0.028244  0.032898
0.494737  0.001483  0.031952  0.036896
0.536842  0.002214  0.036102  0.041229
0.578947  0.003069  0.040771  0.045990
0.621053  0.004013  0.046143  0.051239
0.663158  0.005081  0.052429  0.057129
0.705263  0.006355  0.059998  0.063904
0.747368  0.007980  0.069397  0.072266
0.789474  0.010254  0.081543  0.083130
0.831579  0.013702  0.097839  0.098083
0.873684  0.019043  0.121277  0.120728
0.915789  0.027695  0.158325  0.158813
0.957895  0.045044  0.228516  0.231934
1.000000  1.000000  1.000000  1.000000
[2025-07-06 21:50:27,731 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-06 21:50:27,732 - __main__] INFO: 0.2    0.000009
0.8    0.011009
Name: ccc, dtype: float64
[2025-07-06 21:50:27,733 - __main__] INFO: CCC lower quantile: 9.119510650634766e-06, upper quantile: 0.01100921630859375
[2025-07-06 21:50:46,503 - __main__] INFO: Clustermatch quantiles: lower=8.720159530639648e-05, upper=0.0061798095703125
[2025-07-06 21:51:07,380 - __main__] INFO: Pearson quantiles: lower=0.01715087890625, upper=0.0589599609375
[2025-07-06 21:51:30,786 - __main__] INFO: Spearman quantiles: lower=0.0203399658203125, upper=0.06298828125
[2025-07-06 21:51:35,371 - __main__] INFO: Pearson higher count: 436438400
[2025-07-06 21:51:38,653 - __main__] INFO: Pearson lower count: 436277159
[2025-07-06 21:51:43,234 - __main__] INFO: Spearman higher count: 436652199
[2025-07-06 21:51:46,519 - __main__] INFO: Spearman lower count: 436246960
[2025-07-06 21:51:51,140 - __main__] INFO: Clustermatch higher count: 436214071
[2025-07-06 21:51:55,093 - __main__] INFO: Clustermatch lower count: 436230133
[2025-07-06 21:51:59,100 - __main__] INFO: Plot dataframe shape: (1454033701, 9)
[2025-07-06 21:51:59,100 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-06 21:52:08,744 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-06 21:52:08,744 - __main__] INFO: Data shape for upset plot: (1454033701, 9)
[2025-07-06 22:00:59,797 - __main__] INFO: Gene pairs by categories shape: (1454033701, 9)
[2025-07-06 22:00:59,797 - __main__] INFO: First few entries:
[2025-07-06 22:00:59,805 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.693359
                                                                               True                           True  ...  0.629883
                                                                               True                           True  ...  0.619629
True           True          False              False           False          True                          False  ...  0.008904
False          False         False              False           False          True                          False  ...  0.046875

[5 rows x 9 columns]
[2025-07-06 22:00:59,805 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-06 22:03:08,965 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_tibial_full.svg
[2025-07-06 22:03:08,966 - __main__] INFO: Copied full upset plot to log directory: logs/20250706_214321/upsetplot_gtex_artery_tibial_full.svg
[2025-07-06 22:03:08,966 - __main__] INFO: Data shape for trimmed plot: (1454033701, 9)
[2025-07-06 22:06:51,106 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-06 22:06:51,107 - __main__] INFO: Shape: (1454033701, 9)
[2025-07-06 22:10:50,362 - __main__] INFO: Unique index combinations:
[2025-07-06 22:10:50,369 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-06 22:10:50,370 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-06 22:10:50,373 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-06 22:10:50,374 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-06 22:10:50,377 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-06 22:10:50,379 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-06 22:10:50,382 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-06 22:24:29,567 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-06 22:24:29,576 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.693359
                                                                               True                           True  ...  0.629883
                                                                               True                           True  ...  0.619629
                                                                               True                           True  ...  0.580078
                                                                               True                           True  ...  0.620605

[5 rows x 9 columns]
[2025-07-06 22:24:31,447 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-06 22:25:46,315 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_tibial_trimmed.svg
[2025-07-06 22:25:46,316 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250706_214321/upsetplot_gtex_artery_tibial_trimmed.svg
[2025-07-06 22:25:46,316 - __main__] INFO: Final dataframe shape: (1454033701, 9)
[2025-07-06 22:25:46,316 - __main__] INFO: Final dataframe head:
[2025-07-06 22:25:46,321 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000229807.10 ENSG00000129824.15            True  ...  0.693359
ENSG00000067048.16 ENSG00000129824.15            True  ...  0.629883
                   ENSG00000229807.10            True  ...  0.619629
ENSG00000224114.1  ENSG00000129824.15           False  ...  0.008904
                   ENSG00000229807.10           False  ...  0.046875

[5 rows x 9 columns]
[2025-07-06 22:25:46,321 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-artery_tibial-var_pc_log2.pkl
[2025-07-06 22:25:46,321 - __main__] INFO: Saving gene pair intersections data...
[2025-07-06 22:25:50,991 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-artery_tibial-var_pc_log2.pkl
[2025-07-06 22:25:50,991 - __main__] INFO: Script completed successfully!
[2025-07-06 22:25:50,991 - __main__] INFO: All outputs saved to log directory: logs/20250706_214321
[2025-07-06 22:25:57,106 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250706_222557
[2025-07-06 22:25:57,106 - __main__] INFO: Log directory: logs/20250706_222557
[2025-07-06 22:25:57,106 - __main__] INFO: Configuration:
[2025-07-06 22:25:57,106 - __main__] INFO:   GTEX_TISSUE: bladder
[2025-07-06 22:25:57,106 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-06 22:25:57,106 - __main__] INFO:   TOP_N_GENES: all
[2025-07-06 22:25:57,106 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-06 22:25:57,106 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-06 22:25:57,107 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-06 22:25:57,107 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_bladder-var_pc_log2-all.pkl
[2025-07-06 22:25:57,107 - __main__] INFO: Loading correlation data...
[2025-07-06 22:26:06,478 - __main__] INFO: Dataframe shape: (995271420, 3)
[2025-07-06 22:26:06,478 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-06 22:26:06,482 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000211593.2  ENSG00000167653.4   0.152100  0.403076  0.408203
ENSG00000129824.15 ENSG00000167653.4   0.087585  0.036774  0.018188
                   ENSG00000211593.2   0.107483  0.300537  0.277100
ENSG00000211595.2  ENSG00000167653.4   0.114319  0.468750  0.341553
                   ENSG00000211593.2   0.455811  0.851074  0.797852
                   ENSG00000129824.15  0.141113  0.249023  0.245483
ENSG00000211895.4  ENSG00000167653.4   0.167847  0.486816  0.353271
                   ENSG00000211593.2   0.546387  0.829590  0.876465
                   ENSG00000129824.15  0.135864  0.169067  0.441650
                   ENSG00000211595.2   0.546387  0.965332  0.757324
ENSG00000100867.14 ENSG00000167653.4   0.728027  0.847168  0.938965
                   ENSG00000211593.2   0.227173  0.552734  0.434326
                   ENSG00000129824.15  0.069519  0.187988  0.057129
                   ENSG00000211595.2   0.143433  0.636230  0.330566
                   ENSG00000211895.4   0.115295  0.527344  0.329834
[2025-07-06 22:26:06,482 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-06 22:28:32,016 - __main__] INFO: 
                ccc       pearson      spearman
count  9.952714e+08  9.952714e+08  9.952714e+08
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.144409e-02  8.532715e-02  9.094238e-02
50%    7.299805e-02  1.704102e-01  1.855469e-01
75%    1.536865e-01  3.002930e-01  3.161621e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-06 22:29:41,379 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-06 22:29:41,383 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.009605  0.070007  0.073853
0.242105  0.009605  0.082825  0.089172
0.284211  0.016159  0.095886  0.104980
0.326316  0.025864  0.109192  0.117676
0.368421  0.036560  0.123230  0.135010
0.410526  0.043488  0.137451  0.149414
0.452632  0.057220  0.152466  0.168457
0.494737  0.071533  0.168335  0.184692
0.536842  0.084595  0.185181  0.203613
0.578947  0.097656  0.203491  0.221802
0.621053  0.111084  0.223389  0.244995
0.663158  0.128662  0.245361  0.263672
0.705263  0.140869  0.270020  0.291748
0.747368  0.152466  0.298340  0.314453
0.789474  0.174805  0.331543  0.341064
0.831579  0.189819  0.371338  0.370361
0.873684  0.220337  0.421631  0.414795
0.915789  0.252441  0.488770  0.474121
0.957895  0.330078  0.593262  0.564941
1.000000  1.000000  1.000000  1.000000
[2025-07-06 22:29:54,371 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-06 22:29:54,372 - __main__] INFO: 0.2    0.009605
0.8    0.177002
Name: ccc, dtype: float64
[2025-07-06 22:29:54,372 - __main__] INFO: CCC lower quantile: 0.00960540771484375, upper quantile: 0.177001953125
[2025-07-06 22:30:08,249 - __main__] INFO: Clustermatch quantiles: lower=0.021240234375, upper=0.140869140625
[2025-07-06 22:30:22,952 - __main__] INFO: Pearson quantiles: lower=0.10089111328125, upper=0.266845703125
[2025-07-06 22:30:36,274 - __main__] INFO: Spearman quantiles: lower=0.11041259765625, upper=0.288330078125
[2025-07-06 22:30:39,428 - __main__] INFO: Pearson higher count: 298783848
[2025-07-06 22:30:41,667 - __main__] INFO: Pearson lower count: 298651668
[2025-07-06 22:30:44,410 - __main__] INFO: Spearman higher count: 298773817
[2025-07-06 22:30:46,657 - __main__] INFO: Spearman lower count: 298965191
[2025-07-06 22:30:49,829 - __main__] INFO: Clustermatch higher count: 299801546
[2025-07-06 22:30:52,079 - __main__] INFO: Clustermatch lower count: 305525488
[2025-07-06 22:30:55,099 - __main__] INFO: Plot dataframe shape: (995271420, 9)
[2025-07-06 22:30:55,099 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-06 22:31:01,715 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-06 22:31:01,715 - __main__] INFO: Data shape for upset plot: (995271420, 9)
[2025-07-06 22:38:21,107 - __main__] INFO: Gene pairs by categories shape: (995271420, 9)
[2025-07-06 22:38:21,107 - __main__] INFO: First few entries:
[2025-07-06 22:38:21,115 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.408203
True           True          False              False           False          False                         False  ...  0.018188
False          False         False              False           True           False                          True  ...  0.277100
                                                True            True           False                          True  ...  0.341553
                                                                               True                           True  ...  0.797852

[5 rows x 9 columns]
[2025-07-06 22:38:21,115 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-06 22:39:47,440 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_bladder_full.svg
[2025-07-06 22:39:47,440 - __main__] INFO: Copied full upset plot to log directory: logs/20250706_222557/upsetplot_gtex_bladder_full.svg
[2025-07-06 22:39:47,441 - __main__] INFO: Data shape for trimmed plot: (995271420, 9)
[2025-07-06 22:42:39,241 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-06 22:42:39,242 - __main__] INFO: Shape: (995271420, 9)
[2025-07-06 22:45:05,197 - __main__] INFO: Unique index combinations:
[2025-07-06 22:45:05,204 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-06 22:45:05,205 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-06 22:45:05,208 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-06 22:45:05,209 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-06 22:45:05,212 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-06 22:45:05,214 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-06 22:45:05,217 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-06 22:53:07,395 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-06 22:53:07,404 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.408203
                                                                               True                           True  ...  0.797852
                                                                               True                           True  ...  0.353271
                                                                               True                           True  ...  0.876465
                                                                               True                           True  ...  0.757324

[5 rows x 9 columns]
[2025-07-06 22:53:08,409 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-06 22:53:57,903 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_bladder_trimmed.svg
[2025-07-06 22:53:57,904 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250706_222557/upsetplot_gtex_bladder_trimmed.svg
[2025-07-06 22:53:57,904 - __main__] INFO: Final dataframe shape: (995271420, 9)
[2025-07-06 22:53:57,904 - __main__] INFO: Final dataframe head:
[2025-07-06 22:53:57,909 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000211593.2  ENSG00000167653.4            True  ...  0.408203
ENSG00000129824.15 ENSG00000167653.4           False  ...  0.018188
                   ENSG00000211593.2            True  ...  0.277100
ENSG00000211595.2  ENSG00000167653.4            True  ...  0.341553
                   ENSG00000211593.2            True  ...  0.797852

[5 rows x 9 columns]
[2025-07-06 22:53:57,909 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-bladder-var_pc_log2.pkl
[2025-07-06 22:53:57,909 - __main__] INFO: Saving gene pair intersections data...
[2025-07-06 22:54:01,112 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-bladder-var_pc_log2.pkl
[2025-07-06 22:54:01,113 - __main__] INFO: Script completed successfully!
[2025-07-06 22:54:01,113 - __main__] INFO: All outputs saved to log directory: logs/20250706_222557
[2025-07-06 22:54:07,017 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250706_225407
[2025-07-06 22:54:07,017 - __main__] INFO: Log directory: logs/20250706_225407
[2025-07-06 22:54:07,017 - __main__] INFO: Configuration:
[2025-07-06 22:54:07,017 - __main__] INFO:   GTEX_TISSUE: brain_amygdala
[2025-07-06 22:54:07,017 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-06 22:54:07,017 - __main__] INFO:   TOP_N_GENES: all
[2025-07-06 22:54:07,017 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-06 22:54:07,017 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-06 22:54:07,017 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-06 22:54:07,018 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_amygdala-var_pc_log2-all.pkl
[2025-07-06 22:54:07,018 - __main__] INFO: Loading correlation data...
[2025-07-06 22:54:17,342 - __main__] INFO: Dataframe shape: (1313153128, 3)
[2025-07-06 22:54:17,342 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-06 22:54:17,346 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000129824.15 ENSG00000134184.12  0.058685  0.200562  0.156006
ENSG00000118271.9  ENSG00000134184.12  0.042633  0.014008  0.032776
                   ENSG00000129824.15  0.015259  0.084473  0.046356
ENSG00000173110.7  ENSG00000134184.12  0.018188  0.112122  0.058746
                   ENSG00000129824.15  0.033203  0.017822  0.026199
                   ENSG00000118271.9   0.023911  0.026764  0.129639
ENSG00000224114.1  ENSG00000134184.12  0.026840  0.199829  0.103271
                   ENSG00000129824.15  0.022629  0.044128  0.094788
                   ENSG00000118271.9   0.025848  0.042419  0.100952
                   ENSG00000173110.7   0.023178  0.012138  0.127197
ENSG00000196136.17 ENSG00000134184.12  0.018158  0.029495  0.127808
                   ENSG00000129824.15  0.014450  0.062195  0.101135
                   ENSG00000118271.9   0.016968  0.001190  0.009247
                   ENSG00000173110.7   0.263672  0.173462  0.616699
                   ENSG00000224114.1   0.019287  0.229370  0.154297
[2025-07-06 22:54:17,346 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-06 22:57:59,886 - __main__] INFO: 
                ccc       pearson      spearman
count  1.313153e+09  1.313153e+09  1.313153e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.915859e-04  3.479004e-02  4.183960e-02
50%    8.026123e-03  9.179688e-02  9.619141e-02
75%    3.997803e-02  2.580566e-01  2.037354e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-06 22:59:27,008 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-06 22:59:27,012 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000094  0.027512  0.033356
0.242105  0.000263  0.033600  0.040527
0.284211  0.000532  0.040253  0.048218
0.326316  0.001046  0.047638  0.056366
0.368421  0.001892  0.055969  0.065002
0.410526  0.003168  0.065552  0.074219
0.452632  0.005058  0.076660  0.084167
0.494737  0.007622  0.089966  0.094849
0.536842  0.010849  0.106140  0.106567
0.578947  0.014725  0.126099  0.119324
0.621053  0.019150  0.150635  0.133423
0.663158  0.024567  0.179932  0.150269
0.705263  0.030960  0.214478  0.172607
0.747368  0.039490  0.255127  0.201660
0.789474  0.051392  0.303711  0.242065
0.831579  0.070496  0.362305  0.300293
0.873684  0.096985  0.434814  0.382568
0.915789  0.150146  0.528809  0.493164
0.957895  0.244995  0.660645  0.644043
1.000000  1.000000  1.000000  1.000000
[2025-07-06 22:59:43,321 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-06 22:59:43,322 - __main__] INFO: 0.2    0.000094
0.8    0.056152
Name: ccc, dtype: float64
[2025-07-06 22:59:43,322 - __main__] INFO: CCC lower quantile: 9.41157341003418e-05, upper quantile: 0.05615234375
[2025-07-06 23:00:00,483 - __main__] INFO: Clustermatch quantiles: lower=0.0007162094116210938, upper=0.030029296875
[2025-07-06 23:00:22,269 - __main__] INFO: Pearson quantiles: lower=0.042938232421875, upper=0.2099609375
[2025-07-06 23:00:40,339 - __main__] INFO: Spearman quantiles: lower=0.0511474609375, upper=0.1695556640625
[2025-07-06 23:00:44,476 - __main__] INFO: Pearson higher count: 393948878
[2025-07-06 23:00:47,435 - __main__] INFO: Pearson lower count: 394084365
[2025-07-06 23:00:51,273 - __main__] INFO: Spearman higher count: 394103020
[2025-07-06 23:00:54,240 - __main__] INFO: Spearman lower count: 393994163
[2025-07-06 23:00:58,392 - __main__] INFO: Clustermatch higher count: 394124021
[2025-07-06 23:01:01,368 - __main__] INFO: Clustermatch lower count: 396782541
[2025-07-06 23:01:05,481 - __main__] INFO: Plot dataframe shape: (1313153128, 9)
[2025-07-06 23:01:05,481 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-06 23:01:14,265 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-06 23:01:14,265 - __main__] INFO: Data shape for upset plot: (1313153128, 9)
[2025-07-06 23:10:54,228 - __main__] INFO: Gene pairs by categories shape: (1313153128, 9)
[2025-07-06 23:10:54,229 - __main__] INFO: First few entries:
[2025-07-06 23:10:54,237 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              False           False          True                          False  ...  0.156006
True           True          False              False           False          True                          False  ...  0.032776
               False         False              False           False          False                         False  ...  0.046356
False          False         False              False           False          False                         False  ...  0.058746
True           True          False              False           False          True                          False  ...  0.026199

[5 rows x 9 columns]
[2025-07-06 23:10:54,237 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-06 23:16:37,981 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_amygdala_full.svg
[2025-07-06 23:16:37,981 - __main__] INFO: Copied full upset plot to log directory: logs/20250706_225407/upsetplot_gtex_brain_amygdala_full.svg
[2025-07-06 23:16:37,981 - __main__] INFO: Data shape for trimmed plot: (1313153128, 9)
[2025-07-06 23:24:13,032 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-06 23:24:13,033 - __main__] INFO: Shape: (1313153128, 9)
[2025-07-06 23:28:34,248 - __main__] INFO: Unique index combinations:
[2025-07-06 23:28:34,254 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-06 23:28:34,255 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-06 23:28:34,259 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-06 23:28:34,260 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-06 23:28:34,262 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-06 23:28:34,265 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-06 23:28:34,267 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-06 23:40:24,410 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-06 23:40:24,419 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.552246
                                                                               True                           True  ...  0.509766
                                                                               True                           True  ...  0.841309
                                                                               True                           True  ...  0.663086
                                                                               True                           True  ...  0.757324

[5 rows x 9 columns]
[2025-07-06 23:40:25,825 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-06 23:41:34,191 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_amygdala_trimmed.svg
[2025-07-06 23:41:34,192 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250706_225407/upsetplot_gtex_brain_amygdala_trimmed.svg
[2025-07-06 23:41:34,192 - __main__] INFO: Final dataframe shape: (1313153128, 9)
[2025-07-06 23:41:34,192 - __main__] INFO: Final dataframe head:
[2025-07-06 23:41:34,197 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000129824.15 ENSG00000134184.12           False  ...  0.156006
ENSG00000118271.9  ENSG00000134184.12           False  ...  0.032776
                   ENSG00000129824.15           False  ...  0.046356
ENSG00000173110.7  ENSG00000134184.12           False  ...  0.058746
                   ENSG00000129824.15           False  ...  0.026199

[5 rows x 9 columns]
[2025-07-06 23:41:34,197 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_amygdala-var_pc_log2.pkl
[2025-07-06 23:41:34,197 - __main__] INFO: Saving gene pair intersections data...
[2025-07-06 23:41:38,407 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_amygdala-var_pc_log2.pkl
[2025-07-06 23:41:38,407 - __main__] INFO: Script completed successfully!
[2025-07-06 23:41:38,407 - __main__] INFO: All outputs saved to log directory: logs/20250706_225407
[2025-07-06 23:41:44,783 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250706_234144
[2025-07-06 23:41:44,783 - __main__] INFO: Log directory: logs/20250706_234144
[2025-07-06 23:41:44,783 - __main__] INFO: Configuration:
[2025-07-06 23:41:44,783 - __main__] INFO:   GTEX_TISSUE: brain_anterior_cingulate_cortex_ba24
[2025-07-06 23:41:44,783 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-06 23:41:44,783 - __main__] INFO:   TOP_N_GENES: all
[2025-07-06 23:41:44,783 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-06 23:41:44,783 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-06 23:41:44,783 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-06 23:41:44,783 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_anterior_cingulate_cortex_ba24-var_pc_log2-all.pkl
[2025-07-06 23:41:44,783 - __main__] INFO: Loading correlation data...
[2025-07-06 23:41:55,747 - __main__] INFO: Dataframe shape: (1345637503, 3)
[2025-07-06 23:41:55,747 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-06 23:41:55,752 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000129824.15 ENSG00000134184.12  0.023392  0.072937  0.084839
ENSG00000196136.17 ENSG00000134184.12  0.018066  0.035004  0.066162
                   ENSG00000129824.15  0.009064  0.009995  0.004280
ENSG00000224114.1  ENSG00000134184.12  0.017319  0.028854  0.012794
                   ENSG00000129824.15  0.024094  0.011528  0.042542
                   ENSG00000196136.17  0.017899  0.216553  0.106018
ENSG00000173110.7  ENSG00000134184.12  0.012138  0.013420  0.029892
                   ENSG00000129824.15  0.026031  0.130981  0.017273
                   ENSG00000196136.17  0.181763  0.207764  0.549316
                   ENSG00000224114.1   0.018066  0.021576  0.096619
ENSG00000210195.2  ENSG00000134184.12  0.011101  0.110657  0.017990
                   ENSG00000129824.15  0.036346  0.004890  0.129761
                   ENSG00000196136.17  0.020752  0.053009  0.029999
                   ENSG00000224114.1   0.016724  0.087097  0.030289
                   ENSG00000173110.7   0.023285  0.025803  0.069580
[2025-07-06 23:41:55,752 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-06 23:45:44,169 - __main__] INFO: 
                ccc       pearson      spearman
count  1.345638e+09  1.345638e+09  1.345638e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.613068e-04  3.292847e-02  3.744507e-02
50%    7.125854e-03  8.349609e-02  8.514404e-02
75%    3.344727e-02  2.194824e-01  1.771240e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-06 23:47:14,684 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-06 23:47:14,688 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000093  0.026062  0.029816
0.242105  0.000250  0.031799  0.036255
0.284211  0.000525  0.037994  0.043030
0.326316  0.000946  0.044800  0.050201
0.368421  0.001688  0.052338  0.057739
0.410526  0.002892  0.060852  0.065918
0.452632  0.004562  0.070618  0.074524
0.494737  0.006813  0.081909  0.083923
0.536842  0.009544  0.095337  0.094116
0.578947  0.012817  0.111389  0.105225
0.621053  0.016373  0.130737  0.117676
0.663158  0.020554  0.154297  0.131470
0.705263  0.026047  0.182617  0.150635
0.747368  0.032898  0.217041  0.175293
0.789474  0.043060  0.259766  0.210693
0.831579  0.057648  0.313721  0.264648
0.873684  0.082458  0.385010  0.348145
0.915789  0.130615  0.485107  0.474121
0.957895  0.245728  0.633301  0.652344
1.000000  1.000000  1.000000  1.000000
[2025-07-06 23:47:32,595 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-06 23:47:32,596 - __main__] INFO: 0.2    0.000093
0.8    0.046204
Name: ccc, dtype: float64
[2025-07-06 23:47:32,596 - __main__] INFO: CCC lower quantile: 9.262561798095703e-05, upper quantile: 0.04620361328125
[2025-07-06 23:47:50,041 - __main__] INFO: Clustermatch quantiles: lower=0.000644683837890625, upper=0.0252532958984375
[2025-07-06 23:48:09,599 - __main__] INFO: Pearson quantiles: lower=0.04046630859375, upper=0.1787109375
[2025-07-06 23:48:26,147 - __main__] INFO: Spearman quantiles: lower=0.045684814453125, upper=0.14794921875
[2025-07-06 23:48:30,317 - __main__] INFO: Pearson higher count: 403886330
[2025-07-06 23:48:33,353 - __main__] INFO: Pearson lower count: 403737458
[2025-07-06 23:48:36,754 - __main__] INFO: Spearman higher count: 403821506
[2025-07-06 23:48:39,797 - __main__] INFO: Spearman lower count: 403806645
[2025-07-06 23:48:44,054 - __main__] INFO: Clustermatch higher count: 403704515
[2025-07-06 23:48:47,103 - __main__] INFO: Clustermatch lower count: 403700328
[2025-07-06 23:48:51,269 - __main__] INFO: Plot dataframe shape: (1345637503, 9)
[2025-07-06 23:48:51,269 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-06 23:49:00,100 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-06 23:49:00,100 - __main__] INFO: Data shape for upset plot: (1345637503, 9)
[2025-07-06 23:57:54,215 - __main__] INFO: Gene pairs by categories shape: (1345637503, 9)
[2025-07-06 23:57:54,215 - __main__] INFO: First few entries:
[2025-07-06 23:57:54,223 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              False           False          False                         False  ...  0.084839
               True          False              False           False          False                         False  ...  0.066162
True           True          False              False           False          False                         False  ...  0.004280
                                                                               False                         False  ...  0.012794
                                                                               False                         False  ...  0.042542

[5 rows x 9 columns]
[2025-07-06 23:57:54,223 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-06 23:59:51,344 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_anterior_cingulate_cortex_ba24_full.svg
[2025-07-06 23:59:51,344 - __main__] INFO: Copied full upset plot to log directory: logs/20250706_234144/upsetplot_gtex_brain_anterior_cingulate_cortex_ba24_full.svg
[2025-07-06 23:59:51,344 - __main__] INFO: Data shape for trimmed plot: (1345637503, 9)
[2025-07-07 00:03:34,067 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 00:03:34,067 - __main__] INFO: Shape: (1345637503, 9)
[2025-07-07 00:06:50,447 - __main__] INFO: Unique index combinations:
[2025-07-07 00:06:50,454 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 00:06:50,455 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 00:06:50,458 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 00:06:50,459 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 00:06:50,461 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 00:06:50,464 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 00:06:50,466 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 00:19:16,169 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 00:19:16,178 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.549316
                                                                               True                           True  ...  0.382324
                                                                               True                           True  ...  0.840332
                                                                               True                           True  ...  0.763184
                                                                               True                           True  ...  0.657715

[5 rows x 9 columns]
[2025-07-07 00:19:17,601 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 00:20:26,489 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_anterior_cingulate_cortex_ba24_trimmed.svg
[2025-07-07 00:20:26,490 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250706_234144/upsetplot_gtex_brain_anterior_cingulate_cortex_ba24_trimmed.svg
[2025-07-07 00:20:26,490 - __main__] INFO: Final dataframe shape: (1345637503, 9)
[2025-07-07 00:20:26,490 - __main__] INFO: Final dataframe head:
[2025-07-07 00:20:26,495 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000129824.15 ENSG00000134184.12           False  ...  0.084839
ENSG00000196136.17 ENSG00000134184.12           False  ...  0.066162
                   ENSG00000129824.15           False  ...  0.004280
ENSG00000224114.1  ENSG00000134184.12           False  ...  0.012794
                   ENSG00000129824.15           False  ...  0.042542

[5 rows x 9 columns]
[2025-07-07 00:20:26,495 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_anterior_cingulate_cortex_ba24-var_pc_log2.pkl
[2025-07-07 00:20:26,495 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 00:20:30,825 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_anterior_cingulate_cortex_ba24-var_pc_log2.pkl
[2025-07-07 00:20:30,825 - __main__] INFO: Script completed successfully!
[2025-07-07 00:20:30,825 - __main__] INFO: All outputs saved to log directory: logs/20250706_234144
[2025-07-07 00:20:36,783 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_002036
[2025-07-07 00:20:36,783 - __main__] INFO: Log directory: logs/20250707_002036
[2025-07-07 00:20:36,783 - __main__] INFO: Configuration:
[2025-07-07 00:20:36,783 - __main__] INFO:   GTEX_TISSUE: brain_caudate_basal_ganglia
[2025-07-07 00:20:36,783 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 00:20:36,783 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 00:20:36,783 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 00:20:36,783 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 00:20:36,783 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 00:20:36,783 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_caudate_basal_ganglia-var_pc_log2-all.pkl
[2025-07-07 00:20:36,783 - __main__] INFO: Loading correlation data...
[2025-07-07 00:20:48,223 - __main__] INFO: Dataframe shape: (1377836265, 3)
[2025-07-07 00:20:48,223 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 00:20:48,227 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000129824.15 ENSG00000134184.12  0.028229  0.164795  0.188477
ENSG00000181195.10 ENSG00000134184.12  0.027496  0.136230  0.239990
                   ENSG00000129824.15  0.226929  0.335205  0.479736
ENSG00000160401.14 ENSG00000134184.12  0.008949  0.069519  0.132568
                   ENSG00000129824.15  0.034668  0.081482  0.196289
                   ENSG00000181195.10  0.043182  0.073730  0.149048
ENSG00000196136.17 ENSG00000134184.12  0.027191  0.029358  0.117737
                   ENSG00000129824.15  0.021713  0.011101  0.104187
                   ENSG00000181195.10  0.024765  0.088623  0.067200
                   ENSG00000160401.14  0.026688  0.116272  0.139893
ENSG00000224114.1  ENSG00000134184.12  0.015114  0.003666  0.086121
                   ENSG00000129824.15  0.033569  0.051392  0.133789
                   ENSG00000181195.10  0.026993  0.099976  0.168457
                   ENSG00000160401.14  0.014168  0.037140  0.061829
                   ENSG00000196136.17  0.017868  0.174561  0.129150
[2025-07-07 00:20:48,227 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 00:24:47,849 - __main__] INFO: 
                ccc       pearson      spearman
count  1.377836e+09  1.377836e+09  1.377836e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.049208e-04  2.966309e-02  3.472900e-02
50%    6.595612e-03  7.489014e-02  8.135986e-02
75%    3.701782e-02  1.931152e-01  1.972656e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 00:26:18,832 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 00:26:18,836 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000070  0.023468  0.027435
0.242105  0.000178  0.028656  0.033539
0.284211  0.000398  0.034241  0.040009
0.326316  0.000794  0.040314  0.046844
0.368421  0.001450  0.047058  0.054199
0.410526  0.002542  0.054657  0.062073
0.452632  0.004143  0.063416  0.070618
0.494737  0.006294  0.073547  0.080078
0.536842  0.008965  0.085510  0.090515
0.578947  0.012161  0.099792  0.102417
0.621053  0.016022  0.116760  0.116760
0.663158  0.020782  0.136963  0.135498
0.705263  0.027267  0.161255  0.160278
0.747368  0.036194  0.191040  0.194702
0.789474  0.047974  0.228760  0.243408
0.831579  0.066895  0.278564  0.309814
0.873684  0.096069  0.346680  0.396729
0.915789  0.144531  0.446289  0.512695
0.957895  0.259277  0.603027  0.670898
1.000000  1.000000  1.000000  1.000000
[2025-07-07 00:26:35,992 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 00:26:35,993 - __main__] INFO: 0.2    0.000070
0.8    0.051727
Name: ccc, dtype: float64
[2025-07-07 00:26:35,993 - __main__] INFO: CCC lower quantile: 6.99162483215332e-05, upper quantile: 0.051727294921875
[2025-07-07 00:26:55,132 - __main__] INFO: Clustermatch quantiles: lower=0.000507354736328125, upper=0.0261993408203125
[2025-07-07 00:27:15,791 - __main__] INFO: Pearson quantiles: lower=0.03643798828125, upper=0.157958984375
[2025-07-07 00:27:34,997 - __main__] INFO: Spearman quantiles: lower=0.042510986328125, upper=0.15673828125
[2025-07-07 00:27:39,361 - __main__] INFO: Pearson higher count: 413570623
[2025-07-07 00:27:42,468 - __main__] INFO: Pearson lower count: 413450719
[2025-07-07 00:27:46,489 - __main__] INFO: Spearman higher count: 413394636
[2025-07-07 00:27:49,608 - __main__] INFO: Spearman lower count: 413462957
[2025-07-07 00:27:54,008 - __main__] INFO: Clustermatch higher count: 413420502
[2025-07-07 00:27:57,128 - __main__] INFO: Clustermatch lower count: 413425412
[2025-07-07 00:28:01,667 - __main__] INFO: Plot dataframe shape: (1377836265, 9)
[2025-07-07 00:28:01,668 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 00:28:10,912 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 00:28:10,912 - __main__] INFO: Data shape for upset plot: (1377836265, 9)
[2025-07-07 00:36:56,131 - __main__] INFO: Gene pairs by categories shape: (1377836265, 9)
[2025-07-07 00:36:56,131 - __main__] INFO: First few entries:
[2025-07-07 00:36:56,140 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.188477
                                                                False          True                          False  ...  0.239990
                                                                True           True                           True  ...  0.479736
                                                False           False          False                         False  ...  0.132568
                                                True            False          True                          False  ...  0.196289

[5 rows x 9 columns]
[2025-07-07 00:36:56,140 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 00:38:56,513 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_caudate_basal_ganglia_full.svg
[2025-07-07 00:38:56,514 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_002036/upsetplot_gtex_brain_caudate_basal_ganglia_full.svg
[2025-07-07 00:38:56,514 - __main__] INFO: Data shape for trimmed plot: (1377836265, 9)
[2025-07-07 00:42:32,221 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 00:42:32,222 - __main__] INFO: Shape: (1377836265, 9)
[2025-07-07 00:45:50,240 - __main__] INFO: Unique index combinations:
[2025-07-07 00:45:50,246 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 00:45:50,247 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 00:45:50,250 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 00:45:50,251 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 00:45:50,254 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 00:45:50,256 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 00:45:50,259 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 00:58:15,556 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 00:58:15,565 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.188477
                                                                               True                           True  ...  0.479736
                                                                               True                           True  ...  0.672852
                                                                               True                           True  ...  0.334717
                                                                               True                           True  ...  0.391357

[5 rows x 9 columns]
[2025-07-07 00:58:17,043 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 00:59:27,609 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_caudate_basal_ganglia_trimmed.svg
[2025-07-07 00:59:27,610 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_002036/upsetplot_gtex_brain_caudate_basal_ganglia_trimmed.svg
[2025-07-07 00:59:27,610 - __main__] INFO: Final dataframe shape: (1377836265, 9)
[2025-07-07 00:59:27,610 - __main__] INFO: Final dataframe head:
[2025-07-07 00:59:27,616 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000129824.15 ENSG00000134184.12            True  ...  0.188477
ENSG00000181195.10 ENSG00000134184.12           False  ...  0.239990
                   ENSG00000129824.15            True  ...  0.479736
ENSG00000160401.14 ENSG00000134184.12           False  ...  0.132568
                   ENSG00000129824.15           False  ...  0.196289

[5 rows x 9 columns]
[2025-07-07 00:59:27,616 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_caudate_basal_ganglia-var_pc_log2.pkl
[2025-07-07 00:59:27,616 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 00:59:32,051 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_caudate_basal_ganglia-var_pc_log2.pkl
[2025-07-07 00:59:32,051 - __main__] INFO: Script completed successfully!
[2025-07-07 00:59:32,051 - __main__] INFO: All outputs saved to log directory: logs/20250707_002036
[2025-07-07 00:59:38,567 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_005938
[2025-07-07 00:59:38,567 - __main__] INFO: Log directory: logs/20250707_005938
[2025-07-07 00:59:38,567 - __main__] INFO: Configuration:
[2025-07-07 00:59:38,567 - __main__] INFO:   GTEX_TISSUE: brain_cerebellar_hemisphere
[2025-07-07 00:59:38,568 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 00:59:38,568 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 00:59:38,568 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 00:59:38,568 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 00:59:38,568 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 00:59:38,568 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_cerebellar_hemisphere-var_pc_log2-all.pkl
[2025-07-07 00:59:38,568 - __main__] INFO: Loading correlation data...
[2025-07-07 00:59:50,492 - __main__] INFO: Dataframe shape: (1357283151, 3)
[2025-07-07 00:59:50,492 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 00:59:50,497 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000067048.16 ENSG00000129824.15  0.465088  0.731445  0.777344
ENSG00000012817.15 ENSG00000129824.15  0.457520  0.888184  0.784668
                   ENSG00000067048.16  0.607910  0.824219  0.905273
ENSG00000174576.9  ENSG00000129824.15  0.015945  0.075073  0.141479
                   ENSG00000067048.16  0.032227  0.032562  0.069336
                   ENSG00000012817.15  0.040985  0.051178  0.122986
ENSG00000224114.1  ENSG00000129824.15  0.016800  0.087524  0.066711
                   ENSG00000067048.16  0.017166  0.008141  0.003082
                   ENSG00000012817.15  0.013725  0.028366  0.007450
                   ENSG00000174576.9   0.025681  0.017151  0.178711
ENSG00000196436.8  ENSG00000129824.15  0.016357  0.078369  0.116760
                   ENSG00000067048.16  0.020233  0.068787  0.118530
                   ENSG00000012817.15  0.015160  0.098877  0.139160
                   ENSG00000174576.9   0.007343  0.047455  0.071472
                   ENSG00000224114.1   0.006821  0.082825  0.044586
[2025-07-07 00:59:50,497 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 01:03:52,535 - __main__] INFO: 
                ccc       pearson      spearman
count  1.357283e+09  1.357283e+09  1.357283e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.932383e-04  2.738953e-02  3.076172e-02
50%    5.405426e-03  6.341553e-02  6.915283e-02
75%    2.461243e-02  1.445312e-01  1.408691e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 01:05:24,590 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 01:05:24,594 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000087  0.021805  0.024445
0.242105  0.000165  0.026474  0.029739
0.284211  0.000352  0.031403  0.035248
0.326316  0.000695  0.036652  0.041077
0.368421  0.001239  0.042267  0.047211
0.410526  0.002127  0.048370  0.053711
0.452632  0.003426  0.055023  0.060638
0.494737  0.005161  0.062439  0.068176
0.536842  0.007282  0.070801  0.076294
0.578947  0.009766  0.080383  0.085266
0.621053  0.012482  0.091614  0.095276
0.663158  0.015732  0.105164  0.106812
0.705263  0.019440  0.121887  0.120300
0.747368  0.024231  0.142944  0.139526
0.789474  0.030975  0.170654  0.166504
0.831579  0.041962  0.208984  0.208740
0.873684  0.058197  0.266113  0.275146
0.915789  0.086304  0.359131  0.373291
0.957895  0.146240  0.521484  0.519531
1.000000  1.000000  1.000000  1.000000
[2025-07-07 01:05:43,637 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 01:05:43,638 - __main__] INFO: 0.2    0.000087
0.8    0.033447
Name: ccc, dtype: float64
[2025-07-07 01:05:43,638 - __main__] INFO: CCC lower quantile: 8.696317672729492e-05, upper quantile: 0.033447265625
[2025-07-07 01:06:00,998 - __main__] INFO: Clustermatch quantiles: lower=0.0004527568817138672, upper=0.0189666748046875
[2025-07-07 01:06:19,980 - __main__] INFO: Pearson quantiles: lower=0.0333251953125, upper=0.11956787109375
[2025-07-07 01:06:40,408 - __main__] INFO: Spearman quantiles: lower=0.03741455078125, upper=0.1182861328125
[2025-07-07 01:06:44,756 - __main__] INFO: Pearson higher count: 407311019
[2025-07-07 01:06:47,819 - __main__] INFO: Pearson lower count: 407196078
[2025-07-07 01:06:51,771 - __main__] INFO: Spearman higher count: 407246227
[2025-07-07 01:06:54,846 - __main__] INFO: Spearman lower count: 407277551
[2025-07-07 01:06:59,166 - __main__] INFO: Clustermatch higher count: 407193315
[2025-07-07 01:07:02,243 - __main__] INFO: Clustermatch lower count: 407821961
[2025-07-07 01:07:06,622 - __main__] INFO: Plot dataframe shape: (1357283151, 9)
[2025-07-07 01:07:06,622 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 01:07:15,604 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 01:07:15,604 - __main__] INFO: Data shape for upset plot: (1357283151, 9)
[2025-07-07 01:16:05,213 - __main__] INFO: Gene pairs by categories shape: (1357283151, 9)
[2025-07-07 01:16:05,213 - __main__] INFO: First few entries:
[2025-07-07 01:16:05,222 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.777344
                                                                               True                           True  ...  0.784668
                                                                               True                           True  ...  0.905273
                                                                False          False                         False  ...  0.141479
               True          False              False           False          True                          False  ...  0.069336

[5 rows x 9 columns]
[2025-07-07 01:16:05,222 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 01:18:04,307 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cerebellar_hemisphere_full.svg
[2025-07-07 01:18:04,307 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_005938/upsetplot_gtex_brain_cerebellar_hemisphere_full.svg
[2025-07-07 01:18:04,307 - __main__] INFO: Data shape for trimmed plot: (1357283151, 9)
[2025-07-07 01:21:38,208 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 01:21:38,209 - __main__] INFO: Shape: (1357283151, 9)
[2025-07-07 01:24:57,867 - __main__] INFO: Unique index combinations:
[2025-07-07 01:24:57,874 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 01:24:57,874 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 01:24:57,878 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 01:24:57,879 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 01:24:57,881 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 01:24:57,884 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 01:24:57,886 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 01:36:42,637 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 01:36:42,646 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.777344
                                                                               True                           True  ...  0.784668
                                                                               True                           True  ...  0.905273
                                                                               True                           True  ...  0.828613
                                                                               True                           True  ...  0.608398

[5 rows x 9 columns]
[2025-07-07 01:36:44,957 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 01:37:54,446 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cerebellar_hemisphere_trimmed.svg
[2025-07-07 01:37:54,447 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_005938/upsetplot_gtex_brain_cerebellar_hemisphere_trimmed.svg
[2025-07-07 01:37:54,447 - __main__] INFO: Final dataframe shape: (1357283151, 9)
[2025-07-07 01:37:54,447 - __main__] INFO: Final dataframe head:
[2025-07-07 01:37:54,452 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000067048.16 ENSG00000129824.15            True  ...  0.777344
ENSG00000012817.15 ENSG00000129824.15            True  ...  0.784668
                   ENSG00000067048.16            True  ...  0.905273
ENSG00000174576.9  ENSG00000129824.15           False  ...  0.141479
                   ENSG00000067048.16           False  ...  0.069336

[5 rows x 9 columns]
[2025-07-07 01:37:54,452 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_cerebellar_hemisphere-var_pc_log2.pkl
[2025-07-07 01:37:54,452 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 01:37:58,807 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_cerebellar_hemisphere-var_pc_log2.pkl
[2025-07-07 01:37:58,807 - __main__] INFO: Script completed successfully!
[2025-07-07 01:37:58,807 - __main__] INFO: All outputs saved to log directory: logs/20250707_005938
[2025-07-07 01:38:04,896 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_013804
[2025-07-07 01:38:04,896 - __main__] INFO: Log directory: logs/20250707_013804
[2025-07-07 01:38:04,896 - __main__] INFO: Configuration:
[2025-07-07 01:38:04,896 - __main__] INFO:   GTEX_TISSUE: brain_cerebellum
[2025-07-07 01:38:04,897 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 01:38:04,897 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 01:38:04,897 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 01:38:04,897 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 01:38:04,897 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 01:38:04,897 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_cerebellum-var_pc_log2-all.pkl
[2025-07-07 01:38:04,897 - __main__] INFO: Loading correlation data...
[2025-07-07 01:38:16,947 - __main__] INFO: Dataframe shape: (1373692320, 3)
[2025-07-07 01:38:16,947 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 01:38:16,951 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000229807.10 ENSG00000129824.15  0.291016  0.773438  0.556152
ENSG00000067048.16 ENSG00000129824.15  0.513184  0.840820  0.811523
                   ENSG00000229807.10  0.304688  0.691406  0.519043
ENSG00000012817.15 ENSG00000129824.15  0.565430  0.957031  0.869141
                   ENSG00000229807.10  0.320801  0.776855  0.518555
                   ENSG00000067048.16  0.587402  0.882324  0.873047
ENSG00000134184.12 ENSG00000129824.15  0.004639  0.020203  0.021317
                   ENSG00000229807.10  0.008705  0.062744  0.082458
                   ENSG00000067048.16  0.009705  0.030991  0.024719
                   ENSG00000012817.15  0.005348  0.031494  0.007160
ENSG00000196436.8  ENSG00000129824.15  0.020340  0.184937  0.157104
                   ENSG00000229807.10  0.017944  0.079041  0.005745
                   ENSG00000067048.16  0.016327  0.152466  0.122070
                   ENSG00000012817.15  0.044983  0.181396  0.183594
                   ENSG00000134184.12  0.017929  0.079956  0.005688
[2025-07-07 01:38:16,951 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 01:42:28,676 - __main__] INFO: 
                ccc       pearson      spearman
count  1.373692e+09  1.373692e+09  1.373692e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.810789e-04  2.543640e-02  2.783203e-02
50%    4.600525e-03  5.749512e-02  6.170654e-02
75%    1.893616e-02  1.229858e-01  1.199951e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 01:44:02,398 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 01:44:02,402 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000069  0.020279  0.022141
0.242105  0.000142  0.024597  0.026932
0.284211  0.000305  0.029099  0.031860
0.326316  0.000617  0.033875  0.037048
0.368421  0.001099  0.038910  0.042480
0.410526  0.001860  0.044342  0.048218
0.452632  0.002956  0.050201  0.054291
0.494737  0.004398  0.056641  0.060852
0.536842  0.006134  0.063782  0.067871
0.578947  0.008080  0.071838  0.075623
0.621053  0.010246  0.081055  0.084167
0.663158  0.012550  0.091980  0.093750
0.705263  0.015221  0.105225  0.104858
0.747368  0.018677  0.121765  0.118958
0.789474  0.023163  0.143433  0.138672
0.831579  0.030411  0.173584  0.168213
0.873684  0.041534  0.219360  0.217651
0.915789  0.061890  0.297607  0.301758
0.957895  0.109253  0.450439  0.445068
1.000000  1.000000  1.000000  1.000000
[2025-07-07 01:44:19,838 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 01:44:19,839 - __main__] INFO: 0.2    0.000069
0.8    0.024887
Name: ccc, dtype: float64
[2025-07-07 01:44:19,839 - __main__] INFO: CCC lower quantile: 6.914138793945312e-05, upper quantile: 0.0248870849609375
[2025-07-07 01:44:38,948 - __main__] INFO: Clustermatch quantiles: lower=0.00041031837463378906, upper=0.0148162841796875
[2025-07-07 01:45:00,798 - __main__] INFO: Pearson quantiles: lower=0.030853271484375, upper=0.1033935546875
[2025-07-07 01:45:22,467 - __main__] INFO: Spearman quantiles: lower=0.03375244140625, upper=0.1033935546875
[2025-07-07 01:45:26,817 - __main__] INFO: Pearson higher count: 412277328
[2025-07-07 01:45:29,918 - __main__] INFO: Pearson lower count: 412125587
[2025-07-07 01:45:34,268 - __main__] INFO: Spearman higher count: 412190942
[2025-07-07 01:45:37,367 - __main__] INFO: Spearman lower count: 412152506
[2025-07-07 01:45:41,730 - __main__] INFO: Clustermatch higher count: 412162327
[2025-07-07 01:45:44,919 - __main__] INFO: Clustermatch lower count: 412112743
[2025-07-07 01:45:48,936 - __main__] INFO: Plot dataframe shape: (1373692320, 9)
[2025-07-07 01:45:48,936 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 01:45:58,027 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 01:45:58,027 - __main__] INFO: Data shape for upset plot: (1373692320, 9)
[2025-07-07 01:54:46,222 - __main__] INFO: Gene pairs by categories shape: (1373692320, 9)
[2025-07-07 01:54:46,222 - __main__] INFO: First few entries:
[2025-07-07 01:54:46,230 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.556152
                                                                               True                           True  ...  0.811523
                                                                               True                           True  ...  0.519043
                                                                               True                           True  ...  0.869141
                                                                               True                           True  ...  0.518555

[5 rows x 9 columns]
[2025-07-07 01:54:46,231 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 01:56:46,899 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cerebellum_full.svg
[2025-07-07 01:56:46,899 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_013804/upsetplot_gtex_brain_cerebellum_full.svg
[2025-07-07 01:56:46,899 - __main__] INFO: Data shape for trimmed plot: (1373692320, 9)
[2025-07-07 02:00:27,911 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 02:00:27,912 - __main__] INFO: Shape: (1373692320, 9)
[2025-07-07 02:03:50,150 - __main__] INFO: Unique index combinations:
[2025-07-07 02:03:50,156 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 02:03:50,157 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 02:03:50,160 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 02:03:50,161 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 02:03:50,164 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 02:03:50,166 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 02:03:50,169 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 02:16:05,032 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 02:16:05,040 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.556152
                                                                               True                           True  ...  0.811523
                                                                               True                           True  ...  0.519043
                                                                               True                           True  ...  0.869141
                                                                               True                           True  ...  0.518555

[5 rows x 9 columns]
[2025-07-07 02:16:06,473 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 02:17:16,227 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cerebellum_trimmed.svg
[2025-07-07 02:17:16,227 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_013804/upsetplot_gtex_brain_cerebellum_trimmed.svg
[2025-07-07 02:17:16,227 - __main__] INFO: Final dataframe shape: (1373692320, 9)
[2025-07-07 02:17:16,227 - __main__] INFO: Final dataframe head:
[2025-07-07 02:17:16,233 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000229807.10 ENSG00000129824.15            True  ...  0.556152
ENSG00000067048.16 ENSG00000129824.15            True  ...  0.811523
                   ENSG00000229807.10            True  ...  0.519043
ENSG00000012817.15 ENSG00000129824.15            True  ...  0.869141
                   ENSG00000229807.10            True  ...  0.518555

[5 rows x 9 columns]
[2025-07-07 02:17:16,233 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_cerebellum-var_pc_log2.pkl
[2025-07-07 02:17:16,233 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 02:17:20,696 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_cerebellum-var_pc_log2.pkl
[2025-07-07 02:17:20,696 - __main__] INFO: Script completed successfully!
[2025-07-07 02:17:20,696 - __main__] INFO: All outputs saved to log directory: logs/20250707_013804
[2025-07-07 02:17:26,837 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_021726
[2025-07-07 02:17:26,837 - __main__] INFO: Log directory: logs/20250707_021726
[2025-07-07 02:17:26,838 - __main__] INFO: Configuration:
[2025-07-07 02:17:26,838 - __main__] INFO:   GTEX_TISSUE: brain_cortex
[2025-07-07 02:17:26,838 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 02:17:26,838 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 02:17:26,838 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 02:17:26,838 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 02:17:26,838 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 02:17:26,838 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_cortex-var_pc_log2-all.pkl
[2025-07-07 02:17:26,838 - __main__] INFO: Loading correlation data...
[2025-07-07 02:17:39,857 - __main__] INFO: Dataframe shape: (1428371076, 3)
[2025-07-07 02:17:39,857 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 02:17:39,862 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000129824.15 ENSG00000134184.12  0.013107  0.062927  0.005623
ENSG00000196136.17 ENSG00000134184.12  0.005913  0.049286  0.015961
                   ENSG00000129824.15  0.020325  0.107605  0.034882
ENSG00000224114.1  ENSG00000134184.12  0.013748  0.073669  0.020325
                   ENSG00000129824.15  0.026321  0.082275  0.116516
                   ENSG00000196136.17  0.019531  0.091064  0.108215
ENSG00000012817.15 ENSG00000134184.12  0.012894  0.068054  0.014252
                   ENSG00000129824.15  0.632324  0.896484  0.881836
                   ENSG00000196136.17  0.017487  0.056030  0.002037
                   ENSG00000224114.1   0.011719  0.073303  0.083252
ENSG00000173110.7  ENSG00000134184.12  0.010429  0.066589  0.050537
                   ENSG00000129824.15  0.020035  0.036926  0.036652
                   ENSG00000196136.17  0.245117  0.232544  0.619141
                   ENSG00000224114.1   0.009674  0.104065  0.089966
                   ENSG00000012817.15  0.014008  0.055939  0.001656
[2025-07-07 02:17:39,862 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 02:21:55,434 - __main__] INFO: 
                ccc       pearson      spearman
count  1.428371e+09  1.428371e+09  1.428371e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.470016e-04  2.796936e-02  3.105164e-02
50%    5.580902e-03  7.055664e-02  7.019043e-02
75%    2.423096e-02  1.782227e-01  1.423340e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 02:23:32,662 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 02:23:32,666 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000088  0.021942  0.024551
0.242105  0.000212  0.026978  0.029999
0.284211  0.000437  0.032379  0.035706
0.326316  0.000812  0.038269  0.041656
0.368421  0.001428  0.044708  0.047882
0.410526  0.002365  0.051880  0.054535
0.452632  0.003672  0.059998  0.061584
0.494737  0.005337  0.069275  0.069153
0.536842  0.007301  0.080139  0.077454
0.578947  0.009552  0.092957  0.086548
0.621053  0.012062  0.108215  0.096619
0.663158  0.014961  0.126587  0.108032
0.705263  0.018738  0.148804  0.122375
0.747368  0.023758  0.176270  0.140991
0.789474  0.030624  0.211060  0.166626
0.831579  0.042725  0.257080  0.205200
0.873684  0.059784  0.321777  0.265869
0.915789  0.092407  0.418945  0.365234
0.957895  0.169434  0.575195  0.529785
1.000000  1.000000  1.000000  1.000000
[2025-07-07 02:23:52,536 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 02:23:52,537 - __main__] INFO: 0.2    0.000088
0.8    0.033234
Name: ccc, dtype: float64
[2025-07-07 02:23:52,537 - __main__] INFO: CCC lower quantile: 8.797645568847656e-05, upper quantile: 0.033233642578125
[2025-07-07 02:24:14,283 - __main__] INFO: Clustermatch quantiles: lower=0.0005559921264648438, upper=0.018157958984375
[2025-07-07 02:24:33,226 - __main__] INFO: Pearson quantiles: lower=0.034515380859375, upper=0.145751953125
[2025-07-07 02:24:55,802 - __main__] INFO: Spearman quantiles: lower=0.037872314453125, upper=0.120361328125
[2025-07-07 02:25:00,322 - __main__] INFO: Pearson higher count: 428662801
[2025-07-07 02:25:03,541 - __main__] INFO: Pearson lower count: 428514402
[2025-07-07 02:25:07,890 - __main__] INFO: Spearman higher count: 428603918
[2025-07-07 02:25:11,125 - __main__] INFO: Spearman lower count: 428761864
[2025-07-07 02:25:15,677 - __main__] INFO: Clustermatch higher count: 428618047
[2025-07-07 02:25:18,911 - __main__] INFO: Clustermatch lower count: 430600228
[2025-07-07 02:25:23,844 - __main__] INFO: Plot dataframe shape: (1428371076, 9)
[2025-07-07 02:25:23,845 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 02:25:33,436 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 02:25:33,437 - __main__] INFO: Data shape for upset plot: (1428371076, 9)
[2025-07-07 02:34:36,752 - __main__] INFO: Gene pairs by categories shape: (1428371076, 9)
[2025-07-07 02:34:36,752 - __main__] INFO: First few entries:
[2025-07-07 02:34:36,761 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
True           False         False              False           False          False                         False  ...  0.005623
                                                                               False                         False  ...  0.015961
                                                                               True                          False  ...  0.034882
                                                                               False                         False  ...  0.020325
False          False         False              False           False          True                          False  ...  0.116516

[5 rows x 9 columns]
[2025-07-07 02:34:36,761 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 02:36:42,547 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cortex_full.svg
[2025-07-07 02:36:42,548 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_021726/upsetplot_gtex_brain_cortex_full.svg
[2025-07-07 02:36:42,548 - __main__] INFO: Data shape for trimmed plot: (1428371076, 9)
[2025-07-07 02:40:44,349 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 02:40:44,350 - __main__] INFO: Shape: (1428371076, 9)
[2025-07-07 02:44:12,434 - __main__] INFO: Unique index combinations:
[2025-07-07 02:44:12,441 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 02:44:12,441 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 02:44:12,445 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 02:44:12,446 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 02:44:12,448 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 02:44:12,451 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 02:44:12,453 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 02:56:40,547 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 02:56:40,556 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.881836
                                                                               True                           True  ...  0.619141
                                                                               True                           True  ...  0.559570
                                                                               True                           True  ...  0.557129
                                                                               True                           True  ...  0.901367

[5 rows x 9 columns]
[2025-07-07 02:56:42,121 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 02:57:56,804 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cortex_trimmed.svg
[2025-07-07 02:57:56,804 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_021726/upsetplot_gtex_brain_cortex_trimmed.svg
[2025-07-07 02:57:56,804 - __main__] INFO: Final dataframe shape: (1428371076, 9)
[2025-07-07 02:57:56,804 - __main__] INFO: Final dataframe head:
[2025-07-07 02:57:56,810 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000129824.15 ENSG00000134184.12           False  ...  0.005623
ENSG00000196136.17 ENSG00000134184.12           False  ...  0.015961
                   ENSG00000129824.15           False  ...  0.034882
ENSG00000224114.1  ENSG00000134184.12           False  ...  0.020325
                   ENSG00000129824.15           False  ...  0.116516

[5 rows x 9 columns]
[2025-07-07 02:57:56,810 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_cortex-var_pc_log2.pkl
[2025-07-07 02:57:56,810 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 02:58:01,408 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_cortex-var_pc_log2.pkl
[2025-07-07 02:58:01,408 - __main__] INFO: Script completed successfully!
[2025-07-07 02:58:01,408 - __main__] INFO: All outputs saved to log directory: logs/20250707_021726
[2025-07-07 02:58:07,547 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_025807
[2025-07-07 02:58:07,547 - __main__] INFO: Log directory: logs/20250707_025807
[2025-07-07 02:58:07,547 - __main__] INFO: Configuration:
[2025-07-07 02:58:07,547 - __main__] INFO:   GTEX_TISSUE: brain_frontal_cortex_ba9
[2025-07-07 02:58:07,547 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 02:58:07,547 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 02:58:07,547 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 02:58:07,547 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 02:58:07,547 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 02:58:07,547 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_frontal_cortex_ba9-var_pc_log2-all.pkl
[2025-07-07 02:58:07,547 - __main__] INFO: Loading correlation data...
[2025-07-07 02:58:20,660 - __main__] INFO: Dataframe shape: (1359576585, 3)
[2025-07-07 02:58:20,660 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 02:58:20,665 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000129824.15 ENSG00000134184.12  0.015915  0.034760  0.029633
ENSG00000196136.17 ENSG00000134184.12  0.010536  0.045654  0.008209
                   ENSG00000129824.15  0.023834  0.076233  0.102478
ENSG00000173110.7  ENSG00000134184.12  0.037079  0.037628  0.133179
                   ENSG00000129824.15  0.008957  0.016953  0.081848
                   ENSG00000196136.17  0.194092  0.227661  0.531250
ENSG00000224114.1  ENSG00000134184.12  0.017227  0.002108  0.028564
                   ENSG00000129824.15  0.020294  0.007362  0.053711
                   ENSG00000196136.17  0.017654  0.221802  0.111206
                   ENSG00000173110.7   0.013832  0.102417  0.024261
ENSG00000225972.1  ENSG00000134184.12  0.020218  0.134888  0.150024
                   ENSG00000129824.15  0.020325  0.051727  0.060852
                   ENSG00000196136.17  0.019516  0.100952  0.158569
                   ENSG00000173110.7   0.017487  0.029541  0.077820
                   ENSG00000224114.1   0.022751  0.058258  0.085327
[2025-07-07 02:58:20,665 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 03:02:21,915 - __main__] INFO: 
                ccc       pearson      spearman
count  1.359577e+09  1.359577e+09  1.359577e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.828671e-04  2.938843e-02  3.253174e-02
50%    5.485535e-03  6.890869e-02  7.342529e-02
75%    2.601624e-02  1.629639e-01  1.520996e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 03:03:53,377 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 03:03:53,381 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000074  0.023438  0.025909
0.242105  0.000157  0.028427  0.031433
0.284211  0.000368  0.033722  0.037292
0.326316  0.000701  0.039368  0.043488
0.368421  0.001279  0.045441  0.049988
0.410526  0.002167  0.052094  0.056915
0.452632  0.003485  0.059479  0.064331
0.494737  0.005253  0.067749  0.072388
0.536842  0.007423  0.077271  0.081055
0.578947  0.009964  0.088318  0.090759
0.621053  0.012878  0.101440  0.101501
0.663158  0.016144  0.117249  0.113770
0.705263  0.020218  0.136719  0.129272
0.747368  0.025589  0.161133  0.150513
0.789474  0.033325  0.192749  0.180786
0.831579  0.044861  0.235474  0.227539
0.873684  0.064697  0.297119  0.301758
0.915789  0.104187  0.393066  0.416016
0.957895  0.194092  0.554688  0.588379
1.000000  1.000000  1.000000  1.000000
[2025-07-07 03:04:11,038 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 03:04:11,039 - __main__] INFO: 0.2    0.000074
0.8    0.035126
Name: ccc, dtype: float64
[2025-07-07 03:04:11,039 - __main__] INFO: CCC lower quantile: 7.414817810058594e-05, upper quantile: 0.035125732421875
[2025-07-07 03:04:29,860 - __main__] INFO: Clustermatch quantiles: lower=0.0004649162292480469, upper=0.0197601318359375
[2025-07-07 03:04:50,412 - __main__] INFO: Pearson quantiles: lower=0.035797119140625, upper=0.134033203125
[2025-07-07 03:05:11,217 - __main__] INFO: Spearman quantiles: lower=0.039581298828125, upper=0.1270751953125
[2025-07-07 03:05:15,521 - __main__] INFO: Pearson higher count: 408042910
[2025-07-07 03:05:18,590 - __main__] INFO: Pearson lower count: 408166291
[2025-07-07 03:05:22,545 - __main__] INFO: Spearman higher count: 408027636
[2025-07-07 03:05:25,623 - __main__] INFO: Spearman lower count: 408051557
[2025-07-07 03:05:29,971 - __main__] INFO: Clustermatch higher count: 408089898
[2025-07-07 03:05:33,053 - __main__] INFO: Clustermatch lower count: 407884175
[2025-07-07 03:05:37,556 - __main__] INFO: Plot dataframe shape: (1359576585, 9)
[2025-07-07 03:05:37,556 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 03:05:46,714 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 03:05:46,714 - __main__] INFO: Data shape for upset plot: (1359576585, 9)
[2025-07-07 03:14:01,289 - __main__] INFO: Gene pairs by categories shape: (1359576585, 9)
[2025-07-07 03:14:01,290 - __main__] INFO: First few entries:
[2025-07-07 03:14:01,298 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
True           True          False              False           False          False                         False  ...  0.029633
               False         False              False           False          False                         False  ...  0.008209
False          False         False              False           False          True                          False  ...  0.102478
                                                True            False          True                          False  ...  0.133179
               True          False              False           False          False                         False  ...  0.081848

[5 rows x 9 columns]
[2025-07-07 03:14:01,298 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 03:16:00,607 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_frontal_cortex_ba9_full.svg
[2025-07-07 03:16:00,608 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_025807/upsetplot_gtex_brain_frontal_cortex_ba9_full.svg
[2025-07-07 03:16:00,608 - __main__] INFO: Data shape for trimmed plot: (1359576585, 9)
[2025-07-07 03:19:42,137 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 03:19:42,137 - __main__] INFO: Shape: (1359576585, 9)
[2025-07-07 03:23:01,014 - __main__] INFO: Unique index combinations:
[2025-07-07 03:23:01,021 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 03:23:01,022 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 03:23:01,025 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 03:23:01,026 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 03:23:01,029 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 03:23:01,031 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 03:23:01,033 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 03:35:09,144 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 03:35:09,153 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.531250
                                                                               True                           True  ...  0.150024
                                                                               True                           True  ...  0.875488
                                                                               True                           True  ...  0.851074
                                                                               True                           True  ...  0.932129

[5 rows x 9 columns]
[2025-07-07 03:35:10,926 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 03:36:20,800 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_frontal_cortex_ba9_trimmed.svg
[2025-07-07 03:36:20,801 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_025807/upsetplot_gtex_brain_frontal_cortex_ba9_trimmed.svg
[2025-07-07 03:36:20,801 - __main__] INFO: Final dataframe shape: (1359576585, 9)
[2025-07-07 03:36:20,801 - __main__] INFO: Final dataframe head:
[2025-07-07 03:36:20,806 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000129824.15 ENSG00000134184.12           False  ...  0.029633
ENSG00000196136.17 ENSG00000134184.12           False  ...  0.008209
                   ENSG00000129824.15           False  ...  0.102478
ENSG00000173110.7  ENSG00000134184.12           False  ...  0.133179
                   ENSG00000129824.15           False  ...  0.081848

[5 rows x 9 columns]
[2025-07-07 03:36:20,806 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_frontal_cortex_ba9-var_pc_log2.pkl
[2025-07-07 03:36:20,806 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 03:36:25,228 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_frontal_cortex_ba9-var_pc_log2.pkl
[2025-07-07 03:36:25,228 - __main__] INFO: Script completed successfully!
[2025-07-07 03:36:25,228 - __main__] INFO: All outputs saved to log directory: logs/20250707_025807
[2025-07-07 03:36:31,297 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_033631
[2025-07-07 03:36:31,297 - __main__] INFO: Log directory: logs/20250707_033631
[2025-07-07 03:36:31,297 - __main__] INFO: Configuration:
[2025-07-07 03:36:31,298 - __main__] INFO:   GTEX_TISSUE: brain_hippocampus
[2025-07-07 03:36:31,298 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 03:36:31,298 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 03:36:31,298 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 03:36:31,298 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 03:36:31,298 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 03:36:31,298 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_hippocampus-var_pc_log2-all.pkl
[2025-07-07 03:36:31,298 - __main__] INFO: Loading correlation data...
[2025-07-07 03:36:44,774 - __main__] INFO: Dataframe shape: (1381565895, 3)
[2025-07-07 03:36:44,774 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 03:36:44,779 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000129824.15 ENSG00000134184.12  0.025360  0.100037  0.097839
ENSG00000118271.9  ENSG00000134184.12  0.010353  0.084167  0.036285
                   ENSG00000129824.15  0.020569  0.058502  0.021820
ENSG00000224114.1  ENSG00000134184.12  0.023422  0.045258  0.074280
                   ENSG00000129824.15  0.039398  0.037384  0.025986
                   ENSG00000118271.9   0.006786  0.083374  0.080933
ENSG00000196136.17 ENSG00000134184.12  0.023209  0.059784  0.048492
                   ENSG00000129824.15  0.023148  0.175659  0.171753
                   ENSG00000118271.9   0.005455  0.004265  0.090637
                   ENSG00000224114.1   0.022690  0.011559  0.062195
ENSG00000225972.1  ENSG00000134184.12  0.005947  0.098389  0.104614
                   ENSG00000129824.15  0.018066  0.030090  0.142212
                   ENSG00000118271.9   0.005222  0.140503  0.059540
                   ENSG00000224114.1   0.037354  0.124695  0.084412
                   ENSG00000196136.17  0.056274  0.020874  0.229370
[2025-07-07 03:36:44,779 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 03:40:45,340 - __main__] INFO: 
                ccc       pearson      spearman
count  1.381566e+09  1.381566e+09  1.381566e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.717972e-04  3.128052e-02  3.768921e-02
50%    7.270813e-03  7.885742e-02  8.740234e-02
75%    3.842163e-02  2.100830e-01  1.979980e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 03:42:17,791 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 03:42:17,795 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000104  0.024765  0.029816
0.242105  0.000219  0.030197  0.036438
0.284211  0.000473  0.036072  0.043365
0.326316  0.000933  0.042450  0.050781
0.368421  0.001666  0.049500  0.058655
0.410526  0.002880  0.057465  0.067078
0.452632  0.004608  0.066589  0.076172
0.494737  0.006927  0.077393  0.086060
0.536842  0.009857  0.090332  0.096985
0.578947  0.013390  0.106140  0.109253
0.621053  0.017548  0.125366  0.123108
0.663158  0.022980  0.148315  0.141235
0.705263  0.029633  0.175415  0.164429
0.747368  0.038422  0.207764  0.195679
0.789474  0.050232  0.247314  0.239258
0.831579  0.067627  0.297119  0.299561
0.873684  0.092590  0.362549  0.380615
0.915789  0.139038  0.453613  0.489502
0.957895  0.238525  0.593262  0.640625
1.000000  1.000000  1.000000  1.000000
[2025-07-07 03:42:34,143 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 03:42:34,144 - __main__] INFO: 0.2    0.000104
0.8    0.054626
Name: ccc, dtype: float64
[2025-07-07 03:42:34,144 - __main__] INFO: CCC lower quantile: 0.00010412931442260742, upper quantile: 0.05462646484375
[2025-07-07 03:42:49,005 - __main__] INFO: Clustermatch quantiles: lower=0.0006260871887207031, upper=0.0286712646484375
[2025-07-07 03:43:09,077 - __main__] INFO: Pearson quantiles: lower=0.03839111328125, upper=0.1717529296875
[2025-07-07 03:43:28,107 - __main__] INFO: Spearman quantiles: lower=0.046142578125, upper=0.1611328125
[2025-07-07 03:43:32,474 - __main__] INFO: Pearson higher count: 414628595
[2025-07-07 03:43:35,591 - __main__] INFO: Pearson lower count: 414660203
[2025-07-07 03:43:39,368 - __main__] INFO: Spearman higher count: 414654907
[2025-07-07 03:43:42,494 - __main__] INFO: Spearman lower count: 414649413
[2025-07-07 03:43:46,892 - __main__] INFO: Clustermatch higher count: 414687985
[2025-07-07 03:43:50,018 - __main__] INFO: Clustermatch lower count: 414482699
[2025-07-07 03:43:54,632 - __main__] INFO: Plot dataframe shape: (1381565895, 9)
[2025-07-07 03:43:54,633 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 03:44:03,881 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 03:44:03,881 - __main__] INFO: Data shape for upset plot: (1381565895, 9)
[2025-07-07 03:52:25,727 - __main__] INFO: Gene pairs by categories shape: (1381565895, 9)
[2025-07-07 03:52:25,727 - __main__] INFO: First few entries:
[2025-07-07 03:52:25,735 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              False           False          False                         False  ...  0.097839
True           False         False              False           False          False                         False  ...  0.036285
                                                                               False                         False  ...  0.021820
False          False         False              False           False          False                         False  ...  0.074280
True           True          False              False           False          True                          False  ...  0.025986

[5 rows x 9 columns]
[2025-07-07 03:52:25,735 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 03:54:27,079 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_hippocampus_full.svg
[2025-07-07 03:54:27,079 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_033631/upsetplot_gtex_brain_hippocampus_full.svg
[2025-07-07 03:54:27,079 - __main__] INFO: Data shape for trimmed plot: (1381565895, 9)
[2025-07-07 03:57:56,470 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 03:57:56,470 - __main__] INFO: Shape: (1381565895, 9)
[2025-07-07 04:01:20,068 - __main__] INFO: Unique index combinations:
[2025-07-07 04:01:20,074 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 04:01:20,075 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 04:01:20,078 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 04:01:20,079 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 04:01:20,082 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 04:01:20,084 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 04:01:20,087 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 04:14:14,539 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 04:14:14,548 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.338867
                                                                               True                           True  ...  0.573242
                                                                               True                           True  ...  0.344971
                                                                               True                           True  ...  0.943359
                                                                               True                           True  ...  0.414795

[5 rows x 9 columns]
[2025-07-07 04:14:15,985 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 04:15:26,515 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_hippocampus_trimmed.svg
[2025-07-07 04:15:26,516 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_033631/upsetplot_gtex_brain_hippocampus_trimmed.svg
[2025-07-07 04:15:26,516 - __main__] INFO: Final dataframe shape: (1381565895, 9)
[2025-07-07 04:15:26,516 - __main__] INFO: Final dataframe head:
[2025-07-07 04:15:26,522 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000129824.15 ENSG00000134184.12           False  ...  0.097839
ENSG00000118271.9  ENSG00000134184.12           False  ...  0.036285
                   ENSG00000129824.15           False  ...  0.021820
ENSG00000224114.1  ENSG00000134184.12           False  ...  0.074280
                   ENSG00000129824.15           False  ...  0.025986

[5 rows x 9 columns]
[2025-07-07 04:15:26,522 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_hippocampus-var_pc_log2.pkl
[2025-07-07 04:15:26,522 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 04:15:30,952 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_hippocampus-var_pc_log2.pkl
[2025-07-07 04:15:30,952 - __main__] INFO: Script completed successfully!
[2025-07-07 04:15:30,952 - __main__] INFO: All outputs saved to log directory: logs/20250707_033631
[2025-07-07 04:15:36,972 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_041536
[2025-07-07 04:15:36,972 - __main__] INFO: Log directory: logs/20250707_041536
[2025-07-07 04:15:36,972 - __main__] INFO: Configuration:
[2025-07-07 04:15:36,972 - __main__] INFO:   GTEX_TISSUE: brain_hypothalamus
[2025-07-07 04:15:36,972 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 04:15:36,972 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 04:15:36,972 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 04:15:36,972 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 04:15:36,972 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 04:15:36,972 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_hypothalamus-var_pc_log2-all.pkl
[2025-07-07 04:15:36,972 - __main__] INFO: Loading correlation data...
[2025-07-07 04:15:49,035 - __main__] INFO: Dataframe shape: (1371020430, 3)
[2025-07-07 04:15:49,036 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 04:15:49,040 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000101405.3  ENSG00000101200.5   0.884277  0.667969  0.938965
ENSG00000183395.4  ENSG00000101200.5   0.064453  0.105530  0.017975
                   ENSG00000101405.3   0.058563  0.106384  0.067383
ENSG00000161610.1  ENSG00000101200.5   0.051086  0.091492  0.250244
                   ENSG00000101405.3   0.062500  0.065613  0.330322
                   ENSG00000183395.4   0.411133  0.459473  0.807617
ENSG00000140287.10 ENSG00000101200.5   0.073975  0.162964  0.133179
                   ENSG00000101405.3   0.070312  0.175781  0.087952
                   ENSG00000183395.4   0.194458  0.215332  0.609863
                   ENSG00000161610.1   0.140259  0.003323  0.517090
ENSG00000134184.12 ENSG00000101200.5   0.009834  0.003056  0.084778
                   ENSG00000101405.3   0.010452  0.051239  0.035919
                   ENSG00000183395.4   0.006565  0.065979  0.085266
                   ENSG00000161610.1   0.010826  0.099426  0.124268
                   ENSG00000140287.10  0.018906  0.039948  0.117981
[2025-07-07 04:15:49,040 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 04:19:44,189 - __main__] INFO: 
                ccc       pearson      spearman
count  1.371020e+09  1.371020e+09  1.371020e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.989769e-04  3.121948e-02  3.854370e-02
50%    7.759094e-03  7.922363e-02  8.966064e-02
75%    3.942871e-02  2.178955e-01  2.078857e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 04:21:14,846 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 04:21:14,849 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000080  0.024796  0.030548
0.242105  0.000247  0.030167  0.037292
0.284211  0.000535  0.035950  0.044403
0.326316  0.001014  0.042267  0.051971
0.368421  0.001836  0.049316  0.060028
0.410526  0.003117  0.057312  0.068726
0.452632  0.004978  0.066589  0.078064
0.494737  0.007416  0.077637  0.088318
0.536842  0.010414  0.091125  0.099548
0.578947  0.013962  0.107605  0.112061
0.621053  0.018051  0.127808  0.126953
0.663158  0.023468  0.151978  0.146362
0.705263  0.030365  0.180908  0.171387
0.747368  0.038666  0.215576  0.205322
0.789474  0.051880  0.257812  0.252686
0.831579  0.069824  0.310791  0.317627
0.873684  0.102295  0.379639  0.403320
0.915789  0.151367  0.473145  0.515137
0.957895  0.251465  0.610840  0.665527
1.000000  1.000000  1.000000  1.000000
[2025-07-07 04:21:33,745 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 04:21:33,746 - __main__] INFO: 0.2    0.00008
0.8    0.05658
Name: ccc, dtype: float64
[2025-07-07 04:21:33,746 - __main__] INFO: CCC lower quantile: 7.981061935424805e-05, upper quantile: 0.05657958984375
[2025-07-07 04:21:52,779 - __main__] INFO: Clustermatch quantiles: lower=0.0006656646728515625, upper=0.029266357421875
[2025-07-07 04:22:10,917 - __main__] INFO: Pearson quantiles: lower=0.038238525390625, upper=0.177001953125
[2025-07-07 04:22:29,267 - __main__] INFO: Spearman quantiles: lower=0.04718017578125, upper=0.1678466796875
[2025-07-07 04:22:33,224 - __main__] INFO: Pearson higher count: 411436657
[2025-07-07 04:22:36,319 - __main__] INFO: Pearson lower count: 411316560
[2025-07-07 04:22:39,785 - __main__] INFO: Spearman higher count: 411343166
[2025-07-07 04:22:42,885 - __main__] INFO: Spearman lower count: 411459873
[2025-07-07 04:22:47,230 - __main__] INFO: Clustermatch higher count: 411356890
[2025-07-07 04:22:50,331 - __main__] INFO: Clustermatch lower count: 411573251
[2025-07-07 04:22:54,682 - __main__] INFO: Plot dataframe shape: (1371020430, 9)
[2025-07-07 04:22:54,683 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 04:23:03,750 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 04:23:03,750 - __main__] INFO: Data shape for upset plot: (1371020430, 9)
[2025-07-07 04:31:24,334 - __main__] INFO: Gene pairs by categories shape: (1371020430, 9)
[2025-07-07 04:31:24,334 - __main__] INFO: First few entries:
[2025-07-07 04:31:24,342 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.938965
True           False         False              False           False          True                          False  ...  0.017975
False          False         False              False           False          True                          False  ...  0.067383
                                                True            False          True                          False  ...  0.250244
                                                                               True                          False  ...  0.330322

[5 rows x 9 columns]
[2025-07-07 04:31:24,342 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 04:33:30,334 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_hypothalamus_full.svg
[2025-07-07 04:33:30,335 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_041536/upsetplot_gtex_brain_hypothalamus_full.svg
[2025-07-07 04:33:30,335 - __main__] INFO: Data shape for trimmed plot: (1371020430, 9)
[2025-07-07 04:37:04,482 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 04:37:04,482 - __main__] INFO: Shape: (1371020430, 9)
[2025-07-07 04:41:45,649 - __main__] INFO: Unique index combinations:
[2025-07-07 04:41:45,655 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 04:41:45,656 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 04:41:45,659 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 04:41:45,660 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 04:41:45,662 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 04:41:45,665 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 04:41:45,667 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 04:53:36,967 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 04:53:36,976 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.938965
                                                                               True                           True  ...  0.807617
                                                                               True                           True  ...  0.609863
                                                                               True                           True  ...  0.872070
                                                                               True                           True  ...  0.874023

[5 rows x 9 columns]
[2025-07-07 04:53:38,437 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 04:54:49,010 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_hypothalamus_trimmed.svg
[2025-07-07 04:54:49,011 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_041536/upsetplot_gtex_brain_hypothalamus_trimmed.svg
[2025-07-07 04:54:49,011 - __main__] INFO: Final dataframe shape: (1371020430, 9)
[2025-07-07 04:54:49,011 - __main__] INFO: Final dataframe head:
[2025-07-07 04:54:49,016 - __main__] INFO: 
                                     Pearson (high)  ...  spearman
ENSG00000101405.3 ENSG00000101200.5            True  ...  0.938965
ENSG00000183395.4 ENSG00000101200.5           False  ...  0.017975
                  ENSG00000101405.3           False  ...  0.067383
ENSG00000161610.1 ENSG00000101200.5           False  ...  0.250244
                  ENSG00000101405.3           False  ...  0.330322

[5 rows x 9 columns]
[2025-07-07 04:54:49,016 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_hypothalamus-var_pc_log2.pkl
[2025-07-07 04:54:49,016 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 04:54:53,573 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_hypothalamus-var_pc_log2.pkl
[2025-07-07 04:54:53,573 - __main__] INFO: Script completed successfully!
[2025-07-07 04:54:53,573 - __main__] INFO: All outputs saved to log directory: logs/20250707_041536
[2025-07-07 04:54:59,628 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_045459
[2025-07-07 04:54:59,628 - __main__] INFO: Log directory: logs/20250707_045459
[2025-07-07 04:54:59,628 - __main__] INFO: Configuration:
[2025-07-07 04:54:59,628 - __main__] INFO:   GTEX_TISSUE: brain_nucleus_accumbens_basal_ganglia
[2025-07-07 04:54:59,628 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 04:54:59,628 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 04:54:59,628 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 04:54:59,628 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 04:54:59,628 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 04:54:59,628 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_nucleus_accumbens_basal_ganglia-var_pc_log2-all.pkl
[2025-07-07 04:54:59,628 - __main__] INFO: Loading correlation data...
[2025-07-07 04:55:11,430 - __main__] INFO: Dataframe shape: (1389198405, 3)
[2025-07-07 04:55:11,430 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 04:55:11,435 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000129824.15 ENSG00000134184.12  0.026581  0.123047  0.176270
ENSG00000196136.17 ENSG00000134184.12  0.017517  0.041321  0.107727
                   ENSG00000129824.15  0.023499  0.017181  0.080261
ENSG00000181195.10 ENSG00000134184.12  0.030533  0.218872  0.243408
                   ENSG00000129824.15  0.211548  0.326416  0.406006
                   ENSG00000196136.17  0.021881  0.037994  0.176270
ENSG00000224114.1  ENSG00000134184.12  0.018158  0.164917  0.216064
                   ENSG00000129824.15  0.037750  0.162720  0.185791
                   ENSG00000196136.17  0.010185  0.083496  0.150635
                   ENSG00000181195.10  0.037415  0.135010  0.092468
ENSG00000173110.7  ENSG00000134184.12  0.019073  0.060913  0.058746
                   ENSG00000129824.15  0.027496  0.055939  0.163818
                   ENSG00000196136.17  0.161865  0.090515  0.506836
                   ENSG00000181195.10  0.020767  0.168579  0.103699
                   ENSG00000224114.1   0.011902  0.027985  0.134399
[2025-07-07 04:55:11,435 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 04:59:13,284 - __main__] INFO: 
                ccc       pearson      spearman
count  1.389198e+09  1.389198e+09  1.389198e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.257824e-04  3.053284e-02  3.680420e-02
50%    7.217407e-03  8.068848e-02  8.734131e-02
75%    4.199219e-02  2.138672e-01  2.180176e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 05:00:47,512 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 05:00:47,515 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000080  0.024033  0.029037
0.242105  0.000200  0.029465  0.035522
0.284211  0.000421  0.035370  0.042480
0.326316  0.000851  0.041901  0.049866
0.368421  0.001623  0.049286  0.057770
0.410526  0.002796  0.057709  0.066345
0.452632  0.004539  0.067505  0.075684
0.494737  0.006897  0.079102  0.085938
0.536842  0.009857  0.092896  0.097412
0.578947  0.013481  0.109192  0.110229
0.621053  0.017944  0.128540  0.126953
0.663158  0.023636  0.151489  0.148193
0.705263  0.031006  0.178589  0.176270
0.747368  0.041046  0.211548  0.215210
0.789474  0.055145  0.252441  0.269043
0.831579  0.076111  0.305420  0.340576
0.873684  0.107483  0.375977  0.430664
0.915789  0.155273  0.474609  0.541504
0.957895  0.259277  0.622559  0.682129
1.000000  1.000000  1.000000  1.000000
[2025-07-07 05:01:05,482 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 05:01:05,483 - __main__] INFO: 0.2    0.000080
0.8    0.059692
Name: ccc, dtype: float64
[2025-07-07 05:01:05,483 - __main__] INFO: CCC lower quantile: 8.046627044677734e-05, upper quantile: 0.0596923828125
[2025-07-07 05:01:20,288 - __main__] INFO: Clustermatch quantiles: lower=0.0005602836608886719, upper=0.0300445556640625
[2025-07-07 05:01:38,985 - __main__] INFO: Pearson quantiles: lower=0.037750244140625, upper=0.1749267578125
[2025-07-07 05:01:58,060 - __main__] INFO: Spearman quantiles: lower=0.045135498046875, upper=0.1722412109375
[2025-07-07 05:02:02,436 - __main__] INFO: Pearson higher count: 416897935
[2025-07-07 05:02:05,566 - __main__] INFO: Pearson lower count: 416976579
[2025-07-07 05:02:09,557 - __main__] INFO: Spearman higher count: 416950627
[2025-07-07 05:02:12,698 - __main__] INFO: Spearman lower count: 416774502
[2025-07-07 05:02:17,100 - __main__] INFO: Clustermatch higher count: 416869414
[2025-07-07 05:02:20,244 - __main__] INFO: Clustermatch lower count: 416789894
[2025-07-07 05:02:24,979 - __main__] INFO: Plot dataframe shape: (1389198405, 9)
[2025-07-07 05:02:24,979 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 05:02:34,269 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 05:02:34,269 - __main__] INFO: Data shape for upset plot: (1389198405, 9)
[2025-07-07 05:10:50,219 - __main__] INFO: Gene pairs by categories shape: (1389198405, 9)
[2025-07-07 05:10:50,219 - __main__] INFO: First few entries:
[2025-07-07 05:10:50,228 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            False          False                         False  ...  0.176270
                                                False           False          False                         False  ...  0.107727
               True          False              False           False          False                         False  ...  0.080261
               False         False              True            True           True                           True  ...  0.243408
                                                                               True                           True  ...  0.406006

[5 rows x 9 columns]
[2025-07-07 05:10:50,228 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 05:12:52,095 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_nucleus_accumbens_basal_ganglia_full.svg
[2025-07-07 05:12:52,095 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_045459/upsetplot_gtex_brain_nucleus_accumbens_basal_ganglia_full.svg
[2025-07-07 05:12:52,095 - __main__] INFO: Data shape for trimmed plot: (1389198405, 9)
[2025-07-07 05:16:21,612 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 05:16:21,612 - __main__] INFO: Shape: (1389198405, 9)
[2025-07-07 05:19:46,408 - __main__] INFO: Unique index combinations:
[2025-07-07 05:19:46,414 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 05:19:46,415 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 05:19:46,418 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 05:19:46,419 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 05:19:46,422 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 05:19:46,424 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 05:19:46,427 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 05:32:18,337 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 05:32:18,346 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.243408
                                                                               True                           True  ...  0.406006
                                                                               True                           True  ...  0.374756
                                                                               True                           True  ...  0.878906
                                                                               True                           True  ...  0.420898

[5 rows x 9 columns]
[2025-07-07 05:32:19,842 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 05:33:31,848 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_nucleus_accumbens_basal_ganglia_trimmed.svg
[2025-07-07 05:33:31,849 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_045459/upsetplot_gtex_brain_nucleus_accumbens_basal_ganglia_trimmed.svg
[2025-07-07 05:33:31,849 - __main__] INFO: Final dataframe shape: (1389198405, 9)
[2025-07-07 05:33:31,849 - __main__] INFO: Final dataframe head:
[2025-07-07 05:33:31,855 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000129824.15 ENSG00000134184.12           False  ...  0.176270
ENSG00000196136.17 ENSG00000134184.12           False  ...  0.107727
                   ENSG00000129824.15           False  ...  0.080261
ENSG00000181195.10 ENSG00000134184.12            True  ...  0.243408
                   ENSG00000129824.15            True  ...  0.406006

[5 rows x 9 columns]
[2025-07-07 05:33:31,855 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_nucleus_accumbens_basal_ganglia-var_pc_log2.pkl
[2025-07-07 05:33:31,855 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 05:33:36,348 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_nucleus_accumbens_basal_ganglia-var_pc_log2.pkl
[2025-07-07 05:33:36,348 - __main__] INFO: Script completed successfully!
[2025-07-07 05:33:36,348 - __main__] INFO: All outputs saved to log directory: logs/20250707_045459
[2025-07-07 05:33:42,366 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_053342
[2025-07-07 05:33:42,366 - __main__] INFO: Log directory: logs/20250707_053342
[2025-07-07 05:33:42,366 - __main__] INFO: Configuration:
[2025-07-07 05:33:42,367 - __main__] INFO:   GTEX_TISSUE: brain_putamen_basal_ganglia
[2025-07-07 05:33:42,367 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 05:33:42,367 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 05:33:42,367 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 05:33:42,367 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 05:33:42,367 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 05:33:42,367 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_putamen_basal_ganglia-var_pc_log2-all.pkl
[2025-07-07 05:33:42,367 - __main__] INFO: Loading correlation data...
[2025-07-07 05:33:53,500 - __main__] INFO: Dataframe shape: (1336936195, 3)
[2025-07-07 05:33:53,500 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 05:33:53,505 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000181195.10 ENSG00000134184.12  0.055145  0.237549  0.271240
ENSG00000129824.15 ENSG00000134184.12  0.016373  0.159668  0.160400
                   ENSG00000181195.10  0.313721  0.536133  0.590332
ENSG00000196136.17 ENSG00000134184.12  0.009422  0.018036  0.038879
                   ENSG00000181195.10  0.034088  0.046265  0.116272
                   ENSG00000129824.15  0.007050  0.034424  0.052979
ENSG00000173110.7  ENSG00000134184.12  0.021530  0.048401  0.068237
                   ENSG00000181195.10  0.034454  0.225342  0.269287
                   ENSG00000129824.15  0.017593  0.092712  0.156738
                   ENSG00000196136.17  0.062256  0.140869  0.369873
ENSG00000248485.1  ENSG00000134184.12  0.033447  0.266113  0.278564
                   ENSG00000181195.10  0.687012  0.873535  0.952637
                   ENSG00000129824.15  0.345215  0.581055  0.610352
                   ENSG00000196136.17  0.013077  0.024216  0.067993
                   ENSG00000173110.7   0.031769  0.067627  0.217285
[2025-07-07 05:33:53,505 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 05:37:38,548 - __main__] INFO: 
                ccc       pearson      spearman
count  1.336936e+09  1.336936e+09  1.336936e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.229214e-04  3.179932e-02  3.836060e-02
50%    7.114410e-03  8.142090e-02  9.063721e-02
75%    4.345703e-02  2.191162e-01  2.197266e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 05:39:02,488 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 05:39:02,492 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000090  0.025192  0.030289
0.242105  0.000188  0.030716  0.037079
0.284211  0.000383  0.036713  0.044250
0.326316  0.000790  0.043274  0.051941
0.368421  0.001478  0.050598  0.060150
0.410526  0.002628  0.058899  0.069031
0.452632  0.004345  0.068481  0.078674
0.494737  0.006786  0.079895  0.089233
0.536842  0.009903  0.093567  0.100952
0.578947  0.013680  0.110168  0.114136
0.621053  0.018265  0.130127  0.130249
0.663158  0.024048  0.153931  0.151245
0.705263  0.031555  0.182251  0.178833
0.747368  0.042511  0.216675  0.216797
0.789474  0.056610  0.260254  0.270508
0.831579  0.078979  0.317139  0.345703
0.873684  0.114380  0.395264  0.445557
0.915789  0.184448  0.505859  0.573730
0.957895  0.322510  0.665039  0.734863
1.000000  1.000000  1.000000  1.000000
[2025-07-07 05:39:18,525 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 05:39:18,526 - __main__] INFO: 0.2    0.000090
0.8    0.062256
Name: ccc, dtype: float64
[2025-07-07 05:39:18,526 - __main__] INFO: CCC lower quantile: 8.96453857421875e-05, upper quantile: 0.062255859375
[2025-07-07 05:39:34,837 - __main__] INFO: Clustermatch quantiles: lower=0.0005178451538085938, upper=0.0304412841796875
[2025-07-07 05:39:52,310 - __main__] INFO: Pearson quantiles: lower=0.039093017578125, upper=0.1783447265625
[2025-07-07 05:40:08,964 - __main__] INFO: Spearman quantiles: lower=0.04705810546875, upper=0.1749267578125
[2025-07-07 05:40:13,227 - __main__] INFO: Pearson higher count: 401274938
[2025-07-07 05:40:16,241 - __main__] INFO: Pearson lower count: 401194736
[2025-07-07 05:40:19,721 - __main__] INFO: Spearman higher count: 401235619
[2025-07-07 05:40:22,748 - __main__] INFO: Spearman lower count: 401173402
[2025-07-07 05:40:26,990 - __main__] INFO: Clustermatch higher count: 401323830
[2025-07-07 05:40:30,012 - __main__] INFO: Clustermatch lower count: 401183874
[2025-07-07 05:40:34,239 - __main__] INFO: Plot dataframe shape: (1336936195, 9)
[2025-07-07 05:40:34,240 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 05:40:43,087 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 05:40:43,087 - __main__] INFO: Data shape for upset plot: (1336936195, 9)
[2025-07-07 05:49:25,150 - __main__] INFO: Gene pairs by categories shape: (1336936195, 9)
[2025-07-07 05:49:25,150 - __main__] INFO: First few entries:
[2025-07-07 05:49:25,159 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.271240
                                                False           False          False                         False  ...  0.160400
                                                True            True           True                           True  ...  0.590332
True           True          False              False           False          False                         False  ...  0.038879
False          False         False              False           False          True                          False  ...  0.116272

[5 rows x 9 columns]
[2025-07-07 05:49:25,159 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 05:51:23,090 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_putamen_basal_ganglia_full.svg
[2025-07-07 05:51:23,091 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_053342/upsetplot_gtex_brain_putamen_basal_ganglia_full.svg
[2025-07-07 05:51:23,091 - __main__] INFO: Data shape for trimmed plot: (1336936195, 9)
[2025-07-07 05:54:53,616 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 05:54:53,616 - __main__] INFO: Shape: (1336936195, 9)
[2025-07-07 05:58:07,820 - __main__] INFO: Unique index combinations:
[2025-07-07 05:58:07,826 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 05:58:07,827 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 05:58:07,830 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 05:58:07,831 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 05:58:07,834 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 05:58:07,837 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 05:58:07,839 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 06:10:04,512 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 06:10:04,521 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.271240
                                                                               True                           True  ...  0.590332
                                                                               True                           True  ...  0.269287
                                                                               True                           True  ...  0.278564
                                                                               True                           True  ...  0.952637

[5 rows x 9 columns]
[2025-07-07 06:10:05,947 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 06:11:14,797 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_putamen_basal_ganglia_trimmed.svg
[2025-07-07 06:11:14,798 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_053342/upsetplot_gtex_brain_putamen_basal_ganglia_trimmed.svg
[2025-07-07 06:11:14,798 - __main__] INFO: Final dataframe shape: (1336936195, 9)
[2025-07-07 06:11:14,798 - __main__] INFO: Final dataframe head:
[2025-07-07 06:11:14,803 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000181195.10 ENSG00000134184.12            True  ...  0.271240
ENSG00000129824.15 ENSG00000134184.12           False  ...  0.160400
                   ENSG00000181195.10            True  ...  0.590332
ENSG00000196136.17 ENSG00000134184.12           False  ...  0.038879
                   ENSG00000181195.10           False  ...  0.116272

[5 rows x 9 columns]
[2025-07-07 06:11:14,803 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_putamen_basal_ganglia-var_pc_log2.pkl
[2025-07-07 06:11:14,803 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 06:11:19,106 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_putamen_basal_ganglia-var_pc_log2.pkl
[2025-07-07 06:11:19,106 - __main__] INFO: Script completed successfully!
[2025-07-07 06:11:19,106 - __main__] INFO: All outputs saved to log directory: logs/20250707_053342
[2025-07-07 06:11:25,130 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_061125
[2025-07-07 06:11:25,130 - __main__] INFO: Log directory: logs/20250707_061125
[2025-07-07 06:11:25,130 - __main__] INFO: Configuration:
[2025-07-07 06:11:25,130 - __main__] INFO:   GTEX_TISSUE: brain_spinal_cord_cervical_c1
[2025-07-07 06:11:25,130 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 06:11:25,130 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 06:11:25,130 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 06:11:25,130 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 06:11:25,130 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 06:11:25,130 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_spinal_cord_cervical_c1-var_pc_log2-all.pkl
[2025-07-07 06:11:25,130 - __main__] INFO: Loading correlation data...
[2025-07-07 06:11:35,842 - __main__] INFO: Dataframe shape: (1305886065, 3)
[2025-07-07 06:11:35,842 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 06:11:35,847 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000157005.3  ENSG00000129824.15  0.036713  0.108948  0.003305
ENSG00000134184.12 ENSG00000129824.15  0.036285  0.104126  0.057678
                   ENSG00000157005.3   0.025406  0.042969  0.108582
ENSG00000118271.9  ENSG00000129824.15  0.036255  0.138794  0.162720
                   ENSG00000157005.3   0.031708  0.010544  0.189331
                   ENSG00000134184.12  0.015396  0.134277  0.091553
ENSG00000224114.1  ENSG00000129824.15  0.020447  0.067627  0.105713
                   ENSG00000157005.3   0.026428  0.039490  0.087097
                   ENSG00000134184.12  0.010849  0.083008  0.031525
                   ENSG00000118271.9   0.016251  0.076904  0.132812
ENSG00000012817.15 ENSG00000129824.15  0.635742  0.866211  0.895996
                   ENSG00000157005.3   0.028961  0.131592  0.034241
                   ENSG00000134184.12  0.025833  0.095703  0.000924
                   ENSG00000118271.9   0.007645  0.030289  0.051331
                   ENSG00000224114.1   0.029724  0.075684  0.099854
[2025-07-07 06:11:35,847 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 06:15:17,756 - __main__] INFO: 
                ccc       pearson      spearman
count  1.305886e+09  1.305886e+09  1.305886e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.394915e-04  3.265381e-02  4.031372e-02
50%    7.499695e-03  7.843018e-02  9.307861e-02
75%    4.049683e-02  1.928711e-01  2.037354e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 06:16:47,812 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 06:16:47,816 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000116  0.026062  0.031921
0.242105  0.000183  0.031586  0.038971
0.284211  0.000484  0.037476  0.046387
0.326316  0.000907  0.043854  0.054199
0.368421  0.001624  0.050812  0.062561
0.410526  0.002842  0.058533  0.071594
0.452632  0.004650  0.067200  0.081299
0.494737  0.007118  0.077087  0.091736
0.536842  0.010323  0.088684  0.103088
0.578947  0.014252  0.102295  0.115784
0.621053  0.018723  0.118530  0.130005
0.663158  0.023926  0.138184  0.147461
0.705263  0.031097  0.161865  0.170776
0.747368  0.039703  0.190796  0.201538
0.789474  0.052155  0.226807  0.243896
0.831579  0.067505  0.273438  0.302490
0.873684  0.097168  0.337891  0.381104
0.915789  0.135620  0.433594  0.486572
0.957895  0.229126  0.589844  0.635742
1.000000  1.000000  1.000000  1.000000
[2025-07-07 06:17:03,311 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 06:17:03,313 - __main__] INFO: 0.2    0.000116
0.8    0.054199
Name: ccc, dtype: float64
[2025-07-07 06:17:03,313 - __main__] INFO: CCC lower quantile: 0.0001163482666015625, upper quantile: 0.05419921875
[2025-07-07 06:17:20,072 - __main__] INFO: Clustermatch quantiles: lower=0.0006246566772460938, upper=0.029998779296875
[2025-07-07 06:17:38,928 - __main__] INFO: Pearson quantiles: lower=0.039794921875, upper=0.15869140625
[2025-07-07 06:17:59,796 - __main__] INFO: Spearman quantiles: lower=0.04931640625, upper=0.16748046875
[2025-07-07 06:18:03,981 - __main__] INFO: Pearson higher count: 391810956
[2025-07-07 06:18:06,930 - __main__] INFO: Pearson lower count: 391825195
[2025-07-07 06:18:10,891 - __main__] INFO: Spearman higher count: 391987172
[2025-07-07 06:18:13,848 - __main__] INFO: Spearman lower count: 391776637
[2025-07-07 06:18:18,007 - __main__] INFO: Clustermatch higher count: 392190633
[2025-07-07 06:18:20,963 - __main__] INFO: Clustermatch lower count: 391976464
[2025-07-07 06:18:25,165 - __main__] INFO: Plot dataframe shape: (1305886065, 9)
[2025-07-07 06:18:25,165 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 06:18:33,810 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 06:18:33,810 - __main__] INFO: Data shape for upset plot: (1305886065, 9)
[2025-07-07 06:26:35,800 - __main__] INFO: Gene pairs by categories shape: (1305886065, 9)
[2025-07-07 06:26:35,801 - __main__] INFO: First few entries:
[2025-07-07 06:26:35,809 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
True           False         False              False           False          True                          False  ...  0.003305
False          False         False              False           False          True                          False  ...  0.057678
                                                                               False                         False  ...  0.108582
                                                                               True                          False  ...  0.162720
               True          False              True            False          True                          False  ...  0.189331

[5 rows x 9 columns]
[2025-07-07 06:26:35,809 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 06:28:29,394 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_spinal_cord_cervical_c1_full.svg
[2025-07-07 06:28:29,394 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_061125/upsetplot_gtex_brain_spinal_cord_cervical_c1_full.svg
[2025-07-07 06:28:29,394 - __main__] INFO: Data shape for trimmed plot: (1305886065, 9)
[2025-07-07 06:31:51,849 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 06:31:51,849 - __main__] INFO: Shape: (1305886065, 9)
[2025-07-07 06:35:04,906 - __main__] INFO: Unique index combinations:
[2025-07-07 06:35:04,913 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 06:35:04,913 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 06:35:04,917 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 06:35:04,918 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 06:35:04,920 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 06:35:04,923 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 06:35:04,925 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 06:48:27,108 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 06:48:27,117 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.895996
                                                                               True                           True  ...  0.912109
                                                                               True                           True  ...  0.947266
                                                                               True                           True  ...  0.730469
                                                                               True                           True  ...  0.816406

[5 rows x 9 columns]
[2025-07-07 06:48:28,502 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 06:49:35,590 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_spinal_cord_cervical_c1_trimmed.svg
[2025-07-07 06:49:35,591 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_061125/upsetplot_gtex_brain_spinal_cord_cervical_c1_trimmed.svg
[2025-07-07 06:49:35,591 - __main__] INFO: Final dataframe shape: (1305886065, 9)
[2025-07-07 06:49:35,591 - __main__] INFO: Final dataframe head:
[2025-07-07 06:49:35,596 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000157005.3  ENSG00000129824.15           False  ...  0.003305
ENSG00000134184.12 ENSG00000129824.15           False  ...  0.057678
                   ENSG00000157005.3            False  ...  0.108582
ENSG00000118271.9  ENSG00000129824.15           False  ...  0.162720
                   ENSG00000157005.3            False  ...  0.189331

[5 rows x 9 columns]
[2025-07-07 06:49:35,596 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_spinal_cord_cervical_c1-var_pc_log2.pkl
[2025-07-07 06:49:35,596 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 06:49:39,789 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_spinal_cord_cervical_c1-var_pc_log2.pkl
[2025-07-07 06:49:39,789 - __main__] INFO: Script completed successfully!
[2025-07-07 06:49:39,789 - __main__] INFO: All outputs saved to log directory: logs/20250707_061125
[2025-07-07 06:49:45,710 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_064945
[2025-07-07 06:49:45,710 - __main__] INFO: Log directory: logs/20250707_064945
[2025-07-07 06:49:45,710 - __main__] INFO: Configuration:
[2025-07-07 06:49:45,710 - __main__] INFO:   GTEX_TISSUE: brain_substantia_nigra
[2025-07-07 06:49:45,710 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 06:49:45,710 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 06:49:45,710 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 06:49:45,710 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 06:49:45,710 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 06:49:45,710 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_brain_substantia_nigra-var_pc_log2-all.pkl
[2025-07-07 06:49:45,710 - __main__] INFO: Loading correlation data...
[2025-07-07 06:49:56,054 - __main__] INFO: Dataframe shape: (1278940600, 3)
[2025-07-07 06:49:56,054 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 06:49:56,058 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000180176.14 ENSG00000142319.17  0.833496  0.954590  0.974609
ENSG00000134184.12 ENSG00000142319.17  0.008408  0.055206  0.067017
                   ENSG00000180176.14  0.003132  0.050659  0.085510
ENSG00000129824.15 ENSG00000142319.17  0.027161  0.066772  0.058289
                   ENSG00000180176.14  0.027405  0.041565  0.026611
                   ENSG00000134184.12  0.037750  0.127197  0.149414
ENSG00000210195.2  ENSG00000142319.17  0.044678  0.041718  0.194336
                   ENSG00000180176.14  0.043243  0.047607  0.161377
                   ENSG00000134184.12  0.016449  0.074524  0.097046
                   ENSG00000129824.15  0.039520  0.030975  0.157593
ENSG00000118271.9  ENSG00000142319.17  0.049683  0.130615  0.264648
                   ENSG00000180176.14  0.056366  0.113342  0.232910
                   ENSG00000134184.12  0.023483  0.033020  0.029358
                   ENSG00000129824.15  0.023758  0.099915  0.016617
                   ENSG00000210195.2   0.018250  0.068420  0.140381
[2025-07-07 06:49:56,058 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 06:53:34,330 - __main__] INFO: 
                ccc       pearson      spearman
count  1.278941e+09  1.278941e+09  1.278941e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.145767e-04  3.421021e-02  4.180908e-02
50%    7.789612e-03  7.995605e-02  9.564209e-02
75%    4.281616e-02  1.938477e-01  2.062988e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 06:55:01,734 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 06:55:01,738 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000109  0.027359  0.033234
0.242105  0.000211  0.033081  0.040344
0.284211  0.000530  0.039154  0.047913
0.326316  0.000940  0.045654  0.056000
0.368421  0.001750  0.052673  0.064514
0.410526  0.002977  0.060364  0.073792
0.452632  0.004841  0.068970  0.083618
0.494737  0.007416  0.078674  0.094299
0.536842  0.010834  0.089905  0.106079
0.578947  0.014900  0.103210  0.118896
0.621053  0.019836  0.119202  0.133545
0.663158  0.025391  0.138794  0.150269
0.705263  0.032166  0.162720  0.173584
0.747368  0.042389  0.191772  0.203979
0.789474  0.055542  0.227905  0.246460
0.831579  0.072021  0.274170  0.305908
0.873684  0.104187  0.337158  0.387451
0.915789  0.150391  0.430420  0.495605
0.957895  0.255615  0.583008  0.644531
1.000000  1.000000  1.000000  1.000000
[2025-07-07 06:55:15,274 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 06:55:15,275 - __main__] INFO: 0.2    0.000109
0.8    0.057434
Name: ccc, dtype: float64
[2025-07-07 06:55:15,275 - __main__] INFO: CCC lower quantile: 0.00010865926742553711, upper quantile: 0.05743408203125
[2025-07-07 06:55:30,123 - __main__] INFO: Clustermatch quantiles: lower=0.0006580352783203125, upper=0.031158447265625
[2025-07-07 06:55:48,286 - __main__] INFO: Pearson quantiles: lower=0.041534423828125, upper=0.159423828125
[2025-07-07 06:56:05,545 - __main__] INFO: Spearman quantiles: lower=0.0509033203125, upper=0.1702880859375
[2025-07-07 06:56:09,574 - __main__] INFO: Pearson higher count: 383795123
[2025-07-07 06:56:12,457 - __main__] INFO: Pearson lower count: 383746280
[2025-07-07 06:56:15,683 - __main__] INFO: Spearman higher count: 383912367
[2025-07-07 06:56:18,573 - __main__] INFO: Spearman lower count: 384240497
[2025-07-07 06:56:22,639 - __main__] INFO: Clustermatch higher count: 383799762
[2025-07-07 06:56:25,534 - __main__] INFO: Clustermatch lower count: 383687651
[2025-07-07 06:56:29,464 - __main__] INFO: Plot dataframe shape: (1278940600, 9)
[2025-07-07 06:56:29,464 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 06:56:37,957 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 06:56:37,957 - __main__] INFO: Data shape for upset plot: (1278940600, 9)
[2025-07-07 07:04:30,021 - __main__] INFO: Gene pairs by categories shape: (1278940600, 9)
[2025-07-07 07:04:30,022 - __main__] INFO: First few entries:
[2025-07-07 07:04:30,030 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.974609
                                                False           False          False                         False  ...  0.067017
                                                                               False                         False  ...  0.085510
                                                                               False                         False  ...  0.058289
True           False         False              False           False          False                         False  ...  0.026611

[5 rows x 9 columns]
[2025-07-07 07:04:30,030 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 07:06:40,324 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_substantia_nigra_full.svg
[2025-07-07 07:06:40,325 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_064945/upsetplot_gtex_brain_substantia_nigra_full.svg
[2025-07-07 07:06:40,325 - __main__] INFO: Data shape for trimmed plot: (1278940600, 9)
[2025-07-07 07:10:46,087 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 07:10:46,087 - __main__] INFO: Shape: (1278940600, 9)
[2025-07-07 07:14:04,040 - __main__] INFO: Unique index combinations:
[2025-07-07 07:14:04,047 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 07:14:04,047 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 07:14:04,051 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 07:14:04,052 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 07:14:04,054 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 07:14:04,057 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 07:14:04,059 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 07:25:35,130 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 07:25:35,138 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.974609
                                                                               True                           True  ...  0.684570
                                                                               True                           True  ...  0.677734
                                                                               True                           True  ...  0.654297
                                                                               True                           True  ...  0.663574

[5 rows x 9 columns]
[2025-07-07 07:25:36,512 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 07:26:42,691 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_substantia_nigra_trimmed.svg
[2025-07-07 07:26:42,692 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_064945/upsetplot_gtex_brain_substantia_nigra_trimmed.svg
[2025-07-07 07:26:42,692 - __main__] INFO: Final dataframe shape: (1278940600, 9)
[2025-07-07 07:26:42,692 - __main__] INFO: Final dataframe head:
[2025-07-07 07:26:42,697 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000180176.14 ENSG00000142319.17            True  ...  0.974609
ENSG00000134184.12 ENSG00000142319.17           False  ...  0.067017
                   ENSG00000180176.14           False  ...  0.085510
ENSG00000129824.15 ENSG00000142319.17           False  ...  0.058289
                   ENSG00000180176.14           False  ...  0.026611

[5 rows x 9 columns]
[2025-07-07 07:26:42,697 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_substantia_nigra-var_pc_log2.pkl
[2025-07-07 07:26:42,697 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 07:26:46,814 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_substantia_nigra-var_pc_log2.pkl
[2025-07-07 07:26:46,814 - __main__] INFO: Script completed successfully!
[2025-07-07 07:26:46,814 - __main__] INFO: All outputs saved to log directory: logs/20250707_064945
[2025-07-07 07:26:52,842 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_072652
[2025-07-07 07:26:52,842 - __main__] INFO: Log directory: logs/20250707_072652
[2025-07-07 07:26:52,842 - __main__] INFO: Configuration:
[2025-07-07 07:26:52,842 - __main__] INFO:   GTEX_TISSUE: breast_mammary_tissue
[2025-07-07 07:26:52,842 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 07:26:52,842 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 07:26:52,842 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 07:26:52,842 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 07:26:52,842 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 07:26:52,842 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_breast_mammary_tissue-var_pc_log2-all.pkl
[2025-07-07 07:26:52,842 - __main__] INFO: Loading correlation data...
[2025-07-07 07:27:04,374 - __main__] INFO: Dataframe shape: (1452847560, 3)
[2025-07-07 07:27:04,374 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 07:27:04,378 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000110484.6  ENSG00000128422.15  0.519043  0.343506  0.797852
ENSG00000159763.3  ENSG00000128422.15  0.519043  0.263672  0.776855
                   ENSG00000110484.6   0.531738  0.382812  0.849121
ENSG00000172551.10 ENSG00000128422.15  0.458008  0.245483  0.763672
                   ENSG00000110484.6   0.570801  0.330322  0.841797
                   ENSG00000159763.3   0.652344  0.508301  0.884766
ENSG00000124935.3  ENSG00000128422.15  0.557617  0.325928  0.807129
                   ENSG00000110484.6   0.785645  0.891113  0.951660
                   ENSG00000159763.3   0.519043  0.289795  0.819824
                   ENSG00000172551.10  0.531738  0.320557  0.832520
ENSG00000171345.13 ENSG00000128422.15  0.624512  0.597168  0.857422
                   ENSG00000110484.6   0.570801  0.601562  0.832031
                   ENSG00000159763.3   0.506348  0.517578  0.832520
                   ENSG00000172551.10  0.389648  0.386475  0.774902
                   ENSG00000124935.3   0.570801  0.466064  0.822754
[2025-07-07 07:27:04,378 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 07:31:36,899 - __main__] INFO: 
                ccc       pearson      spearman
count  1.452848e+09  1.452848e+09  1.452848e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.397133e-04  2.009583e-02  2.528381e-02
50%    4.295349e-03  4.879761e-02  5.880737e-02
75%    2.050781e-02  1.205444e-01  1.341553e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 07:33:18,544 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 07:33:18,548 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000045  0.015900  0.019943
0.242105  0.000117  0.019409  0.024414
0.284211  0.000267  0.023163  0.029114
0.326316  0.000546  0.027191  0.034058
0.368421  0.001027  0.031586  0.039368
0.410526  0.001778  0.036407  0.045044
0.452632  0.002819  0.041809  0.051178
0.494737  0.004112  0.047943  0.057892
0.536842  0.005623  0.055054  0.065369
0.578947  0.007343  0.063416  0.073730
0.621053  0.009369  0.073486  0.083618
0.663158  0.012009  0.085632  0.096069
0.705263  0.015427  0.100586  0.111755
0.747368  0.020187  0.119263  0.132690
0.789474  0.026978  0.143188  0.161133
0.831579  0.036804  0.174927  0.200684
0.873684  0.051758  0.219360  0.256348
0.915789  0.077515  0.286621  0.337646
0.957895  0.136963  0.402588  0.466064
1.000000  1.000000  1.000000  1.000000
[2025-07-07 07:33:38,657 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 07:33:38,658 - __main__] INFO: 0.2    0.000045
0.8    0.029022
Name: ccc, dtype: float64
[2025-07-07 07:33:38,658 - __main__] INFO: CCC lower quantile: 4.494190216064453e-05, upper quantile: 0.029022216796875
[2025-07-07 07:33:58,533 - __main__] INFO: Clustermatch quantiles: lower=0.0003516674041748047, upper=0.01488494873046875
[2025-07-07 07:34:17,930 - __main__] INFO: Pearson quantiles: lower=0.0246429443359375, upper=0.0985107421875
[2025-07-07 07:34:38,723 - __main__] INFO: Spearman quantiles: lower=0.03094482421875, upper=0.10955810546875
[2025-07-07 07:34:43,311 - __main__] INFO: Pearson higher count: 436035272
[2025-07-07 07:34:46,593 - __main__] INFO: Pearson lower count: 435942930
[2025-07-07 07:34:51,068 - __main__] INFO: Spearman higher count: 436026861
[2025-07-07 07:34:54,363 - __main__] INFO: Spearman lower count: 435971148
[2025-07-07 07:34:58,987 - __main__] INFO: Clustermatch higher count: 435932403
[2025-07-07 07:35:02,280 - __main__] INFO: Clustermatch lower count: 436020036
[2025-07-07 07:35:07,144 - __main__] INFO: Plot dataframe shape: (1452847560, 9)
[2025-07-07 07:35:07,144 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 07:35:16,810 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 07:35:16,810 - __main__] INFO: Data shape for upset plot: (1452847560, 9)
[2025-07-07 07:44:31,845 - __main__] INFO: Gene pairs by categories shape: (1452847560, 9)
[2025-07-07 07:44:31,846 - __main__] INFO: First few entries:
[2025-07-07 07:44:31,854 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.797852
                                                                               True                           True  ...  0.776855
                                                                               True                           True  ...  0.849121
                                                                               True                           True  ...  0.763672
                                                                               True                           True  ...  0.841797

[5 rows x 9 columns]
[2025-07-07 07:44:31,854 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 07:46:38,433 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_breast_mammary_tissue_full.svg
[2025-07-07 07:46:38,433 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_072652/upsetplot_gtex_breast_mammary_tissue_full.svg
[2025-07-07 07:46:38,433 - __main__] INFO: Data shape for trimmed plot: (1452847560, 9)
[2025-07-07 07:50:41,638 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 07:50:41,639 - __main__] INFO: Shape: (1452847560, 9)
[2025-07-07 07:54:13,613 - __main__] INFO: Unique index combinations:
[2025-07-07 07:54:13,620 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 07:54:13,620 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 07:54:13,624 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 07:54:13,625 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 07:54:13,628 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 07:54:13,630 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 07:54:13,633 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 08:06:50,857 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 08:06:50,865 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.797852
                                                                               True                           True  ...  0.776855
                                                                               True                           True  ...  0.849121
                                                                               True                           True  ...  0.763672
                                                                               True                           True  ...  0.841797

[5 rows x 9 columns]
[2025-07-07 08:06:52,416 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 08:08:07,265 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_breast_mammary_tissue_trimmed.svg
[2025-07-07 08:08:07,266 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_072652/upsetplot_gtex_breast_mammary_tissue_trimmed.svg
[2025-07-07 08:08:07,266 - __main__] INFO: Final dataframe shape: (1452847560, 9)
[2025-07-07 08:08:07,266 - __main__] INFO: Final dataframe head:
[2025-07-07 08:08:07,271 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000110484.6  ENSG00000128422.15            True  ...  0.797852
ENSG00000159763.3  ENSG00000128422.15            True  ...  0.776855
                   ENSG00000110484.6             True  ...  0.849121
ENSG00000172551.10 ENSG00000128422.15            True  ...  0.763672
                   ENSG00000110484.6             True  ...  0.841797

[5 rows x 9 columns]
[2025-07-07 08:08:07,272 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-breast_mammary_tissue-var_pc_log2.pkl
[2025-07-07 08:08:07,272 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 08:08:11,973 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-breast_mammary_tissue-var_pc_log2.pkl
[2025-07-07 08:08:11,973 - __main__] INFO: Script completed successfully!
[2025-07-07 08:08:11,973 - __main__] INFO: All outputs saved to log directory: logs/20250707_072652
[2025-07-07 08:08:18,078 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_080818
[2025-07-07 08:08:18,078 - __main__] INFO: Log directory: logs/20250707_080818
[2025-07-07 08:08:18,078 - __main__] INFO: Configuration:
[2025-07-07 08:08:18,078 - __main__] INFO:   GTEX_TISSUE: cells_cultured_fibroblasts
[2025-07-07 08:08:18,078 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 08:08:18,078 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 08:08:18,078 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 08:08:18,078 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 08:08:18,078 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 08:08:18,078 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_cells_cultured_fibroblasts-var_pc_log2-all.pkl
[2025-07-07 08:08:18,078 - __main__] INFO: Loading correlation data...
[2025-07-07 08:08:29,717 - __main__] INFO: Dataframe shape: (1401877725, 3)
[2025-07-07 08:08:29,717 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 08:08:29,721 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000224114.1  ENSG00000129824.15  0.026932  0.040192  0.026581
ENSG00000196616.13 ENSG00000129824.15  0.083862  0.069885  0.145630
                   ENSG00000224114.1   0.007465  0.008453  0.019653
ENSG00000229807.10 ENSG00000129824.15  0.446777  0.818848  0.672363
                   ENSG00000224114.1   0.005684  0.009087  0.057678
                   ENSG00000196616.13  0.010818  0.052887  0.083191
ENSG00000196611.4  ENSG00000129824.15  0.029129  0.060913  0.165527
                   ENSG00000224114.1   0.005169  0.055908  0.029236
                   ENSG00000196616.13  0.256592  0.291504  0.653809
                   ENSG00000229807.10  0.004807  0.016403  0.003298
ENSG00000213058.3  ENSG00000129824.15  0.011955  0.029739  0.000849
                   ENSG00000224114.1   0.567383  0.988770  0.834473
                   ENSG00000196616.13  0.011917  0.020325  0.043823
                   ENSG00000229807.10  0.006458  0.002459  0.048798
                   ENSG00000196611.4   0.006096  0.066772  0.029602
[2025-07-07 08:08:29,721 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 08:12:58,712 - __main__] INFO: 
                ccc       pearson      spearman
count  1.401878e+09  1.401878e+09  1.401878e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    3.153086e-05  1.747131e-02  1.965332e-02
50%    1.964569e-03  4.061890e-02  4.510498e-02
75%    1.374054e-02  9.143066e-02  9.301758e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 08:14:34,327 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 08:14:34,331 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000004  0.013863  0.015564
0.242105  0.000024  0.016891  0.018997
0.284211  0.000064  0.020081  0.022598
0.326316  0.000140  0.023453  0.026428
0.368421  0.000287  0.027084  0.030472
0.410526  0.000567  0.030991  0.034790
0.452632  0.001060  0.035278  0.039429
0.494737  0.001843  0.040009  0.044434
0.536842  0.002943  0.045288  0.049896
0.578947  0.004318  0.051361  0.055939
0.621053  0.005924  0.058411  0.062683
0.663158  0.007866  0.066833  0.070435
0.705263  0.010284  0.077209  0.079651
0.747368  0.013489  0.090515  0.092102
0.789474  0.018143  0.108276  0.109131
0.831579  0.024841  0.133423  0.134644
0.873684  0.035248  0.171387  0.175171
0.915789  0.053436  0.233276  0.241821
0.957895  0.093994  0.347412  0.361572
1.000000  1.000000  1.000000  1.000000
[2025-07-07 08:14:52,515 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 08:14:52,516 - __main__] INFO: 0.2    0.000004
0.8    0.019516
Name: ccc, dtype: float64
[2025-07-07 08:14:52,516 - __main__] INFO: CCC lower quantile: 4.112720489501953e-06, upper quantile: 0.0195159912109375
[2025-07-07 08:15:11,638 - __main__] INFO: Clustermatch quantiles: lower=8.83340835571289e-05, upper=0.009918212890625
[2025-07-07 08:15:31,376 - __main__] INFO: Pearson quantiles: lower=0.0213165283203125, upper=0.0758056640625
[2025-07-07 08:15:51,217 - __main__] INFO: Spearman quantiles: lower=0.024017333984375, upper=0.07830810546875
[2025-07-07 08:15:55,648 - __main__] INFO: Pearson higher count: 420638249
[2025-07-07 08:15:58,813 - __main__] INFO: Pearson lower count: 420638639
[2025-07-07 08:16:03,027 - __main__] INFO: Spearman higher count: 420758462
[2025-07-07 08:16:06,205 - __main__] INFO: Spearman lower count: 420694394
[2025-07-07 08:16:10,671 - __main__] INFO: Clustermatch higher count: 420606790
[2025-07-07 08:16:13,842 - __main__] INFO: Clustermatch lower count: 420588616
[2025-07-07 08:16:18,485 - __main__] INFO: Plot dataframe shape: (1401877725, 9)
[2025-07-07 08:16:18,485 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 08:16:27,733 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 08:16:27,734 - __main__] INFO: Data shape for upset plot: (1401877725, 9)
[2025-07-07 08:24:58,966 - __main__] INFO: Gene pairs by categories shape: (1401877725, 9)
[2025-07-07 08:24:58,966 - __main__] INFO: First few entries:
[2025-07-07 08:24:58,975 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              False           False          True                          False  ...  0.026581
                                                True            False          True                          False  ...  0.145630
True           True          False              False           False          False                         False  ...  0.019653
False          False         False              True            True           True                           True  ...  0.672363
               True          False              False           False          False                         False  ...  0.057678

[5 rows x 9 columns]
[2025-07-07 08:24:58,975 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 08:27:00,333 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cells_cultured_fibroblasts_full.svg
[2025-07-07 08:27:00,333 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_080818/upsetplot_gtex_cells_cultured_fibroblasts_full.svg
[2025-07-07 08:27:00,333 - __main__] INFO: Data shape for trimmed plot: (1401877725, 9)
[2025-07-07 08:30:26,346 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 08:30:26,346 - __main__] INFO: Shape: (1401877725, 9)
[2025-07-07 08:33:50,731 - __main__] INFO: Unique index combinations:
[2025-07-07 08:33:50,737 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 08:33:50,738 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 08:33:50,741 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 08:33:50,742 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 08:33:50,745 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 08:33:50,747 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 08:33:50,750 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 08:46:23,192 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 08:46:23,200 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.672363
                                                                               True                           True  ...  0.653809
                                                                               True                           True  ...  0.834473
                                                                               True                           True  ...  0.560059
                                                                               True                           True  ...  0.498535

[5 rows x 9 columns]
[2025-07-07 08:46:24,718 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 08:47:35,925 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cells_cultured_fibroblasts_trimmed.svg
[2025-07-07 08:47:35,926 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_080818/upsetplot_gtex_cells_cultured_fibroblasts_trimmed.svg
[2025-07-07 08:47:35,926 - __main__] INFO: Final dataframe shape: (1401877725, 9)
[2025-07-07 08:47:35,926 - __main__] INFO: Final dataframe head:
[2025-07-07 08:47:35,931 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000224114.1  ENSG00000129824.15           False  ...  0.026581
ENSG00000196616.13 ENSG00000129824.15           False  ...  0.145630
                   ENSG00000224114.1            False  ...  0.019653
ENSG00000229807.10 ENSG00000129824.15            True  ...  0.672363
                   ENSG00000224114.1            False  ...  0.057678

[5 rows x 9 columns]
[2025-07-07 08:47:35,931 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cells_cultured_fibroblasts-var_pc_log2.pkl
[2025-07-07 08:47:35,931 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 08:47:40,392 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cells_cultured_fibroblasts-var_pc_log2.pkl
[2025-07-07 08:47:40,392 - __main__] INFO: Script completed successfully!
[2025-07-07 08:47:40,392 - __main__] INFO: All outputs saved to log directory: logs/20250707_080818
[2025-07-07 08:47:46,549 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_084746
[2025-07-07 08:47:46,549 - __main__] INFO: Log directory: logs/20250707_084746
[2025-07-07 08:47:46,549 - __main__] INFO: Configuration:
[2025-07-07 08:47:46,549 - __main__] INFO:   GTEX_TISSUE: cells_ebvtransformed_lymphocytes
[2025-07-07 08:47:46,549 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 08:47:46,549 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 08:47:46,549 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 08:47:46,549 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 08:47:46,549 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 08:47:46,549 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_cells_ebvtransformed_lymphocytes-var_pc_log2-all.pkl
[2025-07-07 08:47:46,549 - __main__] INFO: Loading correlation data...
[2025-07-07 08:47:57,744 - __main__] INFO: Dataframe shape: (1338539670, 3)
[2025-07-07 08:47:57,744 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 08:47:57,749 - __main__] INFO: 
                                          ccc   pearson  spearman
ENSG00000211666.2 ENSG00000211595.2  0.156982  0.019028  0.425781
ENSG00000239951.1 ENSG00000211595.2  0.156982  0.155762  0.429199
                  ENSG00000211666.2  0.121887  0.008232  0.435303
ENSG00000211594.2 ENSG00000211595.2  0.130737  0.122437  0.241089
                  ENSG00000211666.2  0.103027  0.035095  0.315918
                  ENSG00000239951.1  0.176147  0.187744  0.447266
ENSG00000241351.3 ENSG00000211595.2  0.263184  0.074097  0.560547
                  ENSG00000211666.2  0.138916  0.029404  0.412109
                  ENSG00000239951.1  0.176147  0.025482  0.491699
                  ENSG00000211594.2  0.171143  0.187988  0.381592
ENSG00000211596.3 ENSG00000211595.2  0.176147  0.098022  0.353271
                  ENSG00000211666.2  0.176147  0.030533  0.445557
                  ENSG00000239951.1  0.239868  0.032654  0.471924
                  ENSG00000211594.2  0.091064  0.076172  0.260498
                  ENSG00000241351.3  0.138916  0.054932  0.399902
[2025-07-07 08:47:57,749 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 08:51:59,724 - __main__] INFO: 
                ccc       pearson      spearman
count  1.338540e+09  1.338540e+09  1.338540e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.922846e-04  2.542114e-02  2.842712e-02
50%    4.692078e-03  5.447388e-02  6.097412e-02
75%    1.799011e-02  1.038208e-01  1.091919e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 08:53:33,271 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 08:53:33,275 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000061  0.020523  0.022781
0.242105  0.000162  0.024643  0.027481
0.284211  0.000359  0.028885  0.032440
0.326316  0.000665  0.033325  0.037506
0.368421  0.001147  0.037964  0.042725
0.410526  0.001925  0.042877  0.048218
0.452632  0.003027  0.048096  0.054047
0.494737  0.004486  0.053711  0.060120
0.536842  0.006264  0.059814  0.066711
0.578947  0.008278  0.066467  0.073608
0.621053  0.010406  0.073853  0.081116
0.663158  0.012733  0.082214  0.089294
0.705263  0.015152  0.091797  0.098328
0.747368  0.017807  0.103027  0.108459
0.789474  0.020950  0.116760  0.120178
0.831579  0.024719  0.134277  0.134155
0.873684  0.030884  0.158203  0.154297
0.915789  0.041107  0.194946  0.184937
0.957895  0.064453  0.265869  0.248291
1.000000  1.000000  1.000000  1.000000
[2025-07-07 08:53:53,156 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 08:53:53,157 - __main__] INFO: 0.2    0.000061
0.8    0.021912
Name: ccc, dtype: float64
[2025-07-07 08:53:53,157 - __main__] INFO: CCC lower quantile: 6.139278411865234e-05, upper quantile: 0.02191162109375
[2025-07-07 08:54:12,835 - __main__] INFO: Clustermatch quantiles: lower=0.0004508495330810547, upper=0.01488494873046875
[2025-07-07 08:54:33,255 - __main__] INFO: Pearson quantiles: lower=0.0305328369140625, upper=0.09051513671875
[2025-07-07 08:54:52,505 - __main__] INFO: Spearman quantiles: lower=0.034271240234375, upper=0.09716796875
[2025-07-07 08:54:56,723 - __main__] INFO: Pearson higher count: 401632207
[2025-07-07 08:54:59,728 - __main__] INFO: Pearson lower count: 401687180
[2025-07-07 08:55:03,692 - __main__] INFO: Spearman higher count: 401749421
[2025-07-07 08:55:06,710 - __main__] INFO: Spearman lower count: 401895442
[2025-07-07 08:55:10,954 - __main__] INFO: Clustermatch higher count: 401638318
[2025-07-07 08:55:13,981 - __main__] INFO: Clustermatch lower count: 403659842
[2025-07-07 08:55:18,185 - __main__] INFO: Plot dataframe shape: (1338539670, 9)
[2025-07-07 08:55:18,186 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 08:55:26,988 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 08:55:26,988 - __main__] INFO: Data shape for upset plot: (1338539670, 9)
[2025-07-07 09:03:27,407 - __main__] INFO: Gene pairs by categories shape: (1338539670, 9)
[2025-07-07 09:03:27,407 - __main__] INFO: First few entries:
[2025-07-07 09:03:27,416 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          True          False              True            False          True                          False  ...  0.425781
               False         False              True            True           True                           True  ...  0.429199
               True          False              True            False          True                          False  ...  0.435303
               False         False              True            True           True                           True  ...  0.241089
                                                                False          True                          False  ...  0.315918

[5 rows x 9 columns]
[2025-07-07 09:03:27,416 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 09:05:23,478 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cells_ebvtransformed_lymphocytes_full.svg
[2025-07-07 09:05:23,479 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_084746/upsetplot_gtex_cells_ebvtransformed_lymphocytes_full.svg
[2025-07-07 09:05:23,479 - __main__] INFO: Data shape for trimmed plot: (1338539670, 9)
[2025-07-07 09:08:47,180 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 09:08:47,180 - __main__] INFO: Shape: (1338539670, 9)
[2025-07-07 09:12:03,409 - __main__] INFO: Unique index combinations:
[2025-07-07 09:12:03,415 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 09:12:03,416 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 09:12:03,419 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 09:12:03,420 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 09:12:03,423 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 09:12:03,425 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 09:12:03,428 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 09:23:56,227 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 09:23:56,236 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.429199
                                                                               True                           True  ...  0.241089
                                                                               True                           True  ...  0.447266
                                                                               True                           True  ...  0.381592
                                                                               True                           True  ...  0.353271

[5 rows x 9 columns]
[2025-07-07 09:23:57,649 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 09:25:03,967 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cells_ebvtransformed_lymphocytes_trimmed.svg
[2025-07-07 09:25:03,968 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_084746/upsetplot_gtex_cells_ebvtransformed_lymphocytes_trimmed.svg
[2025-07-07 09:25:03,968 - __main__] INFO: Final dataframe shape: (1338539670, 9)
[2025-07-07 09:25:03,968 - __main__] INFO: Final dataframe head:
[2025-07-07 09:25:03,973 - __main__] INFO: 
                                     Pearson (high)  ...  spearman
ENSG00000211666.2 ENSG00000211595.2           False  ...  0.425781
ENSG00000239951.1 ENSG00000211595.2            True  ...  0.429199
                  ENSG00000211666.2           False  ...  0.435303
ENSG00000211594.2 ENSG00000211595.2            True  ...  0.241089
                  ENSG00000211666.2           False  ...  0.315918

[5 rows x 9 columns]
[2025-07-07 09:25:03,973 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cells_ebvtransformed_lymphocytes-var_pc_log2.pkl
[2025-07-07 09:25:03,973 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 09:25:08,269 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cells_ebvtransformed_lymphocytes-var_pc_log2.pkl
[2025-07-07 09:25:08,269 - __main__] INFO: Script completed successfully!
[2025-07-07 09:25:08,269 - __main__] INFO: All outputs saved to log directory: logs/20250707_084746
[2025-07-07 09:25:14,291 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_092514
[2025-07-07 09:25:14,291 - __main__] INFO: Log directory: logs/20250707_092514
[2025-07-07 09:25:14,291 - __main__] INFO: Configuration:
[2025-07-07 09:25:14,291 - __main__] INFO:   GTEX_TISSUE: cervix_ectocervix
[2025-07-07 09:25:14,291 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 09:25:14,291 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 09:25:14,291 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 09:25:14,291 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 09:25:14,291 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 09:25:14,291 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_cervix_ectocervix-var_pc_log2-all.pkl
[2025-07-07 09:25:14,291 - __main__] INFO: Loading correlation data...
[2025-07-07 09:25:22,054 - __main__] INFO: Dataframe shape: (871468626, 3)
[2025-07-07 09:25:22,054 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 09:25:22,059 - __main__] INFO: 
                                       ccc   pearson  spearman
ENSG00000169469.8  ENSG00000205420.10  1.0  0.811035  0.683105
ENSG00000171401.14 ENSG00000205420.10  1.0  0.937012  0.950195
                   ENSG00000169469.8   1.0  0.964355  0.666504
ENSG00000169474.4  ENSG00000205420.10  1.0  0.917480  0.950195
                   ENSG00000169469.8   1.0  0.976562  0.666504
                   ENSG00000171401.14  1.0  0.998535  1.000000
ENSG00000143536.7  ENSG00000205420.10  1.0  0.976562  0.666504
                   ENSG00000169469.8   1.0  0.917480  0.733398
                   ENSG00000171401.14  1.0  0.990234  0.733398
                   ENSG00000169474.4   1.0  0.981445  0.733398
ENSG00000163209.14 ENSG00000205420.10  1.0  0.918945  0.683105
                   ENSG00000169469.8   1.0  0.976074  0.850098
                   ENSG00000171401.14  1.0  0.999023  0.616699
                   ENSG00000169474.4   1.0  1.000000  0.616699
                   ENSG00000143536.7   1.0  0.982422  0.850098
[2025-07-07 09:25:22,059 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 09:27:22,341 - __main__] INFO: 
                ccc       pearson      spearman
count  8.714686e+08  8.714686e+08  8.714686e+08
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    5.813599e-02  1.488037e-01  1.386719e-01
50%    2.105713e-01  2.885742e-01  2.966309e-01
75%    3.720703e-01  4.833984e-01  4.833984e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 09:28:21,603 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 09:28:21,607 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.050629  0.125000  0.133301
0.242105  0.058136  0.144043  0.136963
0.284211  0.064941  0.168335  0.166626
0.326316  0.076904  0.188477  0.187500
0.368421  0.111084  0.211670  0.226318
0.410526  0.148682  0.235718  0.250977
0.452632  0.160034  0.259766  0.273926
0.494737  0.205933  0.285400  0.288086
0.536842  0.222168  0.312500  0.319580
0.578947  0.250000  0.341553  0.357666
0.621053  0.272705  0.372070  0.389893
0.663158  0.320801  0.405273  0.410889
0.705263  0.353027  0.441162  0.443604
0.747368  0.372070  0.480713  0.483398
0.789474  0.407471  0.524414  0.533203
0.831579  0.470703  0.573730  0.547852
0.873684  0.538574  0.629883  0.600098
0.915789  0.600098  0.698242  0.666504
0.957895  0.769043  0.788574  0.750000
1.000000  1.000000  1.000000  1.000000
[2025-07-07 09:28:33,895 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 09:28:33,896 - __main__] INFO: 0.2    0.050629
0.8    0.407471
Name: ccc, dtype: float64
[2025-07-07 09:28:33,896 - __main__] INFO: CCC lower quantile: 0.050628662109375, upper quantile: 0.407470703125
[2025-07-07 09:28:45,126 - __main__] INFO: Clustermatch quantiles: lower=0.0689697265625, upper=0.35302734375
[2025-07-07 09:28:57,574 - __main__] INFO: Pearson quantiles: lower=0.1767578125, upper=0.4365234375
[2025-07-07 09:29:10,153 - __main__] INFO: Spearman quantiles: lower=0.1826171875, upper=0.43359375
[2025-07-07 09:29:12,352 - __main__] INFO: Pearson higher count: 261603741
[2025-07-07 09:29:14,312 - __main__] INFO: Pearson lower count: 261610685
[2025-07-07 09:29:16,509 - __main__] INFO: Spearman higher count: 263230835
[2025-07-07 09:29:18,467 - __main__] INFO: Spearman lower count: 265317093
[2025-07-07 09:29:21,162 - __main__] INFO: Clustermatch higher count: 289631316
[2025-07-07 09:29:23,205 - __main__] INFO: Clustermatch lower count: 270469483
[2025-07-07 09:29:25,593 - __main__] INFO: Plot dataframe shape: (871468626, 9)
[2025-07-07 09:29:25,593 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 09:29:31,333 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 09:29:31,334 - __main__] INFO: Data shape for upset plot: (871468626, 9)
[2025-07-07 09:35:22,091 - __main__] INFO: Gene pairs by categories shape: (871468626, 9)
[2025-07-07 09:35:22,092 - __main__] INFO: First few entries:
[2025-07-07 09:35:22,100 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.683105
                                                                               True                           True  ...  0.950195
                                                                               True                           True  ...  0.666504
                                                                               True                           True  ...  0.950195
                                                                               True                           True  ...  0.666504

[5 rows x 9 columns]
[2025-07-07 09:35:22,100 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 09:36:38,917 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cervix_ectocervix_full.svg
[2025-07-07 09:36:38,917 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_092514/upsetplot_gtex_cervix_ectocervix_full.svg
[2025-07-07 09:36:38,917 - __main__] INFO: Data shape for trimmed plot: (871468626, 9)
[2025-07-07 09:38:43,611 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 09:38:43,611 - __main__] INFO: Shape: (871468626, 9)
[2025-07-07 09:40:52,196 - __main__] INFO: Unique index combinations:
[2025-07-07 09:40:52,202 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 09:40:52,203 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 09:40:52,206 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 09:40:52,207 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 09:40:52,210 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 09:40:52,212 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 09:40:52,215 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 09:48:15,575 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 09:48:15,583 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.683105
                                                                               True                           True  ...  0.950195
                                                                               True                           True  ...  0.666504
                                                                               True                           True  ...  0.950195
                                                                               True                           True  ...  0.666504

[5 rows x 9 columns]
[2025-07-07 09:48:16,514 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 09:49:00,683 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cervix_ectocervix_trimmed.svg
[2025-07-07 09:49:00,684 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_092514/upsetplot_gtex_cervix_ectocervix_trimmed.svg
[2025-07-07 09:49:00,684 - __main__] INFO: Final dataframe shape: (871468626, 9)
[2025-07-07 09:49:00,684 - __main__] INFO: Final dataframe head:
[2025-07-07 09:49:00,689 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000169469.8  ENSG00000205420.10            True  ...  0.683105
ENSG00000171401.14 ENSG00000205420.10            True  ...  0.950195
                   ENSG00000169469.8             True  ...  0.666504
ENSG00000169474.4  ENSG00000205420.10            True  ...  0.950195
                   ENSG00000169469.8             True  ...  0.666504

[5 rows x 9 columns]
[2025-07-07 09:49:00,689 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cervix_ectocervix-var_pc_log2.pkl
[2025-07-07 09:49:00,689 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 09:49:03,473 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cervix_ectocervix-var_pc_log2.pkl
[2025-07-07 09:49:03,473 - __main__] INFO: Script completed successfully!
[2025-07-07 09:49:03,473 - __main__] INFO: All outputs saved to log directory: logs/20250707_092514
[2025-07-07 09:49:09,016 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_094909
[2025-07-07 09:49:09,016 - __main__] INFO: Log directory: logs/20250707_094909
[2025-07-07 09:49:09,016 - __main__] INFO: Configuration:
[2025-07-07 09:49:09,016 - __main__] INFO:   GTEX_TISSUE: cervix_endocervix
[2025-07-07 09:49:09,016 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 09:49:09,016 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 09:49:09,016 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 09:49:09,016 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 09:49:09,016 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 09:49:09,016 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_cervix_endocervix-var_pc_log2-all.pkl
[2025-07-07 09:49:09,016 - __main__] INFO: Loading correlation data...
[2025-07-07 09:49:16,183 - __main__] INFO: Dataframe shape: (883533666, 3)
[2025-07-07 09:49:16,183 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 09:49:16,188 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000124939.5  ENSG00000124107.5   0.545410  0.896973  0.814453
ENSG00000117983.17 ENSG00000124107.5   0.545410  0.947266  0.818359
                   ENSG00000124939.5   1.000000  0.922363  0.984863
ENSG00000162896.5  ENSG00000124107.5   1.000000  0.893066  0.866699
                   ENSG00000124939.5   0.549805  0.979980  0.960449
                   ENSG00000117983.17  0.549805  0.901855  0.939453
ENSG00000234685.1  ENSG00000124107.5   0.545410  0.805176  0.638184
                   ENSG00000124939.5   0.545410  0.874512  0.731934
                   ENSG00000117983.17  0.545410  0.727051  0.687012
                   ENSG00000162896.5   0.656250  0.937988  0.650391
ENSG00000161055.3  ENSG00000124107.5   0.391846  0.529297  0.587891
                   ENSG00000124939.5   0.437500  0.779785  0.680664
                   ENSG00000117983.17  0.437500  0.591797  0.636230
                   ENSG00000162896.5   1.000000  0.849121  0.575684
                   ENSG00000234685.1   0.656250  0.861328  0.790039
[2025-07-07 09:49:16,188 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 09:51:20,398 - __main__] INFO: 
                ccc       pearson      spearman
count  8.835337e+08  8.835337e+08  8.835337e+08
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    4.760742e-02  1.275635e-01  1.313477e-01
50%    1.817627e-01  2.496338e-01  2.675781e-01
75%    3.645020e-01  4.155273e-01  4.194336e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 09:52:20,344 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 09:52:20,348 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.035095  0.107056  0.108459
0.242105  0.047607  0.123352  0.127319
0.284211  0.054047  0.145142  0.153442
0.326316  0.081604  0.164062  0.174072
0.368421  0.096375  0.183838  0.184814
0.410526  0.129028  0.204590  0.212158
0.452632  0.156250  0.224976  0.236328
0.494737  0.179077  0.246826  0.261475
0.536842  0.206299  0.269775  0.290039
0.578947  0.234009  0.294434  0.309082
0.621053  0.250000  0.320312  0.333252
0.663158  0.280518  0.348389  0.369629
0.705263  0.295410  0.379150  0.406006
0.747368  0.364502  0.413330  0.418213
0.789474  0.377930  0.451904  0.465576
0.831579  0.432861  0.497070  0.515137
0.873684  0.454590  0.551270  0.531738
0.915789  0.536133  0.620605  0.589844
0.957895  0.656250  0.721680  0.685059
1.000000  1.000000  1.000000  1.000000
[2025-07-07 09:52:33,034 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 09:52:33,035 - __main__] INFO: 0.2    0.035095
0.8    0.383545
Name: ccc, dtype: float64
[2025-07-07 09:52:33,035 - __main__] INFO: CCC lower quantile: 0.03509521484375, upper quantile: 0.383544921875
[2025-07-07 09:52:44,861 - __main__] INFO: Clustermatch quantiles: lower=0.06329345703125, upper=0.29541015625
[2025-07-07 09:52:56,940 - __main__] INFO: Pearson quantiles: lower=0.1524658203125, upper=0.375
[2025-07-07 09:53:09,004 - __main__] INFO: Spearman quantiles: lower=0.1636962890625, upper=0.40283203125
[2025-07-07 09:53:11,231 - __main__] INFO: Pearson higher count: 265340312
[2025-07-07 09:53:13,216 - __main__] INFO: Pearson lower count: 265060666
[2025-07-07 09:53:15,439 - __main__] INFO: Spearman higher count: 265321106
[2025-07-07 09:53:17,424 - __main__] INFO: Spearman lower count: 265613703
[2025-07-07 09:53:20,194 - __main__] INFO: Clustermatch higher count: 265638428
[2025-07-07 09:53:22,296 - __main__] INFO: Clustermatch lower count: 269730225
[2025-07-07 09:53:24,825 - __main__] INFO: Plot dataframe shape: (883533666, 9)
[2025-07-07 09:53:24,825 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 09:53:30,687 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 09:53:30,688 - __main__] INFO: Data shape for upset plot: (883533666, 9)
[2025-07-07 09:59:33,898 - __main__] INFO: Gene pairs by categories shape: (883533666, 9)
[2025-07-07 09:59:33,899 - __main__] INFO: First few entries:
[2025-07-07 09:59:33,907 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.814453
                                                                               True                           True  ...  0.818359
                                                                               True                           True  ...  0.984863
                                                                               True                           True  ...  0.866699
                                                                               True                           True  ...  0.960449

[5 rows x 9 columns]
[2025-07-07 09:59:33,907 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 10:00:50,941 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cervix_endocervix_full.svg
[2025-07-07 10:00:50,942 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_094909/upsetplot_gtex_cervix_endocervix_full.svg
[2025-07-07 10:00:50,942 - __main__] INFO: Data shape for trimmed plot: (883533666, 9)
[2025-07-07 10:02:56,301 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 10:02:56,301 - __main__] INFO: Shape: (883533666, 9)
[2025-07-07 10:05:05,448 - __main__] INFO: Unique index combinations:
[2025-07-07 10:05:05,454 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 10:05:05,455 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 10:05:05,458 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 10:05:05,459 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 10:05:05,462 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 10:05:05,464 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 10:05:05,467 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 10:12:19,020 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 10:12:19,028 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.814453
                                                                               True                           True  ...  0.818359
                                                                               True                           True  ...  0.984863
                                                                               True                           True  ...  0.866699
                                                                               True                           True  ...  0.960449

[5 rows x 9 columns]
[2025-07-07 10:12:19,908 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 10:13:02,244 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cervix_endocervix_trimmed.svg
[2025-07-07 10:13:02,244 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_094909/upsetplot_gtex_cervix_endocervix_trimmed.svg
[2025-07-07 10:13:02,244 - __main__] INFO: Final dataframe shape: (883533666, 9)
[2025-07-07 10:13:02,244 - __main__] INFO: Final dataframe head:
[2025-07-07 10:13:02,250 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000124939.5  ENSG00000124107.5            True  ...  0.814453
ENSG00000117983.17 ENSG00000124107.5            True  ...  0.818359
                   ENSG00000124939.5            True  ...  0.984863
ENSG00000162896.5  ENSG00000124107.5            True  ...  0.866699
                   ENSG00000124939.5            True  ...  0.960449

[5 rows x 9 columns]
[2025-07-07 10:13:02,250 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cervix_endocervix-var_pc_log2.pkl
[2025-07-07 10:13:02,250 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 10:13:05,104 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cervix_endocervix-var_pc_log2.pkl
[2025-07-07 10:13:05,104 - __main__] INFO: Script completed successfully!
[2025-07-07 10:13:05,104 - __main__] INFO: All outputs saved to log directory: logs/20250707_094909
[2025-07-07 10:13:10,817 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_101310
[2025-07-07 10:13:10,817 - __main__] INFO: Log directory: logs/20250707_101310
[2025-07-07 10:13:10,817 - __main__] INFO: Configuration:
[2025-07-07 10:13:10,817 - __main__] INFO:   GTEX_TISSUE: colon_sigmoid
[2025-07-07 10:13:10,817 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 10:13:10,817 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 10:13:10,817 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 10:13:10,817 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 10:13:10,817 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 10:13:10,817 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_colon_sigmoid-var_pc_log2-all.pkl
[2025-07-07 10:13:10,817 - __main__] INFO: Loading correlation data...
[2025-07-07 10:13:21,646 - __main__] INFO: Dataframe shape: (1414189153, 3)
[2025-07-07 10:13:21,646 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 10:13:21,651 - __main__] INFO: 
                                           ccc   pearson  spearman
ENSG00000211890.3 ENSG00000129824.15  0.020538  0.057251  0.182983
ENSG00000211895.4 ENSG00000129824.15  0.017654  0.079346  0.152100
                  ENSG00000211890.3   0.451416  0.850098  0.839844
ENSG00000162896.5 ENSG00000129824.15  0.067932  0.136230  0.279053
                  ENSG00000211890.3   0.089355  0.598145  0.453857
                  ENSG00000211895.4   0.071899  0.731934  0.385010
ENSG00000233041.8 ENSG00000129824.15  0.042297  0.123840  0.241577
                  ENSG00000211890.3   0.081299  0.571777  0.380859
                  ENSG00000211895.4   0.072021  0.718750  0.307129
                  ENSG00000162896.5   0.566406  0.830078  0.883789
ENSG00000211596.3 ENSG00000129824.15  0.037842  0.082642  0.204712
                  ENSG00000211890.3   0.300293  0.853027  0.769531
                  ENSG00000211895.4   0.437012  0.957520  0.854492
                  ENSG00000162896.5   0.071289  0.706055  0.373047
                  ENSG00000233041.8   0.074768  0.693848  0.291016
[2025-07-07 10:13:21,651 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 10:17:55,680 - __main__] INFO: 
                ccc       pearson      spearman
count  1.414189e+09  1.414189e+09  1.414189e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    8.702278e-05  1.969910e-02  2.230835e-02
50%    2.859116e-03  4.434204e-02  4.965210e-02
75%    1.286316e-02  9.393311e-02  9.570312e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 10:19:31,851 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 10:19:31,855 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000029  0.015747  0.017746
0.242105  0.000072  0.019073  0.021591
0.284211  0.000158  0.022537  0.025574
0.326316  0.000323  0.026184  0.029770
0.368421  0.000610  0.030075  0.034149
0.410526  0.001069  0.034241  0.038757
0.452632  0.001769  0.038757  0.043701
0.494737  0.002724  0.043671  0.048981
0.536842  0.003906  0.049133  0.054657
0.578947  0.005264  0.055267  0.060852
0.621053  0.006779  0.062317  0.067688
0.663158  0.008430  0.070618  0.075378
0.705263  0.010361  0.080566  0.084167
0.747368  0.012680  0.093018  0.094971
0.789474  0.015793  0.109131  0.109253
0.831579  0.020218  0.130981  0.128906
0.873684  0.026855  0.162598  0.158325
0.915789  0.037842  0.212402  0.205933
0.957895  0.062347  0.304199  0.292480
1.000000  1.000000  1.000000  1.000000
[2025-07-07 10:19:50,708 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 10:19:50,709 - __main__] INFO: 0.2    0.000029
0.8    0.016739
Name: ccc, dtype: float64
[2025-07-07 10:19:50,709 - __main__] INFO: CCC lower quantile: 2.8848648071289062e-05, upper quantile: 0.0167388916015625
[2025-07-07 10:20:10,506 - __main__] INFO: Clustermatch quantiles: lower=0.00021207332611083984, upper=0.0100860595703125
[2025-07-07 10:20:32,720 - __main__] INFO: Pearson quantiles: lower=0.0238800048828125, upper=0.0792236328125
[2025-07-07 10:20:54,286 - __main__] INFO: Spearman quantiles: lower=0.0271148681640625, upper=0.0830078125
[2025-07-07 10:20:58,740 - __main__] INFO: Pearson higher count: 424396694
[2025-07-07 10:21:01,921 - __main__] INFO: Pearson lower count: 424328009
[2025-07-07 10:21:05,483 - __main__] INFO: Spearman higher count: 424419078
[2025-07-07 10:21:08,661 - __main__] INFO: Spearman lower count: 424422122
[2025-07-07 10:21:13,124 - __main__] INFO: Clustermatch higher count: 424324411
[2025-07-07 10:21:16,504 - __main__] INFO: Clustermatch lower count: 424264167
[2025-07-07 10:21:20,549 - __main__] INFO: Plot dataframe shape: (1414189153, 9)
[2025-07-07 10:21:20,549 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 10:21:29,843 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 10:21:29,843 - __main__] INFO: Data shape for upset plot: (1414189153, 9)
[2025-07-07 10:30:24,690 - __main__] INFO: Gene pairs by categories shape: (1414189153, 9)
[2025-07-07 10:30:24,690 - __main__] INFO: First few entries:
[2025-07-07 10:30:24,698 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            False          True                          False  ...  0.182983
                                                                True           True                           True  ...  0.152100
                                                                               True                           True  ...  0.839844
                                                                               True                           True  ...  0.279053
                                                                               True                           True  ...  0.453857

[5 rows x 9 columns]
[2025-07-07 10:30:24,698 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 10:32:28,403 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_colon_sigmoid_full.svg
[2025-07-07 10:32:28,403 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_101310/upsetplot_gtex_colon_sigmoid_full.svg
[2025-07-07 10:32:28,403 - __main__] INFO: Data shape for trimmed plot: (1414189153, 9)
[2025-07-07 10:36:14,644 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 10:36:14,645 - __main__] INFO: Shape: (1414189153, 9)
[2025-07-07 10:39:49,288 - __main__] INFO: Unique index combinations:
[2025-07-07 10:39:49,294 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 10:39:49,295 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 10:39:49,298 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 10:39:49,299 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 10:39:49,302 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 10:39:49,304 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 10:39:49,307 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 10:52:16,893 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 10:52:16,901 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.152100
                                                                               True                           True  ...  0.839844
                                                                               True                           True  ...  0.279053
                                                                               True                           True  ...  0.453857
                                                                               True                           True  ...  0.385010

[5 rows x 9 columns]
[2025-07-07 10:52:18,462 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 10:53:30,724 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_colon_sigmoid_trimmed.svg
[2025-07-07 10:53:30,725 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_101310/upsetplot_gtex_colon_sigmoid_trimmed.svg
[2025-07-07 10:53:30,725 - __main__] INFO: Final dataframe shape: (1414189153, 9)
[2025-07-07 10:53:30,725 - __main__] INFO: Final dataframe head:
[2025-07-07 10:53:30,730 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000211890.3 ENSG00000129824.15           False  ...  0.182983
ENSG00000211895.4 ENSG00000129824.15            True  ...  0.152100
                  ENSG00000211890.3             True  ...  0.839844
ENSG00000162896.5 ENSG00000129824.15            True  ...  0.279053
                  ENSG00000211890.3             True  ...  0.453857

[5 rows x 9 columns]
[2025-07-07 10:53:30,730 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-colon_sigmoid-var_pc_log2.pkl
[2025-07-07 10:53:30,730 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 10:53:35,298 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-colon_sigmoid-var_pc_log2.pkl
[2025-07-07 10:53:35,298 - __main__] INFO: Script completed successfully!
[2025-07-07 10:53:35,298 - __main__] INFO: All outputs saved to log directory: logs/20250707_101310
[2025-07-07 10:53:41,403 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_105341
[2025-07-07 10:53:41,403 - __main__] INFO: Log directory: logs/20250707_105341
[2025-07-07 10:53:41,403 - __main__] INFO: Configuration:
[2025-07-07 10:53:41,403 - __main__] INFO:   GTEX_TISSUE: colon_transverse
[2025-07-07 10:53:41,403 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 10:53:41,403 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 10:53:41,403 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 10:53:41,403 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 10:53:41,403 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 10:53:41,404 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_colon_transverse-var_pc_log2-all.pkl
[2025-07-07 10:53:41,404 - __main__] INFO: Loading correlation data...
[2025-07-07 10:53:53,315 - __main__] INFO: Dataframe shape: (1425646503, 3)
[2025-07-07 10:53:53,315 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 10:53:53,319 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000211895.4  ENSG00000211890.3   0.659668  0.809082  0.925781
ENSG00000162896.5  ENSG00000211890.3   0.201294  0.223389  0.522461
                   ENSG00000211895.4   0.171021  0.228271  0.523438
ENSG00000007306.14 ENSG00000211890.3   0.169556  0.135498  0.435791
                   ENSG00000211895.4   0.141846  0.108643  0.412109
                   ENSG00000162896.5   0.684082  0.740723  0.870605
ENSG00000197888.2  ENSG00000211890.3   0.165894  0.153320  0.394775
                   ENSG00000211895.4   0.158447  0.127197  0.368652
                   ENSG00000162896.5   0.574219  0.683105  0.686035
                   ENSG00000007306.14  0.552246  0.560547  0.689941
ENSG00000016602.9  ENSG00000211890.3   0.129639  0.079651  0.373535
                   ENSG00000211895.4   0.105469  0.045258  0.359131
                   ENSG00000162896.5   0.559570  0.545898  0.813477
                   ENSG00000007306.14  0.794434  0.728027  0.940430
                   ENSG00000197888.2   0.454102  0.471191  0.654297
[2025-07-07 10:53:53,319 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 10:58:10,893 - __main__] INFO: 
                ccc       pearson      spearman
count  1.425647e+09  1.425647e+09  1.425647e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.264811e-04  2.296448e-02  2.590942e-02
50%    4.764557e-03  5.502319e-02  6.036377e-02
75%    2.444458e-02  1.364746e-01  1.431885e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 10:59:46,754 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 10:59:46,757 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000038  0.018188  0.020447
0.242105  0.000105  0.022186  0.025024
0.284211  0.000245  0.026428  0.029831
0.326316  0.000512  0.030991  0.034912
0.368421  0.001003  0.035919  0.040344
0.410526  0.001816  0.041290  0.046173
0.452632  0.003010  0.047302  0.052490
0.494737  0.004555  0.054108  0.059448
0.536842  0.006363  0.061981  0.067139
0.578947  0.008415  0.071289  0.075867
0.621053  0.010864  0.082458  0.085876
0.663158  0.013992  0.096130  0.099243
0.705263  0.018082  0.113159  0.116760
0.747368  0.024017  0.134888  0.141357
0.789474  0.032837  0.163452  0.177124
0.831579  0.046783  0.202515  0.229370
0.873684  0.069885  0.258301  0.304932
0.915789  0.115662  0.342285  0.414307
0.957895  0.230591  0.479980  0.578125
1.000000  1.000000  1.000000  1.000000
[2025-07-07 11:00:02,793 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 11:00:02,794 - __main__] INFO: 0.2    0.000038
0.8    0.035553
Name: ccc, dtype: float64
[2025-07-07 11:00:02,794 - __main__] INFO: CCC lower quantile: 3.832578659057617e-05, upper quantile: 0.035552978515625
[2025-07-07 11:00:18,199 - __main__] INFO: Clustermatch quantiles: lower=0.0003256797790527344, upper=0.0176544189453125
[2025-07-07 11:00:38,839 - __main__] INFO: Pearson quantiles: lower=0.028106689453125, upper=0.11083984375
[2025-07-07 11:00:59,531 - __main__] INFO: Spearman quantiles: lower=0.031707763671875, upper=0.1142578125
[2025-07-07 11:01:04,009 - __main__] INFO: Pearson higher count: 427765522
[2025-07-07 11:01:07,217 - __main__] INFO: Pearson lower count: 427825634
[2025-07-07 11:01:11,570 - __main__] INFO: Spearman higher count: 427818164
[2025-07-07 11:01:14,791 - __main__] INFO: Spearman lower count: 428047568
[2025-07-07 11:01:19,305 - __main__] INFO: Clustermatch higher count: 427723390
[2025-07-07 11:01:22,523 - __main__] INFO: Clustermatch lower count: 427703246
[2025-07-07 11:01:27,202 - __main__] INFO: Plot dataframe shape: (1425646503, 9)
[2025-07-07 11:01:27,202 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 11:01:36,587 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 11:01:36,587 - __main__] INFO: Data shape for upset plot: (1425646503, 9)
[2025-07-07 11:10:27,350 - __main__] INFO: Gene pairs by categories shape: (1425646503, 9)
[2025-07-07 11:10:27,351 - __main__] INFO: First few entries:
[2025-07-07 11:10:27,359 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.925781
                                                                               True                           True  ...  0.522461
                                                                               True                           True  ...  0.523438
                                                                               True                           True  ...  0.435791
                                                                False          True                          False  ...  0.412109

[5 rows x 9 columns]
[2025-07-07 11:10:27,359 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 11:12:30,420 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_colon_transverse_full.svg
[2025-07-07 11:12:30,420 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_105341/upsetplot_gtex_colon_transverse_full.svg
[2025-07-07 11:12:30,420 - __main__] INFO: Data shape for trimmed plot: (1425646503, 9)
[2025-07-07 11:16:12,359 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 11:16:12,360 - __main__] INFO: Shape: (1425646503, 9)
[2025-07-07 11:19:43,937 - __main__] INFO: Unique index combinations:
[2025-07-07 11:19:43,943 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 11:19:43,944 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 11:19:43,947 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 11:19:43,948 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 11:19:43,951 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 11:19:43,953 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 11:19:43,956 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 11:32:09,763 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 11:32:09,772 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.925781
                                                                               True                           True  ...  0.522461
                                                                               True                           True  ...  0.523438
                                                                               True                           True  ...  0.435791
                                                                               True                           True  ...  0.870605

[5 rows x 9 columns]
[2025-07-07 11:32:11,410 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 11:33:23,556 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_colon_transverse_trimmed.svg
[2025-07-07 11:33:23,557 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_105341/upsetplot_gtex_colon_transverse_trimmed.svg
[2025-07-07 11:33:23,557 - __main__] INFO: Final dataframe shape: (1425646503, 9)
[2025-07-07 11:33:23,557 - __main__] INFO: Final dataframe head:
[2025-07-07 11:33:23,562 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000211895.4  ENSG00000211890.3            True  ...  0.925781
ENSG00000162896.5  ENSG00000211890.3            True  ...  0.522461
                   ENSG00000211895.4            True  ...  0.523438
ENSG00000007306.14 ENSG00000211890.3            True  ...  0.435791
                   ENSG00000211895.4           False  ...  0.412109

[5 rows x 9 columns]
[2025-07-07 11:33:23,562 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-colon_transverse-var_pc_log2.pkl
[2025-07-07 11:33:23,562 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 11:33:28,076 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-colon_transverse-var_pc_log2.pkl
[2025-07-07 11:33:28,076 - __main__] INFO: Script completed successfully!
[2025-07-07 11:33:28,076 - __main__] INFO: All outputs saved to log directory: logs/20250707_105341
[2025-07-07 11:33:34,110 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_113334
[2025-07-07 11:33:34,110 - __main__] INFO: Log directory: logs/20250707_113334
[2025-07-07 11:33:34,110 - __main__] INFO: Configuration:
[2025-07-07 11:33:34,110 - __main__] INFO:   GTEX_TISSUE: esophagus_gastroesophageal_junction
[2025-07-07 11:33:34,110 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 11:33:34,110 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 11:33:34,110 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 11:33:34,110 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 11:33:34,110 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 11:33:34,110 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_esophagus_gastroesophageal_junction-var_pc_log2-all.pkl
[2025-07-07 11:33:34,110 - __main__] INFO: Loading correlation data...
[2025-07-07 11:33:45,619 - __main__] INFO: Dataframe shape: (1407708330, 3)
[2025-07-07 11:33:45,619 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 11:33:45,623 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000244734.3  ENSG00000129824.15  0.024216  0.128418  0.025208
ENSG00000188536.12 ENSG00000129824.15  0.030396  0.139526  0.039215
                   ENSG00000244734.3   0.895996  0.958008  0.986816
ENSG00000131668.13 ENSG00000129824.15  0.032349  0.113892  0.131836
                   ENSG00000244734.3   0.034821  0.125854  0.162109
                   ENSG00000188536.12  0.034027  0.134399  0.163452
ENSG00000012817.15 ENSG00000129824.15  0.509766  0.885254  0.812500
                   ENSG00000244734.3   0.025009  0.008072  0.048462
                   ENSG00000188536.12  0.024017  0.006008  0.055542
                   ENSG00000131668.13  0.016678  0.105652  0.103638
ENSG00000134184.12 ENSG00000129824.15  0.010208  0.033875  0.017349
                   ENSG00000244734.3   0.010834  0.047577  0.018646
                   ENSG00000188536.12  0.007614  0.076172  0.029922
                   ENSG00000131668.13  0.015884  0.143921  0.154541
                   ENSG00000012817.15  0.019394  0.040131  0.021408
[2025-07-07 11:33:45,623 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 11:38:14,651 - __main__] INFO: 
                ccc       pearson      spearman
count  1.407708e+09  1.407708e+09  1.407708e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    7.063150e-05  1.933289e-02  2.215576e-02
50%    2.653122e-03  4.418945e-02  4.946899e-02
75%    1.303864e-02  9.539795e-02  9.594727e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 11:39:52,021 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 11:39:52,025 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000026  0.015404  0.017593
0.242105  0.000058  0.018692  0.021423
0.284211  0.000132  0.022156  0.025391
0.326316  0.000270  0.025818  0.029587
0.368421  0.000521  0.029724  0.033936
0.410526  0.000937  0.033936  0.038574
0.452632  0.001594  0.038513  0.043488
0.494737  0.002518  0.043518  0.048767
0.536842  0.003710  0.049103  0.054504
0.578947  0.005096  0.055420  0.060699
0.621053  0.006641  0.062683  0.067627
0.663158  0.008339  0.071289  0.075317
0.705263  0.010384  0.081665  0.084167
0.747368  0.012856  0.094482  0.095154
0.789474  0.016022  0.110962  0.109863
0.831579  0.020950  0.133057  0.130615
0.873684  0.028748  0.164673  0.163208
0.915789  0.041809  0.214844  0.217773
0.957895  0.067200  0.311523  0.318115
1.000000  1.000000  1.000000  1.000000
[2025-07-07 11:40:09,905 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 11:40:09,906 - __main__] INFO: 0.2    0.000026
0.8    0.017212
Name: ccc, dtype: float64
[2025-07-07 11:40:09,906 - __main__] INFO: CCC lower quantile: 2.5928020477294922e-05, upper quantile: 0.0172119140625
[2025-07-07 11:40:29,800 - __main__] INFO: Clustermatch quantiles: lower=0.00017714500427246094, upper=0.0101165771484375
[2025-07-07 11:40:49,285 - __main__] INFO: Pearson quantiles: lower=0.0235137939453125, upper=0.0802001953125
[2025-07-07 11:41:11,170 - __main__] INFO: Spearman quantiles: lower=0.0269317626953125, upper=0.0830078125
[2025-07-07 11:41:15,604 - __main__] INFO: Pearson higher count: 422621348
[2025-07-07 11:41:18,772 - __main__] INFO: Pearson lower count: 422550806
[2025-07-07 11:41:23,202 - __main__] INFO: Spearman higher count: 422494306
[2025-07-07 11:41:26,367 - __main__] INFO: Spearman lower count: 422433946
[2025-07-07 11:41:30,811 - __main__] INFO: Clustermatch higher count: 422387869
[2025-07-07 11:41:34,091 - __main__] INFO: Clustermatch lower count: 422732253
[2025-07-07 11:41:38,111 - __main__] INFO: Plot dataframe shape: (1407708330, 9)
[2025-07-07 11:41:38,111 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 11:41:47,450 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 11:41:47,450 - __main__] INFO: Data shape for upset plot: (1407708330, 9)
[2025-07-07 11:50:48,573 - __main__] INFO: Gene pairs by categories shape: (1407708330, 9)
[2025-07-07 11:50:48,574 - __main__] INFO: First few entries:
[2025-07-07 11:50:48,582 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
True           False         False              False           True           True                           True  ...  0.025208
False          False         False              False           True           True                           True  ...  0.039215
                                                True            True           True                           True  ...  0.986816
                                                                               True                           True  ...  0.131836
                                                                               True                           True  ...  0.162109

[5 rows x 9 columns]
[2025-07-07 11:50:48,582 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 11:52:50,814 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_gastroesophageal_junction_full.svg
[2025-07-07 11:52:50,815 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_113334/upsetplot_gtex_esophagus_gastroesophageal_junction_full.svg
[2025-07-07 11:52:50,815 - __main__] INFO: Data shape for trimmed plot: (1407708330, 9)
[2025-07-07 11:56:34,939 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 11:56:34,940 - __main__] INFO: Shape: (1407708330, 9)
[2025-07-07 12:00:02,120 - __main__] INFO: Unique index combinations:
[2025-07-07 12:00:02,127 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 12:00:02,128 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 12:00:02,131 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 12:00:02,132 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 12:00:02,134 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 12:00:02,137 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 12:00:02,139 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 12:12:19,115 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 12:12:19,124 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.986816
                                                                               True                           True  ...  0.131836
                                                                               True                           True  ...  0.162109
                                                                               True                           True  ...  0.163452
                                                                               True                           True  ...  0.812500

[5 rows x 9 columns]
[2025-07-07 12:12:20,590 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 12:13:31,417 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_gastroesophageal_junction_trimmed.svg
[2025-07-07 12:13:31,418 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_113334/upsetplot_gtex_esophagus_gastroesophageal_junction_trimmed.svg
[2025-07-07 12:13:31,418 - __main__] INFO: Final dataframe shape: (1407708330, 9)
[2025-07-07 12:13:31,418 - __main__] INFO: Final dataframe head:
[2025-07-07 12:13:31,423 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000244734.3  ENSG00000129824.15            True  ...  0.025208
ENSG00000188536.12 ENSG00000129824.15            True  ...  0.039215
                   ENSG00000244734.3             True  ...  0.986816
ENSG00000131668.13 ENSG00000129824.15            True  ...  0.131836
                   ENSG00000244734.3             True  ...  0.162109

[5 rows x 9 columns]
[2025-07-07 12:13:31,423 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-esophagus_gastroesophageal_junction-var_pc_log2.pkl
[2025-07-07 12:13:31,423 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 12:13:35,923 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-esophagus_gastroesophageal_junction-var_pc_log2.pkl
[2025-07-07 12:13:35,923 - __main__] INFO: Script completed successfully!
[2025-07-07 12:13:35,923 - __main__] INFO: All outputs saved to log directory: logs/20250707_113334
[2025-07-07 12:13:41,889 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_121341
[2025-07-07 12:13:41,889 - __main__] INFO: Log directory: logs/20250707_121341
[2025-07-07 12:13:41,889 - __main__] INFO: Configuration:
[2025-07-07 12:13:41,889 - __main__] INFO:   GTEX_TISSUE: esophagus_mucosa
[2025-07-07 12:13:41,889 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 12:13:41,889 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 12:13:41,889 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 12:13:41,889 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 12:13:41,889 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 12:13:41,889 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_esophagus_mucosa-var_pc_log2-all.pkl
[2025-07-07 12:13:41,890 - __main__] INFO: Loading correlation data...
[2025-07-07 12:13:53,900 - __main__] INFO: Dataframe shape: (1429226380, 3)
[2025-07-07 12:13:53,900 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 12:13:53,905 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000134184.12 ENSG00000143556.8   0.002644  0.059174  0.086365
ENSG00000078898.6  ENSG00000143556.8   0.004910  0.086914  0.046204
                   ENSG00000134184.12  0.002729  0.017792  0.018829
ENSG00000129824.15 ENSG00000143556.8   0.012199  0.043762  0.098511
                   ENSG00000134184.12  0.004211  0.028519  0.027298
                   ENSG00000078898.6   0.008644  0.102295  0.018188
ENSG00000161055.3  ENSG00000143556.8   0.006428  0.059692  0.033752
                   ENSG00000134184.12  0.004650  0.015099  0.036835
                   ENSG00000078898.6   0.312012  0.740234  0.657227
                   ENSG00000129824.15  0.009499  0.080994  0.052094
ENSG00000244094.1  ENSG00000143556.8   0.354492  0.675781  0.770996
                   ENSG00000134184.12  0.007191  0.055573  0.106384
                   ENSG00000078898.6   0.007549  0.084167  0.050140
                   ENSG00000129824.15  0.005459  0.063599  0.017303
                   ENSG00000161055.3   0.008141  0.085815  0.041199
[2025-07-07 12:13:53,905 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 12:18:36,627 - __main__] INFO: 
                ccc       pearson      spearman
count  1.429226e+09  1.429226e+09  1.429226e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    4.488230e-05  1.733398e-02  1.945496e-02
50%    2.166748e-03  4.058838e-02  4.434204e-02
75%    1.156616e-02  9.429932e-02  9.210205e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 12:20:17,237 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 12:20:17,241 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000013  0.013741  0.015396
0.242105  0.000039  0.016754  0.018814
0.284211  0.000091  0.019913  0.022369
0.326316  0.000194  0.023285  0.026123
0.368421  0.000386  0.026901  0.030090
0.410526  0.000726  0.030823  0.034302
0.452632  0.001273  0.035126  0.038818
0.494737  0.002054  0.039948  0.043701
0.536842  0.003042  0.045380  0.049042
0.578947  0.004204  0.051666  0.054962
0.621053  0.005508  0.059113  0.061584
0.663158  0.007034  0.068115  0.069214
0.705263  0.008904  0.079224  0.078674
0.747368  0.011360  0.093323  0.091187
0.789474  0.014809  0.111755  0.108459
0.831579  0.019989  0.136963  0.134277
0.873684  0.027557  0.173462  0.174072
0.915789  0.041016  0.231201  0.236328
0.957895  0.068481  0.336182  0.343262
1.000000  1.000000  1.000000  1.000000
[2025-07-07 12:20:34,930 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 12:20:34,931 - __main__] INFO: 0.2    0.000013
0.8    0.015991
Name: ccc, dtype: float64
[2025-07-07 12:20:34,931 - __main__] INFO: CCC lower quantile: 1.2993812561035156e-05, upper quantile: 0.0159912109375
[2025-07-07 12:20:53,049 - __main__] INFO: Clustermatch quantiles: lower=0.00011932849884033203, upper=0.00864410400390625
[2025-07-07 12:21:13,619 - __main__] INFO: Pearson quantiles: lower=0.0211639404296875, upper=0.07769775390625
[2025-07-07 12:21:34,357 - __main__] INFO: Spearman quantiles: lower=0.0237579345703125, upper=0.07733154296875
[2025-07-07 12:21:38,860 - __main__] INFO: Pearson higher count: 428883772
[2025-07-07 12:21:42,082 - __main__] INFO: Pearson lower count: 429028011
[2025-07-07 12:21:46,497 - __main__] INFO: Spearman higher count: 428774278
[2025-07-07 12:21:49,725 - __main__] INFO: Spearman lower count: 428945588
[2025-07-07 12:21:54,267 - __main__] INFO: Clustermatch higher count: 429369592
[2025-07-07 12:21:57,498 - __main__] INFO: Clustermatch lower count: 428979734
[2025-07-07 12:22:02,229 - __main__] INFO: Plot dataframe shape: (1429226380, 9)
[2025-07-07 12:22:02,229 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 12:22:11,624 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 12:22:11,624 - __main__] INFO: Data shape for upset plot: (1429226380, 9)
[2025-07-07 12:31:09,079 - __main__] INFO: Gene pairs by categories shape: (1429226380, 9)
[2025-07-07 12:31:09,080 - __main__] INFO: First few entries:
[2025-07-07 12:31:09,088 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            False          False                         False  ...  0.086365
                                                False           True           False                          True  ...  0.046204
True           True          False              False           False          False                         False  ...  0.018829
False          False         False              True            False          True                          False  ...  0.098511
                                                False           False          False                         False  ...  0.027298

[5 rows x 9 columns]
[2025-07-07 12:31:09,088 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 12:33:13,861 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_mucosa_full.svg
[2025-07-07 12:33:13,862 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_121341/upsetplot_gtex_esophagus_mucosa_full.svg
[2025-07-07 12:33:13,862 - __main__] INFO: Data shape for trimmed plot: (1429226380, 9)
[2025-07-07 12:37:12,095 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 12:37:12,095 - __main__] INFO: Shape: (1429226380, 9)
[2025-07-07 12:40:41,948 - __main__] INFO: Unique index combinations:
[2025-07-07 12:40:41,954 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 12:40:41,955 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 12:40:41,958 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 12:40:41,959 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 12:40:41,962 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 12:40:41,965 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 12:40:41,967 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 12:53:06,243 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 12:53:06,252 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.657227
                                                                               True                           True  ...  0.770996
                                                                               True                           True  ...  0.228394
                                                                               True                           True  ...  0.689941
                                                                               True                           True  ...  0.780273

[5 rows x 9 columns]
[2025-07-07 12:53:07,746 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 12:54:20,268 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_mucosa_trimmed.svg
[2025-07-07 12:54:20,268 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_121341/upsetplot_gtex_esophagus_mucosa_trimmed.svg
[2025-07-07 12:54:20,269 - __main__] INFO: Final dataframe shape: (1429226380, 9)
[2025-07-07 12:54:20,269 - __main__] INFO: Final dataframe head:
[2025-07-07 12:54:20,274 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000134184.12 ENSG00000143556.8            False  ...  0.086365
ENSG00000078898.6  ENSG00000143556.8             True  ...  0.046204
                   ENSG00000134184.12           False  ...  0.018829
ENSG00000129824.15 ENSG00000143556.8            False  ...  0.098511
                   ENSG00000134184.12           False  ...  0.027298

[5 rows x 9 columns]
[2025-07-07 12:54:20,274 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-esophagus_mucosa-var_pc_log2.pkl
[2025-07-07 12:54:20,274 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 12:54:24,856 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-esophagus_mucosa-var_pc_log2.pkl
[2025-07-07 12:54:24,856 - __main__] INFO: Script completed successfully!
[2025-07-07 12:54:24,856 - __main__] INFO: All outputs saved to log directory: logs/20250707_121341
[2025-07-07 12:54:30,912 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_125430
[2025-07-07 12:54:30,912 - __main__] INFO: Log directory: logs/20250707_125430
[2025-07-07 12:54:30,912 - __main__] INFO: Configuration:
[2025-07-07 12:54:30,912 - __main__] INFO:   GTEX_TISSUE: esophagus_muscularis
[2025-07-07 12:54:30,912 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 12:54:30,912 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 12:54:30,912 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 12:54:30,912 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 12:54:30,912 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 12:54:30,912 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_esophagus_muscularis-var_pc_log2-all.pkl
[2025-07-07 12:54:30,912 - __main__] INFO: Loading correlation data...
[2025-07-07 12:54:43,100 - __main__] INFO: Dataframe shape: (1438705261, 3)
[2025-07-07 12:54:43,100 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 12:54:43,105 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000012817.15 ENSG00000129824.15  0.475586  0.879883  0.768555
ENSG00000229807.10 ENSG00000129824.15  0.451172  0.818848  0.697754
                   ENSG00000012817.15  0.456787  0.781250  0.636719
ENSG00000244734.3  ENSG00000129824.15  0.032654  0.005810  0.036621
                   ENSG00000012817.15  0.008499  0.019089  0.004555
                   ENSG00000229807.10  0.012283  0.015671  0.018250
ENSG00000067048.16 ENSG00000129824.15  0.524902  0.878906  0.810547
                   ENSG00000012817.15  0.624023  0.929688  0.899902
                   ENSG00000229807.10  0.455566  0.768066  0.642090
                   ENSG00000244734.3   0.020691  0.043518  0.042206
ENSG00000134184.12 ENSG00000129824.15  0.013817  0.004734  0.015915
                   ENSG00000012817.15  0.007248  0.016251  0.026810
                   ENSG00000229807.10  0.012535  0.099243  0.119690
                   ENSG00000244734.3   0.009315  0.079956  0.017822
                   ENSG00000067048.16  0.006580  0.014214  0.002899
[2025-07-07 12:54:43,105 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 12:59:23,585 - __main__] INFO: 
                ccc       pearson      spearman
count  1.438705e+09  1.438705e+09  1.438705e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    4.684925e-05  1.658630e-02  1.928711e-02
50%    2.042770e-03  3.942871e-02  4.336548e-02
75%    1.074219e-02  9.020996e-02  8.563232e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 13:01:03,477 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 13:01:03,481 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000015  0.013115  0.015297
0.242105  0.000039  0.016022  0.018661
0.284211  0.000092  0.019104  0.022141
0.326316  0.000194  0.022415  0.025803
0.368421  0.000375  0.025970  0.029663
0.410526  0.000690  0.029846  0.033722
0.452632  0.001200  0.034088  0.038086
0.494737  0.001935  0.038788  0.042755
0.536842  0.002884  0.044098  0.047821
0.578947  0.004002  0.050171  0.053375
0.621053  0.005253  0.057251  0.059540
0.663158  0.006672  0.065735  0.066528
0.705263  0.008377  0.076172  0.074585
0.747368  0.010567  0.089294  0.084900
0.789474  0.013641  0.106384  0.098633
0.831579  0.018188  0.129639  0.118408
0.873684  0.025345  0.163086  0.149658
0.915789  0.037140  0.216064  0.202515
0.957895  0.061615  0.316650  0.300293
1.000000  1.000000  1.000000  1.000000
[2025-07-07 13:01:21,296 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 13:01:21,298 - __main__] INFO: 0.2    0.000015
0.8    0.014671
Name: ccc, dtype: float64
[2025-07-07 13:01:21,298 - __main__] INFO: CCC lower quantile: 1.5139579772949219e-05, upper quantile: 0.01467132568359375
[2025-07-07 13:01:39,446 - __main__] INFO: Clustermatch quantiles: lower=0.00012445449829101562, upper=0.00812530517578125
[2025-07-07 13:01:59,339 - __main__] INFO: Pearson quantiles: lower=0.02032470703125, upper=0.07470703125
[2025-07-07 13:02:21,685 - __main__] INFO: Spearman quantiles: lower=0.0234832763671875, upper=0.073486328125
[2025-07-07 13:02:26,232 - __main__] INFO: Pearson higher count: 431855885
[2025-07-07 13:02:29,472 - __main__] INFO: Pearson lower count: 431774642
[2025-07-07 13:02:33,874 - __main__] INFO: Spearman higher count: 431794071
[2025-07-07 13:02:37,129 - __main__] INFO: Spearman lower count: 431692630
[2025-07-07 13:02:41,710 - __main__] INFO: Clustermatch higher count: 431790729
[2025-07-07 13:02:44,965 - __main__] INFO: Clustermatch lower count: 431633928
[2025-07-07 13:02:49,730 - __main__] INFO: Plot dataframe shape: (1438705261, 9)
[2025-07-07 13:02:49,730 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 13:02:59,202 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 13:02:59,202 - __main__] INFO: Data shape for upset plot: (1438705261, 9)
[2025-07-07 13:12:02,281 - __main__] INFO: Gene pairs by categories shape: (1438705261, 9)
[2025-07-07 13:12:02,282 - __main__] INFO: First few entries:
[2025-07-07 13:12:02,290 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.768555
                                                                               True                           True  ...  0.697754
                                                                               True                           True  ...  0.636719
               True          False              False           False          True                          False  ...  0.036621
True           True          False              False           False          True                          False  ...  0.004555

[5 rows x 9 columns]
[2025-07-07 13:12:02,290 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 13:14:07,517 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_muscularis_full.svg
[2025-07-07 13:14:07,517 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_125430/upsetplot_gtex_esophagus_muscularis_full.svg
[2025-07-07 13:14:07,517 - __main__] INFO: Data shape for trimmed plot: (1438705261, 9)
[2025-07-07 13:18:00,208 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 13:18:00,208 - __main__] INFO: Shape: (1438705261, 9)
[2025-07-07 13:21:32,016 - __main__] INFO: Unique index combinations:
[2025-07-07 13:21:32,023 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 13:21:32,023 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 13:21:32,026 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 13:21:32,027 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 13:21:32,030 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 13:21:32,032 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 13:21:32,035 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 13:33:49,384 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 13:33:49,392 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.768555
                                                                               True                           True  ...  0.697754
                                                                               True                           True  ...  0.636719
                                                                               True                           True  ...  0.810547
                                                                               True                           True  ...  0.899902

[5 rows x 9 columns]
[2025-07-07 13:33:50,931 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 13:35:04,360 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_muscularis_trimmed.svg
[2025-07-07 13:35:04,360 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_125430/upsetplot_gtex_esophagus_muscularis_trimmed.svg
[2025-07-07 13:35:04,360 - __main__] INFO: Final dataframe shape: (1438705261, 9)
[2025-07-07 13:35:04,360 - __main__] INFO: Final dataframe head:
[2025-07-07 13:35:04,366 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000012817.15 ENSG00000129824.15            True  ...  0.768555
ENSG00000229807.10 ENSG00000129824.15            True  ...  0.697754
                   ENSG00000012817.15            True  ...  0.636719
ENSG00000244734.3  ENSG00000129824.15           False  ...  0.036621
                   ENSG00000012817.15           False  ...  0.004555

[5 rows x 9 columns]
[2025-07-07 13:35:04,366 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-esophagus_muscularis-var_pc_log2.pkl
[2025-07-07 13:35:04,366 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 13:35:08,974 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-esophagus_muscularis-var_pc_log2.pkl
[2025-07-07 13:35:08,974 - __main__] INFO: Script completed successfully!
[2025-07-07 13:35:08,974 - __main__] INFO: All outputs saved to log directory: logs/20250707_125430
[2025-07-07 13:35:15,193 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_133515
[2025-07-07 13:35:15,193 - __main__] INFO: Log directory: logs/20250707_133515
[2025-07-07 13:35:15,193 - __main__] INFO: Configuration:
[2025-07-07 13:35:15,193 - __main__] INFO:   GTEX_TISSUE: fallopian_tube
[2025-07-07 13:35:15,193 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 13:35:15,194 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 13:35:15,194 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 13:35:15,194 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 13:35:15,194 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 13:35:15,194 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_fallopian_tube-var_pc_log2-all.pkl
[2025-07-07 13:35:15,194 - __main__] INFO: Loading correlation data...
[2025-07-07 13:35:23,064 - __main__] INFO: Dataframe shape: (869799486, 3)
[2025-07-07 13:35:23,065 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 13:35:23,069 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000225972.1  ENSG00000125740.13  1.000000  0.662598  0.733398
ENSG00000096006.11 ENSG00000125740.13  0.083313  0.192871  0.466553
                   ENSG00000225972.1   0.357178  0.256592  0.483398
ENSG00000124237.5  ENSG00000125740.13  0.280029  0.216797  0.633301
                   ENSG00000225972.1   0.399902  0.283203  0.583496
                   ENSG00000096006.11  1.000000  0.998047  0.899902
ENSG00000203985.10 ENSG00000125740.13  0.353027  0.216675  0.616699
                   ENSG00000225972.1   0.353027  0.284424  0.533203
                   ENSG00000096006.11  1.000000  0.995117  0.916504
                   ENSG00000124237.5   1.000000  0.999023  0.950195
ENSG00000124939.5  ENSG00000125740.13  0.363525  0.220703  0.516602
                   ENSG00000225972.1   0.363525  0.292480  0.500000
                   ENSG00000096006.11  1.000000  0.992676  0.816895
                   ENSG00000124237.5   1.000000  0.989258  0.950195
                   ENSG00000203985.10  1.000000  0.982910  0.866699
[2025-07-07 13:35:23,069 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 13:37:21,759 - __main__] INFO: 
                ccc       pearson      spearman
count  8.697995e+08  8.697995e+08  8.697995e+08
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    5.813599e-02  1.444092e-01  1.369629e-01
50%    2.105713e-01  2.792969e-01  2.834473e-01
75%    3.720703e-01  4.675293e-01  4.699707e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 13:38:19,146 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 13:38:19,149 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.050629  0.121643  0.125000
0.242105  0.058136  0.139893  0.136963
0.284211  0.068970  0.163452  0.158447
0.326316  0.081604  0.184448  0.183350
0.368421  0.113647  0.205688  0.216675
0.410526  0.148682  0.228882  0.244019
0.452632  0.160034  0.251465  0.273926
0.494737  0.204102  0.276123  0.281250
0.536842  0.222168  0.301758  0.305176
0.578947  0.250000  0.329346  0.343750
0.621053  0.270264  0.358643  0.374268
0.663158  0.307617  0.390869  0.410889
0.705263  0.353027  0.425781  0.426758
0.747368  0.369385  0.464844  0.466553
0.789474  0.399902  0.509277  0.516602
0.831579  0.470703  0.560059  0.547852
0.873684  0.538574  0.620605  0.583008
0.915789  0.583496  0.696777  0.649902
0.957895  0.769043  0.802246  0.733398
1.000000  1.000000  1.000000  1.000000
[2025-07-07 13:38:30,733 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 13:38:30,734 - __main__] INFO: 0.2    0.050629
0.8    0.407471
Name: ccc, dtype: float64
[2025-07-07 13:38:30,734 - __main__] INFO: CCC lower quantile: 0.050628662109375, upper quantile: 0.407470703125
[2025-07-07 13:38:41,355 - __main__] INFO: Clustermatch quantiles: lower=0.0689697265625, upper=0.35302734375
[2025-07-07 13:38:54,223 - __main__] INFO: Pearson quantiles: lower=0.171875, upper=0.42138671875
[2025-07-07 13:39:06,262 - __main__] INFO: Spearman quantiles: lower=0.1666259765625, upper=0.41845703125
[2025-07-07 13:39:08,452 - __main__] INFO: Pearson higher count: 260979742
[2025-07-07 13:39:10,405 - __main__] INFO: Pearson lower count: 260945963
[2025-07-07 13:39:12,597 - __main__] INFO: Spearman higher count: 261301246
[2025-07-07 13:39:14,552 - __main__] INFO: Spearman lower count: 264323773
[2025-07-07 13:39:17,253 - __main__] INFO: Clustermatch higher count: 283954429
[2025-07-07 13:39:19,297 - __main__] INFO: Clustermatch lower count: 266302945
[2025-07-07 13:39:21,629 - __main__] INFO: Plot dataframe shape: (869799486, 9)
[2025-07-07 13:39:21,629 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 13:39:27,337 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 13:39:27,338 - __main__] INFO: Data shape for upset plot: (869799486, 9)
[2025-07-07 13:45:32,637 - __main__] INFO: Gene pairs by categories shape: (869799486, 9)
[2025-07-07 13:45:32,638 - __main__] INFO: First few entries:
[2025-07-07 13:45:32,645 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.733398
                                                                False          False                         False  ...  0.466553
                                                                               True                          False  ...  0.483398
                                                                               False                         False  ...  0.633301
                                                                               True                          False  ...  0.583496

[5 rows x 9 columns]
[2025-07-07 13:45:32,645 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 13:46:48,094 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_fallopian_tube_full.svg
[2025-07-07 13:46:48,094 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_133515/upsetplot_gtex_fallopian_tube_full.svg
[2025-07-07 13:46:48,094 - __main__] INFO: Data shape for trimmed plot: (869799486, 9)
[2025-07-07 13:48:52,765 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 13:48:52,765 - __main__] INFO: Shape: (869799486, 9)
[2025-07-07 13:51:00,412 - __main__] INFO: Unique index combinations:
[2025-07-07 13:51:00,419 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 13:51:00,419 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 13:51:00,423 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 13:51:00,424 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 13:51:00,426 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 13:51:00,429 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 13:51:00,431 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 13:58:10,423 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 13:58:10,432 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.733398
                                                                               True                           True  ...  0.899902
                                                                               True                           True  ...  0.916504
                                                                               True                           True  ...  0.950195
                                                                               True                           True  ...  0.816895

[5 rows x 9 columns]
[2025-07-07 13:58:11,327 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 13:58:55,026 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_fallopian_tube_trimmed.svg
[2025-07-07 13:58:55,027 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_133515/upsetplot_gtex_fallopian_tube_trimmed.svg
[2025-07-07 13:58:55,027 - __main__] INFO: Final dataframe shape: (869799486, 9)
[2025-07-07 13:58:55,027 - __main__] INFO: Final dataframe head:
[2025-07-07 13:58:55,032 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000225972.1  ENSG00000125740.13            True  ...  0.733398
ENSG00000096006.11 ENSG00000125740.13           False  ...  0.466553
                   ENSG00000225972.1            False  ...  0.483398
ENSG00000124237.5  ENSG00000125740.13           False  ...  0.633301
                   ENSG00000225972.1            False  ...  0.583496

[5 rows x 9 columns]
[2025-07-07 13:58:55,033 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-fallopian_tube-var_pc_log2.pkl
[2025-07-07 13:58:55,033 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 13:58:57,795 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-fallopian_tube-var_pc_log2.pkl
[2025-07-07 13:58:57,795 - __main__] INFO: Script completed successfully!
[2025-07-07 13:58:57,795 - __main__] INFO: All outputs saved to log directory: logs/20250707_133515
[2025-07-07 13:59:03,531 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_135903
[2025-07-07 13:59:03,531 - __main__] INFO: Log directory: logs/20250707_135903
[2025-07-07 13:59:03,531 - __main__] INFO: Configuration:
[2025-07-07 13:59:03,531 - __main__] INFO:   GTEX_TISSUE: heart_atrial_appendage
[2025-07-07 13:59:03,531 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 13:59:03,531 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 13:59:03,531 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 13:59:03,531 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 13:59:03,531 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 13:59:03,531 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_heart_atrial_appendage-var_pc_log2-all.pkl
[2025-07-07 13:59:03,531 - __main__] INFO: Loading correlation data...
[2025-07-07 13:59:14,186 - __main__] INFO: Dataframe shape: (1416051153, 3)
[2025-07-07 13:59:14,186 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 13:59:14,191 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000129824.15 ENSG00000179914.4   0.026688  0.155884  0.209595
ENSG00000163217.1  ENSG00000179914.4   0.007729  0.007198  0.122375
                   ENSG00000129824.15  0.026199  0.018723  0.070496
ENSG00000120937.8  ENSG00000179914.4   0.008781  0.033112  0.000875
                   ENSG00000129824.15  0.020859  0.057343  0.083008
                   ENSG00000163217.1   0.011810  0.083618  0.098083
ENSG00000105697.7  ENSG00000179914.4   0.009979  0.000940  0.037415
                   ENSG00000129824.15  0.017899  0.031281  0.087280
                   ENSG00000163217.1   0.102722  0.059174  0.406250
                   ENSG00000120937.8   0.006805  0.148193  0.038147
ENSG00000116690.12 ENSG00000179914.4   0.415527  0.789551  0.774414
                   ENSG00000129824.15  0.035889  0.125977  0.214844
                   ENSG00000163217.1   0.009468  0.018005  0.044037
                   ENSG00000120937.8   0.020676  0.051300  0.188843
                   ENSG00000105697.7   0.007008  0.026764  0.039124
[2025-07-07 13:59:14,191 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 14:03:45,178 - __main__] INFO: 
                ccc       pearson      spearman
count  1.416051e+09  1.416051e+09  1.416051e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    5.406141e-05  1.980591e-02  2.221680e-02
50%    2.521515e-03  4.721069e-02  5.075073e-02
75%    1.466370e-02  1.141968e-01  1.066895e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 14:05:22,575 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 14:05:22,578 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000015  0.015717  0.017609
0.242105  0.000044  0.019150  0.021469
0.284211  0.000106  0.022797  0.025543
0.326316  0.000222  0.026688  0.029800
0.368421  0.000444  0.030914  0.034363
0.410526  0.000831  0.035522  0.039185
0.452632  0.001464  0.040649  0.044373
0.494737  0.002384  0.046448  0.049988
0.536842  0.003593  0.053070  0.056152
0.578947  0.005070  0.060852  0.062988
0.621053  0.006767  0.070129  0.070679
0.663158  0.008698  0.081421  0.079468
0.705263  0.011124  0.095398  0.090637
0.747368  0.014404  0.112915  0.105591
0.789474  0.018967  0.135620  0.126831
0.831579  0.025711  0.166138  0.159302
0.873684  0.036224  0.210083  0.209595
0.915789  0.053223  0.278564  0.287109
0.957895  0.093445  0.400146  0.413574
1.000000  1.000000  1.000000  1.000000
[2025-07-07 14:05:43,121 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 14:05:43,122 - __main__] INFO: 0.2    0.000015
0.8    0.020569
Name: ccc, dtype: float64
[2025-07-07 14:05:43,122 - __main__] INFO: CCC lower quantile: 1.52587890625e-05, upper quantile: 0.02056884765625
[2025-07-07 14:06:01,888 - __main__] INFO: Clustermatch quantiles: lower=0.00014281272888183594, upper=0.01078033447265625
[2025-07-07 14:06:22,282 - __main__] INFO: Pearson quantiles: lower=0.0242156982421875, upper=0.09344482421875
[2025-07-07 14:06:44,526 - __main__] INFO: Spearman quantiles: lower=0.0271148681640625, upper=0.0889892578125
[2025-07-07 14:06:48,992 - __main__] INFO: Pearson higher count: 424958213
[2025-07-07 14:06:52,178 - __main__] INFO: Pearson lower count: 424884299
[2025-07-07 14:06:56,645 - __main__] INFO: Spearman higher count: 425069711
[2025-07-07 14:06:59,842 - __main__] INFO: Spearman lower count: 424945921
[2025-07-07 14:07:04,350 - __main__] INFO: Clustermatch higher count: 424916379
[2025-07-07 14:07:07,552 - __main__] INFO: Clustermatch lower count: 424850516
[2025-07-07 14:07:12,180 - __main__] INFO: Plot dataframe shape: (1416051153, 9)
[2025-07-07 14:07:12,180 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 14:07:21,507 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 14:07:21,507 - __main__] INFO: Data shape for upset plot: (1416051153, 9)
[2025-07-07 14:16:22,682 - __main__] INFO: Gene pairs by categories shape: (1416051153, 9)
[2025-07-07 14:16:22,682 - __main__] INFO: First few entries:
[2025-07-07 14:16:22,691 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.209595
               True          False              True            False          False                         False  ...  0.122375
                                                False           False          True                          False  ...  0.070496
True           False         False              False           False          False                         False  ...  0.000875
False          False         False              False           False          True                          False  ...  0.083008

[5 rows x 9 columns]
[2025-07-07 14:16:22,691 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 14:18:27,349 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_heart_atrial_appendage_full.svg
[2025-07-07 14:18:27,349 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_135903/upsetplot_gtex_heart_atrial_appendage_full.svg
[2025-07-07 14:18:27,349 - __main__] INFO: Data shape for trimmed plot: (1416051153, 9)
[2025-07-07 14:22:35,276 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 14:22:35,276 - __main__] INFO: Shape: (1416051153, 9)
[2025-07-07 14:26:05,254 - __main__] INFO: Unique index combinations:
[2025-07-07 14:26:05,260 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 14:26:05,261 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 14:26:05,264 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 14:26:05,265 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 14:26:05,268 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 14:26:05,270 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 14:26:05,273 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 14:38:25,369 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 14:38:25,378 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.209595
                                                                               True                           True  ...  0.774414
                                                                               True                           True  ...  0.214844
                                                                               True                           True  ...  0.151855
                                                                               True                           True  ...  0.213257

[5 rows x 9 columns]
[2025-07-07 14:38:26,901 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 14:39:38,941 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_heart_atrial_appendage_trimmed.svg
[2025-07-07 14:39:38,942 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_135903/upsetplot_gtex_heart_atrial_appendage_trimmed.svg
[2025-07-07 14:39:38,942 - __main__] INFO: Final dataframe shape: (1416051153, 9)
[2025-07-07 14:39:38,942 - __main__] INFO: Final dataframe head:
[2025-07-07 14:39:38,948 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000129824.15 ENSG00000179914.4             True  ...  0.209595
ENSG00000163217.1  ENSG00000179914.4            False  ...  0.122375
                   ENSG00000129824.15           False  ...  0.070496
ENSG00000120937.8  ENSG00000179914.4            False  ...  0.000875
                   ENSG00000129824.15           False  ...  0.083008

[5 rows x 9 columns]
[2025-07-07 14:39:38,948 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-heart_atrial_appendage-var_pc_log2.pkl
[2025-07-07 14:39:38,948 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 14:39:43,466 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-heart_atrial_appendage-var_pc_log2.pkl
[2025-07-07 14:39:43,466 - __main__] INFO: Script completed successfully!
[2025-07-07 14:39:43,466 - __main__] INFO: All outputs saved to log directory: logs/20250707_135903
[2025-07-07 14:39:49,374 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_143949
[2025-07-07 14:39:49,374 - __main__] INFO: Log directory: logs/20250707_143949
[2025-07-07 14:39:49,374 - __main__] INFO: Configuration:
[2025-07-07 14:39:49,374 - __main__] INFO:   GTEX_TISSUE: heart_left_ventricle
[2025-07-07 14:39:49,374 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 14:39:49,374 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 14:39:49,374 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 14:39:49,375 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 14:39:49,375 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 14:39:49,375 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_heart_left_ventricle-var_pc_log2-all.pkl
[2025-07-07 14:39:49,375 - __main__] INFO: Loading correlation data...
[2025-07-07 14:40:00,698 - __main__] INFO: Dataframe shape: (1389303828, 3)
[2025-07-07 14:40:00,699 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 14:40:00,703 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000175206.10 ENSG00000120937.8   0.372070  0.429443  0.755371
ENSG00000129824.15 ENSG00000120937.8   0.046051  0.118469  0.093018
                   ENSG00000175206.10  0.067139  0.108521  0.070496
ENSG00000197616.11 ENSG00000120937.8   0.038300  0.219238  0.356689
                   ENSG00000175206.10  0.075012  0.112549  0.416748
                   ENSG00000129824.15  0.079956  0.051758  0.153809
ENSG00000106366.8  ENSG00000120937.8   0.239014  0.416504  0.666992
                   ENSG00000175206.10  0.069763  0.048950  0.338379
                   ENSG00000129824.15  0.021072  0.179199  0.123474
                   ENSG00000197616.11  0.021255  0.117188  0.193726
ENSG00000225972.1  ENSG00000120937.8   0.016647  0.061096  0.103394
                   ENSG00000175206.10  0.008072  0.023712  0.101196
                   ENSG00000129824.15  0.036194  0.059937  0.208862
                   ENSG00000197616.11  0.006271  0.048828  0.133789
                   ENSG00000106366.8   0.006565  0.014183  0.096985
[2025-07-07 14:40:00,703 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 14:44:11,310 - __main__] INFO: 
                ccc       pearson      spearman
count  1.389304e+09  1.389304e+09  1.389304e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    4.309416e-05  2.003479e-02  2.424622e-02
50%    2.794266e-03  5.404663e-02  5.773926e-02
75%    2.188110e-02  1.662598e-01  1.346436e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 14:45:41,391 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 14:45:41,394 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000009  0.015793  0.019073
0.242105  0.000033  0.019333  0.023407
0.284211  0.000087  0.023193  0.028000
0.326316  0.000201  0.027481  0.032898
0.368421  0.000408  0.032349  0.038177
0.410526  0.000811  0.037994  0.043854
0.452632  0.001508  0.044708  0.050018
0.494737  0.002625  0.052887  0.056824
0.536842  0.004181  0.063110  0.064331
0.578947  0.006229  0.075867  0.072815
0.621053  0.008736  0.091797  0.082458
0.663158  0.011917  0.111206  0.094910
0.705263  0.015976  0.134888  0.111023
0.747368  0.021423  0.164185  0.133057
0.789474  0.028778  0.201172  0.165039
0.831579  0.039612  0.249512  0.213257
0.873684  0.056366  0.314453  0.286133
0.915789  0.088013  0.406006  0.396729
0.957895  0.164062  0.550781  0.568848
1.000000  1.000000  1.000000  1.000000
[2025-07-07 14:45:57,589 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 14:45:57,590 - __main__] INFO: 0.2    0.000009
0.8    0.031372
Name: ccc, dtype: float64
[2025-07-07 14:45:57,590 - __main__] INFO: CCC lower quantile: 8.761882781982422e-06, upper quantile: 0.0313720703125
[2025-07-07 14:46:14,881 - __main__] INFO: Clustermatch quantiles: lower=0.00012886524200439453, upper=0.0153961181640625
[2025-07-07 14:46:34,063 - __main__] INFO: Pearson quantiles: lower=0.024749755859375, upper=0.131591796875
[2025-07-07 14:46:52,389 - __main__] INFO: Spearman quantiles: lower=0.0298004150390625, upper=0.1087646484375
[2025-07-07 14:46:56,771 - __main__] INFO: Pearson higher count: 417048256
[2025-07-07 14:46:59,897 - __main__] INFO: Pearson lower count: 416948558
[2025-07-07 14:47:03,787 - __main__] INFO: Spearman higher count: 416878292
[2025-07-07 14:47:06,931 - __main__] INFO: Spearman lower count: 416895692
[2025-07-07 14:47:11,393 - __main__] INFO: Clustermatch higher count: 416898103
[2025-07-07 14:47:14,534 - __main__] INFO: Clustermatch lower count: 420142419
[2025-07-07 14:47:19,047 - __main__] INFO: Plot dataframe shape: (1389303828, 9)
[2025-07-07 14:47:19,048 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 14:47:28,217 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 14:47:28,217 - __main__] INFO: Data shape for upset plot: (1389303828, 9)
[2025-07-07 14:56:24,590 - __main__] INFO: Gene pairs by categories shape: (1389303828, 9)
[2025-07-07 14:56:24,590 - __main__] INFO: First few entries:
[2025-07-07 14:56:24,599 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.755371
                                                False           False          True                          False  ...  0.093018
                                                                               True                          False  ...  0.070496
                                                True            True           True                           True  ...  0.356689
                                                                False          True                          False  ...  0.416748

[5 rows x 9 columns]
[2025-07-07 14:56:24,599 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 14:58:26,613 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_heart_left_ventricle_full.svg
[2025-07-07 14:58:26,613 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_143949/upsetplot_gtex_heart_left_ventricle_full.svg
[2025-07-07 14:58:26,613 - __main__] INFO: Data shape for trimmed plot: (1389303828, 9)
[2025-07-07 15:02:06,462 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 15:02:06,463 - __main__] INFO: Shape: (1389303828, 9)
[2025-07-07 15:05:26,268 - __main__] INFO: Unique index combinations:
[2025-07-07 15:05:26,275 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 15:05:26,275 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 15:05:26,279 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 15:05:26,280 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 15:05:26,282 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 15:05:26,284 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 15:05:26,287 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 15:17:24,533 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 15:17:24,542 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.755371
                                                                               True                           True  ...  0.356689
                                                                               True                           True  ...  0.666992
                                                                               True                           True  ...  0.123474
                                                                               True                           True  ...  0.902344

[5 rows x 9 columns]
[2025-07-07 15:17:26,018 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 15:18:36,944 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_heart_left_ventricle_trimmed.svg
[2025-07-07 15:18:36,945 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_143949/upsetplot_gtex_heart_left_ventricle_trimmed.svg
[2025-07-07 15:18:36,945 - __main__] INFO: Final dataframe shape: (1389303828, 9)
[2025-07-07 15:18:36,945 - __main__] INFO: Final dataframe head:
[2025-07-07 15:18:36,950 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000175206.10 ENSG00000120937.8             True  ...  0.755371
ENSG00000129824.15 ENSG00000120937.8            False  ...  0.093018
                   ENSG00000175206.10           False  ...  0.070496
ENSG00000197616.11 ENSG00000120937.8             True  ...  0.356689
                   ENSG00000175206.10           False  ...  0.416748

[5 rows x 9 columns]
[2025-07-07 15:18:36,950 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-heart_left_ventricle-var_pc_log2.pkl
[2025-07-07 15:18:36,950 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 15:18:41,395 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-heart_left_ventricle-var_pc_log2.pkl
[2025-07-07 15:18:41,395 - __main__] INFO: Script completed successfully!
[2025-07-07 15:18:41,395 - __main__] INFO: All outputs saved to log directory: logs/20250707_143949
[2025-07-07 15:18:47,708 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_151847
[2025-07-07 15:18:47,708 - __main__] INFO: Log directory: logs/20250707_151847
[2025-07-07 15:18:47,708 - __main__] INFO: Configuration:
[2025-07-07 15:18:47,709 - __main__] INFO:   GTEX_TISSUE: kidney_cortex
[2025-07-07 15:18:47,709 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 15:18:47,709 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 15:18:47,709 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 15:18:47,709 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 15:18:47,709 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 15:18:47,709 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_kidney_cortex-var_pc_log2-all.pkl
[2025-07-07 15:18:47,709 - __main__] INFO: Loading correlation data...
[2025-07-07 15:18:57,982 - __main__] INFO: Dataframe shape: (1231692528, 3)
[2025-07-07 15:18:57,982 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 15:18:57,986 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000211595.2  ENSG00000211596.3   0.654785  0.967773  0.916992
ENSG00000211592.8  ENSG00000211596.3   0.737305  0.994141  0.972168
                   ENSG00000211595.2   0.579590  0.971680  0.935547
ENSG00000129824.15 ENSG00000211596.3   0.140015  0.154785  0.076050
                   ENSG00000211595.2   0.133911  0.165527  0.140137
                   ENSG00000211592.8   0.121887  0.139893  0.085388
ENSG00000211594.2  ENSG00000211596.3   0.647949  0.988770  0.937500
                   ENSG00000211595.2   0.654785  0.965820  0.913574
                   ENSG00000211592.8   0.629883  0.995605  0.944336
                   ENSG00000129824.15  0.144897  0.140503  0.113953
ENSG00000211593.2  ENSG00000211596.3   0.545898  0.934570  0.905273
                   ENSG00000211595.2   0.600586  0.932617  0.906738
                   ENSG00000211592.8   0.579590  0.944336  0.952148
                   ENSG00000129824.15  0.119568  0.105408  0.111145
                   ENSG00000211594.2   0.579590  0.940430  0.898438
[2025-07-07 15:18:57,986 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 15:22:18,256 - __main__] INFO: 
                ccc       pearson      spearman
count  1.231693e+09  1.231693e+09  1.231693e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    8.783340e-04  4.934692e-02  5.560303e-02
50%    1.600647e-02  1.175537e-01  1.248169e-01
75%    6.246948e-02  2.978516e-01  2.565918e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 15:23:38,635 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 15:23:38,638 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000561  0.039642  0.044250
0.242105  0.000702  0.047760  0.053589
0.284211  0.001685  0.056366  0.063538
0.326316  0.002707  0.065552  0.074280
0.368421  0.004543  0.075684  0.085205
0.410526  0.007275  0.087036  0.097229
0.452632  0.010971  0.100037  0.109741
0.494737  0.015388  0.115417  0.123352
0.536842  0.020798  0.134033  0.137817
0.578947  0.026962  0.156738  0.153809
0.621053  0.033508  0.184082  0.171387
0.663158  0.041229  0.216064  0.191284
0.705263  0.050079  0.252930  0.218994
0.747368  0.061554  0.294922  0.254150
0.789474  0.076050  0.343750  0.301270
0.831579  0.103333  0.401367  0.364502
0.873684  0.140503  0.471191  0.447021
0.915789  0.186646  0.559082  0.553223
0.957895  0.324219  0.678223  0.692383
1.000000  1.000000  1.000000  1.000000
[2025-07-07 15:23:56,817 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 15:23:56,817 - __main__] INFO: 0.2    0.000561
0.8    0.080322
Name: ccc, dtype: float64
[2025-07-07 15:23:56,818 - __main__] INFO: CCC lower quantile: 0.000560760498046875, upper quantile: 0.080322265625
[2025-07-07 15:24:13,199 - __main__] INFO: Clustermatch quantiles: lower=0.002002716064453125, upper=0.04974365234375
[2025-07-07 15:24:30,309 - __main__] INFO: Pearson quantiles: lower=0.059722900390625, upper=0.248046875
[2025-07-07 15:24:45,574 - __main__] INFO: Spearman quantiles: lower=0.06744384765625, upper=0.21533203125
[2025-07-07 15:24:49,449 - __main__] INFO: Pearson higher count: 369538699
[2025-07-07 15:24:52,221 - __main__] INFO: Pearson lower count: 369589811
[2025-07-07 15:24:55,419 - __main__] INFO: Spearman higher count: 369515637
[2025-07-07 15:24:58,198 - __main__] INFO: Spearman lower count: 369693508
[2025-07-07 15:25:02,092 - __main__] INFO: Clustermatch higher count: 370981466
[2025-07-07 15:25:04,873 - __main__] INFO: Clustermatch lower count: 369537167
[2025-07-07 15:25:08,652 - __main__] INFO: Plot dataframe shape: (1231692528, 9)
[2025-07-07 15:25:08,652 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 15:25:16,820 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 15:25:16,820 - __main__] INFO: Data shape for upset plot: (1231692528, 9)
[2025-07-07 15:32:42,540 - __main__] INFO: Gene pairs by categories shape: (1231692528, 9)
[2025-07-07 15:32:42,541 - __main__] INFO: First few entries:
[2025-07-07 15:32:42,549 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.916992
                                                                               True                           True  ...  0.972168
                                                                               True                           True  ...  0.935547
                                                False           False          True                          False  ...  0.076050
                                                                               True                          False  ...  0.140137

[5 rows x 9 columns]
[2025-07-07 15:32:42,549 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 15:34:29,059 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_kidney_cortex_full.svg
[2025-07-07 15:34:29,060 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_151847/upsetplot_gtex_kidney_cortex_full.svg
[2025-07-07 15:34:29,060 - __main__] INFO: Data shape for trimmed plot: (1231692528, 9)
[2025-07-07 15:37:47,385 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 15:37:47,386 - __main__] INFO: Shape: (1231692528, 9)
[2025-07-07 15:40:44,810 - __main__] INFO: Unique index combinations:
[2025-07-07 15:40:44,816 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 15:40:44,817 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 15:40:44,820 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 15:40:44,821 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 15:40:44,824 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 15:40:44,826 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 15:40:44,828 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 15:51:01,315 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 15:51:01,324 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.916992
                                                                               True                           True  ...  0.972168
                                                                               True                           True  ...  0.935547
                                                                               True                           True  ...  0.937500
                                                                               True                           True  ...  0.913574

[5 rows x 9 columns]
[2025-07-07 15:51:02,634 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 15:52:05,132 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_kidney_cortex_trimmed.svg
[2025-07-07 15:52:05,133 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_151847/upsetplot_gtex_kidney_cortex_trimmed.svg
[2025-07-07 15:52:05,133 - __main__] INFO: Final dataframe shape: (1231692528, 9)
[2025-07-07 15:52:05,133 - __main__] INFO: Final dataframe head:
[2025-07-07 15:52:05,138 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000211595.2  ENSG00000211596.3            True  ...  0.916992
ENSG00000211592.8  ENSG00000211596.3            True  ...  0.972168
                   ENSG00000211595.2            True  ...  0.935547
ENSG00000129824.15 ENSG00000211596.3           False  ...  0.076050
                   ENSG00000211595.2           False  ...  0.140137

[5 rows x 9 columns]
[2025-07-07 15:52:05,138 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-kidney_cortex-var_pc_log2.pkl
[2025-07-07 15:52:05,138 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 15:52:09,065 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-kidney_cortex-var_pc_log2.pkl
[2025-07-07 15:52:09,065 - __main__] INFO: Script completed successfully!
[2025-07-07 15:52:09,065 - __main__] INFO: All outputs saved to log directory: logs/20250707_151847
[2025-07-07 15:52:14,806 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_155214
[2025-07-07 15:52:14,806 - __main__] INFO: Log directory: logs/20250707_155214
[2025-07-07 15:52:14,806 - __main__] INFO: Configuration:
[2025-07-07 15:52:14,806 - __main__] INFO:   GTEX_TISSUE: kidney_medulla
[2025-07-07 15:52:14,806 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 15:52:14,806 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 15:52:14,806 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 15:52:14,806 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 15:52:14,806 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 15:52:14,806 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_kidney_medulla-var_pc_log2-all.pkl
[2025-07-07 15:52:14,806 - __main__] INFO: Loading correlation data...
[2025-07-07 15:52:21,232 - __main__] INFO: Dataframe shape: (692459505, 3)
[2025-07-07 15:52:21,232 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 15:52:21,237 - __main__] INFO: 
                                       ccc   pearson  spearman
ENSG00000211592.8  ENSG00000211596.3   1.0  1.000000  1.000000
ENSG00000116218.12 ENSG00000211596.3   1.0  0.130737  0.799805
                   ENSG00000211592.8   1.0  0.145020  0.799805
ENSG00000211893.3  ENSG00000211596.3   1.0  0.951172  1.000000
                   ENSG00000211592.8   1.0  0.955566  1.000000
                   ENSG00000116218.12  1.0  0.429932  0.799805
ENSG00000211594.2  ENSG00000211596.3   1.0  1.000000  0.799805
                   ENSG00000211592.8   1.0  0.999512  0.799805
                   ENSG00000116218.12  1.0  0.116821  0.600098
                   ENSG00000211893.3   1.0  0.946777  0.799805
ENSG00000211597.2  ENSG00000211596.3   1.0  1.000000  1.000000
                   ENSG00000211592.8   1.0  1.000000  1.000000
                   ENSG00000116218.12  1.0  0.129150  0.799805
                   ENSG00000211893.3   1.0  0.950684  1.000000
                   ENSG00000211594.2   1.0  1.000000  0.799805
[2025-07-07 15:52:21,237 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 15:53:56,636 - __main__] INFO: 
               ccc       pearson      spearman
count  692459505.0  6.924595e+08  6.924595e+08
mean           NaN           NaN           NaN
std            0.0  0.000000e+00  0.000000e+00
min            0.0  0.000000e+00  0.000000e+00
25%            0.0  2.866211e-01  2.583008e-01
50%            0.0  5.302734e-01  3.999023e-01
75%            1.0  7.929688e-01  7.998047e-01
max            1.0  1.000000e+00  1.000000e+00
[2025-07-07 15:54:33,341 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 15:54:33,345 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000000  0.231201  0.258301
0.242105  0.000000  0.278076  0.258301
0.284211  0.000000  0.324219  0.272217
0.326316  0.000000  0.353271  0.333252
0.368421  0.000000  0.397705  0.399902
0.410526  0.000000  0.440918  0.399902
0.452632  0.000000  0.483887  0.399902
0.494737  0.000000  0.524902  0.399902
0.536842  0.000000  0.566895  0.600098
0.578947  0.000000  0.608887  0.632324
0.621053  0.000000  0.654297  0.737793
0.663158  0.333252  0.700195  0.774414
0.705263  0.333252  0.745117  0.774414
0.747368  1.000000  0.790039  0.799805
0.789474  1.000000  0.833008  0.799805
0.831579  1.000000  0.874512  0.799805
0.873684  1.000000  0.912598  0.799805
0.915789  1.000000  0.946777  0.948730
0.957895  1.000000  0.977051  1.000000
1.000000  1.000000  1.000000  1.000000
[2025-07-07 15:54:37,862 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 15:54:37,863 - __main__] INFO: 0.2    0.0
0.8    1.0
Name: ccc, dtype: float64
[2025-07-07 15:54:37,863 - __main__] INFO: CCC lower quantile: 0.0, upper quantile: 1.0
[2025-07-07 15:54:42,968 - __main__] INFO: Clustermatch quantiles: lower=0.0, upper=0.333251953125
[2025-07-07 15:54:53,316 - __main__] INFO: Pearson quantiles: lower=0.333251953125, upper=0.73974609375
[2025-07-07 15:55:02,610 - __main__] INFO: Spearman quantiles: lower=0.316162109375, upper=0.7744140625
[2025-07-07 15:55:04,360 - __main__] INFO: Pearson higher count: 207755797
[2025-07-07 15:55:05,917 - __main__] INFO: Pearson lower count: 212920704
[2025-07-07 15:55:07,665 - __main__] INFO: Spearman higher count: 261251764
[2025-07-07 15:55:09,222 - __main__] INFO: Spearman lower count: 218201451
[2025-07-07 15:55:10,968 - __main__] INFO: Clustermatch higher count: 260031150
[2025-07-07 15:55:12,529 - __main__] INFO: Clustermatch lower count: 432428355
[2025-07-07 15:55:14,330 - __main__] INFO: Plot dataframe shape: (692459505, 9)
[2025-07-07 15:55:14,330 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 15:55:18,894 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 15:55:18,894 - __main__] INFO: Data shape for upset plot: (692459505, 9)
[2025-07-07 15:59:21,937 - __main__] INFO: Gene pairs by categories shape: (692459505, 9)
[2025-07-07 15:59:21,937 - __main__] INFO: First few entries:
[2025-07-07 15:59:21,946 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  1.000000
               True          False              True            False          True                          False  ...  0.799805
                                                                               True                          False  ...  0.799805
               False         False              True            True           True                           True  ...  1.000000
                                                                               True                           True  ...  1.000000

[5 rows x 9 columns]
[2025-07-07 15:59:21,946 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 16:00:27,944 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_kidney_medulla_full.svg
[2025-07-07 16:00:27,944 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_155214/upsetplot_gtex_kidney_medulla_full.svg
[2025-07-07 16:00:27,944 - __main__] INFO: Data shape for trimmed plot: (692459505, 9)
[2025-07-07 16:02:03,995 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 16:02:03,996 - __main__] INFO: Shape: (692459505, 9)
[2025-07-07 16:03:42,573 - __main__] INFO: Unique index combinations:
[2025-07-07 16:03:42,579 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                 True
1            False          False  ...            True                 True
2            False          False  ...           False                 True
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...            True                False
6            False          False  ...           False                False
7            False          False  ...            True                False
8            False           True  ...           False                 True
9            False           True  ...           False                 True
10           False           True  ...           False                False
11           False           True  ...           False                False
12            True          False  ...           False                 True
13            True          False  ...            True                 True
14            True          False  ...           False                False
15            True          False  ...            True                False
16            True           True  ...           False                 True
17            True           True  ...           False                False

[18 rows x 6 columns]
[2025-07-07 16:03:42,580 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 16:03:42,583 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
3            False          False  ...            True                 True
7            False          False  ...            True                False
9            False           True  ...           False                 True
11           False           True  ...           False                False
13            True          False  ...            True                 True
15            True          False  ...            True                False
16            True           True  ...           False                 True
17            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 16:03:42,584 - __main__] INFO: Number of combinations where first 3 are all False: 4
[2025-07-07 16:03:42,586 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)]
[2025-07-07 16:03:42,588 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)]
[2025-07-07 16:03:42,590 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
Traceback (most recent call last):
  File "/home/zhhaoyu/_projs/ccc-gpu/nbs/03-manuscript/15_intersections/compute_intersections.py", line 447, in <module>
    main()
  File "/home/zhhaoyu/_projs/ccc-gpu/nbs/03-manuscript/15_intersections/compute_intersections.py", line 356, in main
    gene_pairs_by_cats = gene_pairs_by_cats.loc[
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexing.py", line 1191, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexing.py", line 1420, in _getitem_axis
    return self._getitem_iterable(key, axis=axis)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexing.py", line 1360, in _getitem_iterable
    keyarr, indexer = self._get_listlike_indexer(key, axis)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexing.py", line 1558, in _get_listlike_indexer
    keyarr, indexer = ax._get_indexer_strict(key, axis_name)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexes/multi.py", line 2766, in _get_indexer_strict
    return super()._get_indexer_strict(key, axis_name)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 6200, in _get_indexer_strict
    self._raise_if_missing(keyarr, indexer, axis_name)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexes/multi.py", line 2786, in _raise_if_missing
    return super()._raise_if_missing(key, indexer, axis_name)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 6252, in _raise_if_missing
    raise KeyError(f"{not_found} not in index")
KeyError: '[(False, False, False, True, True, False), (True, True, False, False, False, False), (True, False, False, False, True, False), (False, True, False, True, False, False)] not in index'
[2025-07-07 16:10:35,067 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_161035
[2025-07-07 16:10:35,067 - __main__] INFO: Log directory: logs/20250707_161035
[2025-07-07 16:10:35,068 - __main__] INFO: Configuration:
[2025-07-07 16:10:35,068 - __main__] INFO:   GTEX_TISSUE: liver
[2025-07-07 16:10:35,068 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 16:10:35,068 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 16:10:35,068 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 16:10:35,068 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 16:10:35,068 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 16:10:35,068 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_liver-var_pc_log2-all.pkl
[2025-07-07 16:10:35,068 - __main__] INFO: Loading correlation data...
[2025-07-07 16:10:44,112 - __main__] INFO: Dataframe shape: (1313153128, 3)
[2025-07-07 16:10:44,112 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 16:10:44,117 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000134184.12 ENSG00000134339.8   0.048462  0.083069  0.106445
ENSG00000173432.10 ENSG00000134339.8   0.895996  0.942383  0.986328
                   ENSG00000134184.12  0.048462  0.081055  0.107117
ENSG00000188257.10 ENSG00000134339.8   0.269287  0.467285  0.734863
                   ENSG00000134184.12  0.032990  0.103455  0.069702
                   ENSG00000173432.10  0.232788  0.452148  0.735352
ENSG00000132693.12 ENSG00000134339.8   0.537598  0.658203  0.848145
                   ENSG00000134184.12  0.045807  0.249268  0.123230
                   ENSG00000173432.10  0.537598  0.709473  0.864258
                   ENSG00000188257.10  0.288330  0.578125  0.763672
ENSG00000164266.10 ENSG00000134339.8   0.563965  0.439209  0.769531
                   ENSG00000134184.12  0.041870  0.213135  0.188477
                   ENSG00000173432.10  0.511719  0.473389  0.778809
                   ENSG00000188257.10  0.194214  0.255859  0.596191
                   ENSG00000132693.12  0.414795  0.491943  0.733887
[2025-07-07 16:10:44,117 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 16:14:39,723 - __main__] INFO: 
                ccc       pearson      spearman
count  1.313153e+09  1.313153e+09  1.313153e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    6.568432e-05  2.352905e-02  2.726746e-02
50%    3.456116e-03  5.285645e-02  6.057739e-02
75%    1.766968e-02  1.146851e-01  1.139526e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 16:16:09,477 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 16:16:09,481 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000023  0.018860  0.021805
0.242105  0.000064  0.022766  0.026367
0.284211  0.000163  0.026871  0.031204
0.326316  0.000350  0.031219  0.036316
0.368421  0.000671  0.035828  0.041656
0.410526  0.001221  0.040771  0.047363
0.452632  0.002069  0.046143  0.053314
0.494737  0.003275  0.052063  0.059753
0.536842  0.004879  0.058685  0.066650
0.578947  0.006813  0.066223  0.074097
0.621053  0.008987  0.074890  0.082275
0.663158  0.011429  0.085266  0.091370
0.705263  0.014091  0.097839  0.101562
0.747368  0.017410  0.113586  0.113220
0.789474  0.021317  0.133667  0.129028
0.831579  0.026947  0.160278  0.150513
0.873684  0.036133  0.197266  0.183105
0.915789  0.052124  0.254395  0.239014
0.957895  0.084595  0.361084  0.348877
1.000000  1.000000  1.000000  1.000000
[2025-07-07 16:16:26,437 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 16:16:26,438 - __main__] INFO: 0.2    0.000023
0.8    0.022644
Name: ccc, dtype: float64
[2025-07-07 16:16:26,438 - __main__] INFO: CCC lower quantile: 2.276897430419922e-05, upper quantile: 0.02264404296875
[2025-07-07 16:16:42,768 - __main__] INFO: Clustermatch quantiles: lower=0.00023651123046875, upper=0.01371002197265625
[2025-07-07 16:17:02,139 - __main__] INFO: Pearson quantiles: lower=0.0284881591796875, upper=0.09613037109375
[2025-07-07 16:17:22,741 - __main__] INFO: Spearman quantiles: lower=0.03314208984375, upper=0.10015869140625
[2025-07-07 16:17:26,875 - __main__] INFO: Pearson higher count: 394076646
[2025-07-07 16:17:29,831 - __main__] INFO: Pearson lower count: 394142878
[2025-07-07 16:17:33,830 - __main__] INFO: Spearman higher count: 394124942
[2025-07-07 16:17:36,802 - __main__] INFO: Spearman lower count: 394143856
[2025-07-07 16:17:40,966 - __main__] INFO: Clustermatch higher count: 394108825
[2025-07-07 16:17:43,939 - __main__] INFO: Clustermatch lower count: 393987216
[2025-07-07 16:17:48,201 - __main__] INFO: Plot dataframe shape: (1313153128, 9)
[2025-07-07 16:17:48,201 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 16:17:56,940 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 16:17:56,941 - __main__] INFO: Data shape for upset plot: (1313153128, 9)
[2025-07-07 16:26:10,428 - __main__] INFO: Gene pairs by categories shape: (1313153128, 9)
[2025-07-07 16:26:10,428 - __main__] INFO: First few entries:
[2025-07-07 16:26:10,437 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            False          True                          False  ...  0.106445
                                                                True           True                           True  ...  0.986328
                                                                False          True                          False  ...  0.107117
                                                                True           True                           True  ...  0.734863
                                                False           True           True                           True  ...  0.069702

[5 rows x 9 columns]
[2025-07-07 16:26:10,437 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 16:28:05,334 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_liver_full.svg
[2025-07-07 16:28:05,335 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_161035/upsetplot_gtex_liver_full.svg
[2025-07-07 16:28:05,335 - __main__] INFO: Data shape for trimmed plot: (1313153128, 9)
[2025-07-07 16:31:44,536 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 16:31:44,536 - __main__] INFO: Shape: (1313153128, 9)
[2025-07-07 16:35:00,125 - __main__] INFO: Unique index combinations:
[2025-07-07 16:35:00,131 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 16:35:00,132 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 16:35:00,135 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 16:35:00,136 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 16:35:00,139 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 16:35:00,141 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 16:35:00,144 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 16:46:24,762 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 16:46:24,770 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.986328
                                                                               True                           True  ...  0.734863
                                                                               True                           True  ...  0.735352
                                                                               True                           True  ...  0.848145
                                                                               True                           True  ...  0.123230

[5 rows x 9 columns]
[2025-07-07 16:46:26,112 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 16:47:31,939 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_liver_trimmed.svg
[2025-07-07 16:47:31,940 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_161035/upsetplot_gtex_liver_trimmed.svg
[2025-07-07 16:47:31,940 - __main__] INFO: Final dataframe shape: (1313153128, 9)
[2025-07-07 16:47:31,940 - __main__] INFO: Final dataframe head:
[2025-07-07 16:47:31,946 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000134184.12 ENSG00000134339.8            False  ...  0.106445
ENSG00000173432.10 ENSG00000134339.8             True  ...  0.986328
                   ENSG00000134184.12           False  ...  0.107117
ENSG00000188257.10 ENSG00000134339.8             True  ...  0.734863
                   ENSG00000134184.12            True  ...  0.069702

[5 rows x 9 columns]
[2025-07-07 16:47:31,946 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-liver-var_pc_log2.pkl
[2025-07-07 16:47:31,946 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 16:47:36,111 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-liver-var_pc_log2.pkl
[2025-07-07 16:47:36,111 - __main__] INFO: Script completed successfully!
[2025-07-07 16:47:36,111 - __main__] INFO: All outputs saved to log directory: logs/20250707_161035
[2025-07-07 16:47:41,852 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_164741
[2025-07-07 16:47:41,853 - __main__] INFO: Log directory: logs/20250707_164741
[2025-07-07 16:47:41,853 - __main__] INFO: Configuration:
[2025-07-07 16:47:41,853 - __main__] INFO:   GTEX_TISSUE: lung
[2025-07-07 16:47:41,853 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 16:47:41,853 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 16:47:41,853 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 16:47:41,853 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 16:47:41,853 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 16:47:41,853 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_lung-var_pc_log2-all.pkl
[2025-07-07 16:47:41,853 - __main__] INFO: Loading correlation data...
[2025-07-07 16:47:55,874 - __main__] INFO: Dataframe shape: (1461917628, 3)
[2025-07-07 16:47:55,874 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 16:47:55,879 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000149021.6  ENSG00000129824.15  0.003948  0.004829  0.064697
ENSG00000096088.16 ENSG00000129824.15  0.006977  0.046783  0.056183
                   ENSG00000149021.6   0.026108  0.002203  0.099365
ENSG00000185303.16 ENSG00000129824.15  0.008942  0.013367  0.005192
                   ENSG00000149021.6   0.026001  0.033813  0.105225
                   ENSG00000096088.16  0.638184  0.483643  0.848145
ENSG00000223609.7  ENSG00000129824.15  0.004353  0.070007  0.027634
                   ENSG00000149021.6   0.020721  0.064148  0.030884
                   ENSG00000096088.16  0.243530  0.152222  0.542969
                   ENSG00000185303.16  0.309082  0.285156  0.598145
ENSG00000122852.14 ENSG00000129824.15  0.009995  0.022705  0.011528
                   ENSG00000149021.6   0.029282  0.045044  0.112976
                   ENSG00000096088.16  0.660645  0.478271  0.839355
                   ENSG00000185303.16  0.945312  0.975098  0.989258
                   ENSG00000223609.7   0.324707  0.289795  0.592773
[2025-07-07 16:47:55,879 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 16:52:47,232 - __main__] INFO: 
                ccc       pearson      spearman
count  1.461918e+09  1.461918e+09  1.461918e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    7.504225e-05  1.690674e-02  1.928711e-02
50%    2.618790e-03  3.851318e-02  4.318237e-02
75%    1.058197e-02  8.380127e-02  8.660889e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 16:54:31,404 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 16:54:31,408 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000024  0.013458  0.015305
0.242105  0.000067  0.016357  0.018646
0.284211  0.000149  0.019379  0.022125
0.326316  0.000313  0.022568  0.025742
0.368421  0.000594  0.025970  0.029572
0.410526  0.001045  0.029617  0.033630
0.452632  0.001694  0.033569  0.037933
0.494737  0.002512  0.037933  0.042572
0.536842  0.003452  0.042786  0.047607
0.578947  0.004475  0.048309  0.053162
0.621053  0.005592  0.054688  0.059357
0.663158  0.006874  0.062256  0.066406
0.705263  0.008369  0.071472  0.074890
0.747368  0.010437  0.082947  0.085815
0.789474  0.013252  0.097839  0.100342
0.831579  0.017548  0.117920  0.121155
0.873684  0.024139  0.146606  0.152954
0.915789  0.034790  0.191528  0.203735
0.957895  0.058716  0.275146  0.295166
1.000000  1.000000  1.000000  1.000000
[2025-07-07 16:54:50,423 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 16:54:50,424 - __main__] INFO: 0.2    0.000024
0.8    0.014275
Name: ccc, dtype: float64
[2025-07-07 16:54:50,424 - __main__] INFO: CCC lower quantile: 2.396106719970703e-05, upper quantile: 0.01427459716796875
[2025-07-07 16:55:10,471 - __main__] INFO: Clustermatch quantiles: lower=0.0001995563507080078, upper=0.00821685791015625
[2025-07-07 16:55:31,111 - __main__] INFO: Pearson quantiles: lower=0.0205535888671875, upper=0.0701904296875
[2025-07-07 16:55:52,895 - __main__] INFO: Spearman quantiles: lower=0.023468017578125, upper=0.07366943359375
[2025-07-07 16:55:57,474 - __main__] INFO: Pearson higher count: 438868162
[2025-07-07 16:56:00,754 - __main__] INFO: Pearson lower count: 438629877
[2025-07-07 16:56:05,335 - __main__] INFO: Spearman higher count: 438901138
[2025-07-07 16:56:08,620 - __main__] INFO: Spearman lower count: 438699870
[2025-07-07 16:56:13,214 - __main__] INFO: Clustermatch higher count: 438682719
[2025-07-07 16:56:16,901 - __main__] INFO: Clustermatch lower count: 438812662
[2025-07-07 16:56:20,954 - __main__] INFO: Plot dataframe shape: (1461917628, 9)
[2025-07-07 16:56:20,954 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 16:56:30,560 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 16:56:30,560 - __main__] INFO: Data shape for upset plot: (1461917628, 9)
[2025-07-07 17:05:43,285 - __main__] INFO: Gene pairs by categories shape: (1461917628, 9)
[2025-07-07 17:05:43,286 - __main__] INFO: First few entries:
[2025-07-07 17:05:43,294 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          True          False              False           False          False                         False  ...  0.064697
               False         False              False           False          False                         False  ...  0.056183
               True          False              True            False          True                          False  ...  0.099365
True           True          False              False           False          True                          False  ...  0.005192
False          False         False              True            False          True                          False  ...  0.105225

[5 rows x 9 columns]
[2025-07-07 17:05:43,294 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 17:07:49,680 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_lung_full.svg
[2025-07-07 17:07:49,681 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_164741/upsetplot_gtex_lung_full.svg
[2025-07-07 17:07:49,681 - __main__] INFO: Data shape for trimmed plot: (1461917628, 9)
[2025-07-07 17:12:02,388 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 17:12:02,388 - __main__] INFO: Shape: (1461917628, 9)
[2025-07-07 17:15:38,347 - __main__] INFO: Unique index combinations:
[2025-07-07 17:15:38,354 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 17:15:38,354 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 17:15:38,357 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 17:15:38,358 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 17:15:38,361 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 17:15:38,363 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 17:15:38,366 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 17:27:39,203 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 17:27:39,212 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.848145
                                                                               True                           True  ...  0.542969
                                                                               True                           True  ...  0.598145
                                                                               True                           True  ...  0.839355
                                                                               True                           True  ...  0.989258

[5 rows x 9 columns]
[2025-07-07 17:27:41,109 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 17:28:55,207 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_lung_trimmed.svg
[2025-07-07 17:28:55,207 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_164741/upsetplot_gtex_lung_trimmed.svg
[2025-07-07 17:28:55,207 - __main__] INFO: Final dataframe shape: (1461917628, 9)
[2025-07-07 17:28:55,207 - __main__] INFO: Final dataframe head:
[2025-07-07 17:28:55,213 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000149021.6  ENSG00000129824.15           False  ...  0.064697
ENSG00000096088.16 ENSG00000129824.15           False  ...  0.056183
                   ENSG00000149021.6            False  ...  0.099365
ENSG00000185303.16 ENSG00000129824.15           False  ...  0.005192
                   ENSG00000149021.6            False  ...  0.105225

[5 rows x 9 columns]
[2025-07-07 17:28:55,213 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-lung-var_pc_log2.pkl
[2025-07-07 17:28:55,213 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 17:28:59,875 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-lung-var_pc_log2.pkl
[2025-07-07 17:28:59,875 - __main__] INFO: Script completed successfully!
[2025-07-07 17:28:59,875 - __main__] INFO: All outputs saved to log directory: logs/20250707_164741
[2025-07-07 17:29:05,876 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_172905
[2025-07-07 17:29:05,876 - __main__] INFO: Log directory: logs/20250707_172905
[2025-07-07 17:29:05,876 - __main__] INFO: Configuration:
[2025-07-07 17:29:05,876 - __main__] INFO:   GTEX_TISSUE: minor_salivary_gland
[2025-07-07 17:29:05,876 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 17:29:05,876 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 17:29:05,876 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 17:29:05,876 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 17:29:05,876 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 17:29:05,876 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_minor_salivary_gland-var_pc_log2-all.pkl
[2025-07-07 17:29:05,876 - __main__] INFO: Loading correlation data...
[2025-07-07 17:29:20,509 - __main__] INFO: Dataframe shape: (1331409003, 3)
[2025-07-07 17:29:20,509 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 17:29:20,513 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000171201.10 ENSG00000170477.12  0.046967  0.128418  0.250488
ENSG00000163209.14 ENSG00000170477.12  0.564453  0.975098  0.911621
                   ENSG00000171201.10  0.040436  0.128418  0.271729
ENSG00000143536.7  ENSG00000170477.12  0.602539  0.968750  0.916504
                   ENSG00000171201.10  0.039246  0.124329  0.256592
                   ENSG00000163209.14  0.856445  0.984863  0.980469
ENSG00000169474.4  ENSG00000170477.12  0.564453  0.926758  0.866699
                   ENSG00000171201.10  0.051758  0.128174  0.296875
                   ENSG00000163209.14  0.641602  0.953125  0.895996
                   ENSG00000143536.7   0.641602  0.927734  0.879883
ENSG00000171401.14 ENSG00000170477.12  0.502930  0.984863  0.873047
                   ENSG00000171201.10  0.057190  0.129517  0.232300
                   ENSG00000163209.14  0.474609  0.974121  0.833008
                   ENSG00000143536.7   0.479248  0.950684  0.820312
                   ENSG00000169474.4   0.488037  0.954102  0.844238
[2025-07-07 17:29:20,513 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 17:33:14,507 - __main__] INFO: 
                ccc       pearson      spearman
count  1.331409e+09  1.331409e+09  1.331409e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    3.705025e-04  3.102112e-02  3.497314e-02
50%    7.678986e-03  6.829834e-02  7.672119e-02
75%    2.743530e-02  1.394043e-01  1.455078e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 17:34:49,002 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 17:34:49,005 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000131  0.024887  0.027802
0.242105  0.000318  0.030045  0.033813
0.284211  0.000656  0.035400  0.039948
0.326316  0.001262  0.041016  0.046356
0.368421  0.002146  0.046906  0.053101
0.410526  0.003477  0.053223  0.060181
0.452632  0.005226  0.059998  0.067688
0.494737  0.007385  0.067322  0.075684
0.536842  0.009872  0.075439  0.084351
0.578947  0.012566  0.084473  0.093628
0.621053  0.015564  0.094788  0.103882
0.663158  0.018906  0.106750  0.115417
0.705263  0.022339  0.120911  0.128296
0.747368  0.027023  0.138184  0.144287
0.789474  0.032471  0.159912  0.165771
0.831579  0.040131  0.188477  0.195190
0.873684  0.051819  0.228149  0.239258
0.915789  0.074463  0.288574  0.309326
0.957895  0.117432  0.397461  0.429199
1.000000  1.000000  1.000000  1.000000
[2025-07-07 17:35:08,381 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 17:35:08,382 - __main__] INFO: 0.2    0.000131
0.8    0.034210
Name: ccc, dtype: float64
[2025-07-07 17:35:08,382 - __main__] INFO: CCC lower quantile: 0.0001308917999267578, upper quantile: 0.034210205078125
[2025-07-07 17:35:26,284 - __main__] INFO: Clustermatch quantiles: lower=0.0009012222290039062, upper=0.021820068359375
[2025-07-07 17:35:45,840 - __main__] INFO: Pearson quantiles: lower=0.0374755859375, upper=0.11895751953125
[2025-07-07 17:36:03,400 - __main__] INFO: Spearman quantiles: lower=0.042327880859375, upper=0.1265869140625
[2025-07-07 17:36:07,594 - __main__] INFO: Pearson higher count: 399601380
[2025-07-07 17:36:10,586 - __main__] INFO: Pearson lower count: 399694918
[2025-07-07 17:36:14,493 - __main__] INFO: Spearman higher count: 399737139
[2025-07-07 17:36:17,493 - __main__] INFO: Spearman lower count: 399509225
[2025-07-07 17:36:21,705 - __main__] INFO: Clustermatch higher count: 399430292
[2025-07-07 17:36:24,707 - __main__] INFO: Clustermatch lower count: 399623127
[2025-07-07 17:36:28,981 - __main__] INFO: Plot dataframe shape: (1331409003, 9)
[2025-07-07 17:36:28,982 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 17:36:37,715 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 17:36:37,715 - __main__] INFO: Data shape for upset plot: (1331409003, 9)
[2025-07-07 17:44:16,038 - __main__] INFO: Gene pairs by categories shape: (1331409003, 9)
[2025-07-07 17:44:16,038 - __main__] INFO: First few entries:
[2025-07-07 17:44:16,047 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.250488
                                                                               True                           True  ...  0.911621
                                                                               True                           True  ...  0.271729
                                                                               True                           True  ...  0.916504
                                                                               True                           True  ...  0.256592

[5 rows x 9 columns]
[2025-07-07 17:44:16,047 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 17:46:11,203 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_minor_salivary_gland_full.svg
[2025-07-07 17:46:11,203 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_172905/upsetplot_gtex_minor_salivary_gland_full.svg
[2025-07-07 17:46:11,203 - __main__] INFO: Data shape for trimmed plot: (1331409003, 9)
[2025-07-07 17:49:34,937 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 17:49:34,937 - __main__] INFO: Shape: (1331409003, 9)
[2025-07-07 17:52:49,899 - __main__] INFO: Unique index combinations:
[2025-07-07 17:52:49,905 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 17:52:49,906 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 17:52:49,909 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 17:52:49,910 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 17:52:49,912 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 17:52:49,915 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 17:52:49,917 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 18:04:51,608 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 18:04:51,617 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.250488
                                                                               True                           True  ...  0.911621
                                                                               True                           True  ...  0.271729
                                                                               True                           True  ...  0.916504
                                                                               True                           True  ...  0.256592

[5 rows x 9 columns]
[2025-07-07 18:04:52,999 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 18:06:00,311 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_minor_salivary_gland_trimmed.svg
[2025-07-07 18:06:00,311 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_172905/upsetplot_gtex_minor_salivary_gland_trimmed.svg
[2025-07-07 18:06:00,312 - __main__] INFO: Final dataframe shape: (1331409003, 9)
[2025-07-07 18:06:00,312 - __main__] INFO: Final dataframe head:
[2025-07-07 18:06:00,317 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000171201.10 ENSG00000170477.12            True  ...  0.250488
ENSG00000163209.14 ENSG00000170477.12            True  ...  0.911621
                   ENSG00000171201.10            True  ...  0.271729
ENSG00000143536.7  ENSG00000170477.12            True  ...  0.916504
                   ENSG00000171201.10            True  ...  0.256592

[5 rows x 9 columns]
[2025-07-07 18:06:00,317 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-minor_salivary_gland-var_pc_log2.pkl
[2025-07-07 18:06:00,317 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 18:06:04,576 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-minor_salivary_gland-var_pc_log2.pkl
[2025-07-07 18:06:04,576 - __main__] INFO: Script completed successfully!
[2025-07-07 18:06:04,576 - __main__] INFO: All outputs saved to log directory: logs/20250707_172905
[2025-07-07 18:06:10,612 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_180610
[2025-07-07 18:06:10,612 - __main__] INFO: Log directory: logs/20250707_180610
[2025-07-07 18:06:10,612 - __main__] INFO: Configuration:
[2025-07-07 18:06:10,612 - __main__] INFO:   GTEX_TISSUE: muscle_skeletal
[2025-07-07 18:06:10,612 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 18:06:10,613 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 18:06:10,613 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 18:06:10,613 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 18:06:10,613 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 18:06:10,613 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_muscle_skeletal-var_pc_log2-all.pkl
[2025-07-07 18:06:10,613 - __main__] INFO: Loading correlation data...
[2025-07-07 18:06:26,583 - __main__] INFO: Dataframe shape: (1460025703, 3)
[2025-07-07 18:06:26,583 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 18:06:26,588 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000173432.10 ENSG00000129824.15  0.077698  0.268555  0.406738
ENSG00000134184.12 ENSG00000129824.15  0.007732  0.036469  0.011124
                   ENSG00000173432.10  0.006584  0.076477  0.037903
ENSG00000124107.5  ENSG00000129824.15  0.047119  0.111816  0.134277
                   ENSG00000173432.10  0.152832  0.240479  0.553711
                   ENSG00000134184.12  0.008957  0.059723  0.078003
ENSG00000248746.5  ENSG00000129824.15  0.024826  0.038818  0.015762
                   ENSG00000173432.10  0.014061  0.104248  0.176758
                   ENSG00000134184.12  0.002264  0.007210  0.038910
                   ENSG00000124107.5   0.098145  0.273438  0.446045
ENSG00000160808.9  ENSG00000129824.15  0.057617  0.095398  0.173218
                   ENSG00000173432.10  0.150879  0.239746  0.515625
                   ENSG00000134184.12  0.004715  0.066284  0.016296
                   ENSG00000124107.5   0.300781  0.404785  0.705078
                   ENSG00000248746.5   0.075989  0.212769  0.348877
[2025-07-07 18:06:26,588 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 18:11:20,806 - __main__] INFO: 
                ccc       pearson      spearman
count  1.460026e+09  1.460026e+09  1.460026e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.372265e-05  1.491547e-02  1.724243e-02
50%    1.590729e-03  3.936768e-02  4.019165e-02
75%    1.126099e-02  1.027222e-01  8.398438e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 18:13:01,212 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 18:13:01,216 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000006  0.011650  0.013588
0.242105  0.000019  0.014381  0.016647
0.284211  0.000049  0.017349  0.019882
0.326316  0.000110  0.020615  0.023300
0.368421  0.000232  0.024261  0.026947
0.410526  0.000463  0.028381  0.030838
0.452632  0.000868  0.033112  0.035034
0.494737  0.001495  0.038605  0.039581
0.536842  0.002352  0.045105  0.044556
0.578947  0.003412  0.052826  0.050018
0.621053  0.004673  0.061981  0.056152
0.663158  0.006237  0.072876  0.063110
0.705263  0.008301  0.085815  0.071960
0.747368  0.011047  0.101624  0.083130
0.789474  0.014893  0.121399  0.098328
0.831579  0.020248  0.147583  0.120667
0.873684  0.028198  0.184570  0.156006
0.915789  0.041107  0.241699  0.215088
0.957895  0.068665  0.343994  0.323242
1.000000  1.000000  1.000000  1.000000
[2025-07-07 18:13:18,890 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 18:13:18,892 - __main__] INFO: 0.2    0.000006
0.8    0.016052
Name: ccc, dtype: float64
[2025-07-07 18:13:18,892 - __main__] INFO: CCC lower quantile: 5.602836608886719e-06, upper quantile: 0.01605224609375
[2025-07-07 18:13:36,358 - __main__] INFO: Clustermatch quantiles: lower=6.681680679321289e-05, upper=0.00799560546875
[2025-07-07 18:13:58,728 - __main__] INFO: Pearson quantiles: lower=0.0185394287109375, upper=0.0841064453125
[2025-07-07 18:14:22,731 - __main__] INFO: Spearman quantiles: lower=0.021148681640625, upper=0.07073974609375
[2025-07-07 18:14:27,332 - __main__] INFO: Pearson higher count: 438060147
[2025-07-07 18:14:30,619 - __main__] INFO: Pearson lower count: 438217941
[2025-07-07 18:14:34,787 - __main__] INFO: Spearman higher count: 438365070
[2025-07-07 18:14:38,081 - __main__] INFO: Spearman lower count: 438306808
[2025-07-07 18:14:42,703 - __main__] INFO: Clustermatch higher count: 438017758
[2025-07-07 18:14:45,997 - __main__] INFO: Clustermatch lower count: 438025025
[2025-07-07 18:14:50,859 - __main__] INFO: Plot dataframe shape: (1460025703, 9)
[2025-07-07 18:14:50,859 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 18:15:00,450 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 18:15:00,451 - __main__] INFO: Data shape for upset plot: (1460025703, 9)
[2025-07-07 18:24:15,142 - __main__] INFO: Gene pairs by categories shape: (1460025703, 9)
[2025-07-07 18:24:15,142 - __main__] INFO: First few entries:
[2025-07-07 18:24:15,150 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.406738
True           False         False              False           False          False                         False  ...  0.011124
False          False         False              False           False          False                         False  ...  0.037903
                                                True            True           True                           True  ...  0.134277
                                                                               True                           True  ...  0.553711

[5 rows x 9 columns]
[2025-07-07 18:24:15,150 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 18:26:22,490 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_muscle_skeletal_full.svg
[2025-07-07 18:26:22,490 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_180610/upsetplot_gtex_muscle_skeletal_full.svg
[2025-07-07 18:26:22,490 - __main__] INFO: Data shape for trimmed plot: (1460025703, 9)
[2025-07-07 18:30:44,482 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 18:30:44,483 - __main__] INFO: Shape: (1460025703, 9)
[2025-07-07 18:34:18,169 - __main__] INFO: Unique index combinations:
[2025-07-07 18:34:18,175 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 18:34:18,176 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 18:34:18,179 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 18:34:18,180 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 18:34:18,183 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 18:34:18,185 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 18:34:18,188 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 18:46:41,079 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 18:46:41,088 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.406738
                                                                               True                           True  ...  0.134277
                                                                               True                           True  ...  0.553711
                                                                               True                           True  ...  0.176758
                                                                               True                           True  ...  0.446045

[5 rows x 9 columns]
[2025-07-07 18:46:43,027 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 18:47:58,898 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_muscle_skeletal_trimmed.svg
[2025-07-07 18:47:58,899 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_180610/upsetplot_gtex_muscle_skeletal_trimmed.svg
[2025-07-07 18:47:58,899 - __main__] INFO: Final dataframe shape: (1460025703, 9)
[2025-07-07 18:47:58,899 - __main__] INFO: Final dataframe head:
[2025-07-07 18:47:58,904 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000173432.10 ENSG00000129824.15            True  ...  0.406738
ENSG00000134184.12 ENSG00000129824.15           False  ...  0.011124
                   ENSG00000173432.10           False  ...  0.037903
ENSG00000124107.5  ENSG00000129824.15            True  ...  0.134277
                   ENSG00000173432.10            True  ...  0.553711

[5 rows x 9 columns]
[2025-07-07 18:47:58,904 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-muscle_skeletal-var_pc_log2.pkl
[2025-07-07 18:47:58,904 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 18:48:03,681 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-muscle_skeletal-var_pc_log2.pkl
[2025-07-07 18:48:03,681 - __main__] INFO: Script completed successfully!
[2025-07-07 18:48:03,681 - __main__] INFO: All outputs saved to log directory: logs/20250707_180610
[2025-07-07 18:48:09,644 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_184809
[2025-07-07 18:48:09,644 - __main__] INFO: Log directory: logs/20250707_184809
[2025-07-07 18:48:09,644 - __main__] INFO: Configuration:
[2025-07-07 18:48:09,644 - __main__] INFO:   GTEX_TISSUE: nerve_tibial
[2025-07-07 18:48:09,644 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 18:48:09,644 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 18:48:09,644 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 18:48:09,644 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 18:48:09,644 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 18:48:09,644 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_nerve_tibial-var_pc_log2-all.pkl
[2025-07-07 18:48:09,644 - __main__] INFO: Loading correlation data...
[2025-07-07 18:48:24,200 - __main__] INFO: Dataframe shape: (1472643585, 3)
[2025-07-07 18:48:24,200 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 18:48:24,204 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000134184.12 ENSG00000129824.15  0.005867  0.058929  0.066162
ENSG00000229807.10 ENSG00000129824.15  0.476807  0.876953  0.742676
                   ENSG00000134184.12  0.013924  0.066040  0.150513
ENSG00000149968.11 ENSG00000129824.15  0.058563  0.249512  0.343994
                   ENSG00000134184.12  0.012299  0.089294  0.115601
                   ENSG00000229807.10  0.165649  0.234619  0.556641
ENSG00000012817.15 ENSG00000129824.15  0.465332  0.864746  0.608887
                   ENSG00000134184.12  0.005150  0.014420  0.033142
                   ENSG00000229807.10  0.468750  0.837891  0.567871
                   ENSG00000149968.11  0.053070  0.188232  0.199951
ENSG00000224114.1  ENSG00000129824.15  0.010338  0.061798  0.122864
                   ENSG00000134184.12  0.006847  0.019211  0.067444
                   ENSG00000229807.10  0.002048  0.018875  0.051270
                   ENSG00000149968.11  0.004089  0.032318  0.025558
                   ENSG00000012817.15  0.004520  0.021545  0.011932
[2025-07-07 18:48:24,204 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 18:53:20,701 - __main__] INFO: 
                ccc       pearson      spearman
count  1.472644e+09  1.472644e+09  1.472644e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    6.455183e-05  1.588440e-02  1.777649e-02
50%    2.111435e-03  3.628540e-02  3.945923e-02
75%    8.583069e-03  7.769775e-02  7.702637e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 18:55:00,993 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 18:55:00,997 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000018  0.012619  0.014122
0.242105  0.000053  0.015358  0.017197
0.284211  0.000126  0.018234  0.020370
0.326316  0.000251  0.021255  0.023697
0.368421  0.000474  0.024475  0.027176
0.410526  0.000832  0.027924  0.030853
0.452632  0.001350  0.031677  0.034760
0.494737  0.002018  0.035767  0.038940
0.536842  0.002798  0.040283  0.043457
0.578947  0.003666  0.045410  0.048401
0.621053  0.004601  0.051300  0.053894
0.663158  0.005638  0.058197  0.060120
0.705263  0.006874  0.066528  0.067322
0.747368  0.008461  0.076965  0.076416
0.789474  0.010704  0.090454  0.088318
0.831579  0.014038  0.108826  0.105225
0.873684  0.019424  0.135376  0.131470
0.915789  0.028351  0.177368  0.175781
0.957895  0.047455  0.256104  0.259033
1.000000  1.000000  1.000000  1.000000
[2025-07-07 18:55:17,953 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 18:55:17,954 - __main__] INFO: 0.2    0.000018
0.8    0.011444
Name: ccc, dtype: float64
[2025-07-07 18:55:17,954 - __main__] INFO: CCC lower quantile: 1.8477439880371094e-05, upper quantile: 0.011444091796875
[2025-07-07 18:55:37,720 - __main__] INFO: Clustermatch quantiles: lower=0.00016391277313232422, upper=0.0066986083984375
[2025-07-07 18:55:59,118 - __main__] INFO: Pearson quantiles: lower=0.01934814453125, upper=0.06536865234375
[2025-07-07 18:56:21,966 - __main__] INFO: Spearman quantiles: lower=0.0216064453125, upper=0.06634521484375
[2025-07-07 18:56:26,599 - __main__] INFO: Pearson higher count: 442183507
[2025-07-07 18:56:29,913 - __main__] INFO: Pearson lower count: 442075690
[2025-07-07 18:56:33,634 - __main__] INFO: Spearman higher count: 442120618
[2025-07-07 18:56:36,959 - __main__] INFO: Spearman lower count: 442179743
[2025-07-07 18:56:41,638 - __main__] INFO: Clustermatch higher count: 441909194
[2025-07-07 18:56:44,970 - __main__] INFO: Clustermatch lower count: 441829004
[2025-07-07 18:56:49,896 - __main__] INFO: Plot dataframe shape: (1472643585, 9)
[2025-07-07 18:56:49,896 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 18:56:59,621 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 18:56:59,621 - __main__] INFO: Data shape for upset plot: (1472643585, 9)
[2025-07-07 19:06:07,480 - __main__] INFO: Gene pairs by categories shape: (1472643585, 9)
[2025-07-07 19:06:07,481 - __main__] INFO: First few entries:
[2025-07-07 19:06:07,489 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              False           False          False                         False  ...  0.066162
                                                True            True           True                           True  ...  0.742676
                                                                               True                           True  ...  0.150513
                                                                               True                           True  ...  0.343994
                                                                               True                           True  ...  0.115601

[5 rows x 9 columns]
[2025-07-07 19:06:07,489 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 19:08:16,083 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_nerve_tibial_full.svg
[2025-07-07 19:08:16,083 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_184809/upsetplot_gtex_nerve_tibial_full.svg
[2025-07-07 19:08:16,083 - __main__] INFO: Data shape for trimmed plot: (1472643585, 9)
[2025-07-07 19:12:18,205 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 19:12:18,205 - __main__] INFO: Shape: (1472643585, 9)
[2025-07-07 19:15:53,804 - __main__] INFO: Unique index combinations:
[2025-07-07 19:15:53,810 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 19:15:53,811 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 19:15:53,814 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 19:15:53,815 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 19:15:53,818 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 19:15:53,820 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 19:15:53,822 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 19:28:26,405 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 19:28:26,414 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.742676
                                                                               True                           True  ...  0.150513
                                                                               True                           True  ...  0.343994
                                                                               True                           True  ...  0.115601
                                                                               True                           True  ...  0.556641

[5 rows x 9 columns]
[2025-07-07 19:28:28,720 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 19:29:44,152 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_nerve_tibial_trimmed.svg
[2025-07-07 19:29:44,153 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_184809/upsetplot_gtex_nerve_tibial_trimmed.svg
[2025-07-07 19:29:44,153 - __main__] INFO: Final dataframe shape: (1472643585, 9)
[2025-07-07 19:29:44,153 - __main__] INFO: Final dataframe head:
[2025-07-07 19:29:44,158 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000134184.12 ENSG00000129824.15           False  ...  0.066162
ENSG00000229807.10 ENSG00000129824.15            True  ...  0.742676
                   ENSG00000134184.12            True  ...  0.150513
ENSG00000149968.11 ENSG00000129824.15            True  ...  0.343994
                   ENSG00000134184.12            True  ...  0.115601

[5 rows x 9 columns]
[2025-07-07 19:29:44,158 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-nerve_tibial-var_pc_log2.pkl
[2025-07-07 19:29:44,158 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 19:29:48,971 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-nerve_tibial-var_pc_log2.pkl
[2025-07-07 19:29:48,971 - __main__] INFO: Script completed successfully!
[2025-07-07 19:29:48,971 - __main__] INFO: All outputs saved to log directory: logs/20250707_184809
[2025-07-07 19:29:54,958 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_192954
[2025-07-07 19:29:54,958 - __main__] INFO: Log directory: logs/20250707_192954
[2025-07-07 19:29:54,958 - __main__] INFO: Configuration:
[2025-07-07 19:29:54,958 - __main__] INFO:   GTEX_TISSUE: ovary
[2025-07-07 19:29:54,958 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 19:29:54,958 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 19:29:54,958 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 19:29:54,958 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 19:29:54,958 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 19:29:54,958 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_ovary-var_pc_log2-all.pkl
[2025-07-07 19:29:54,958 - __main__] INFO: Loading correlation data...
[2025-07-07 19:30:07,190 - __main__] INFO: Dataframe shape: (1353222276, 3)
[2025-07-07 19:30:07,190 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 19:30:07,194 - __main__] INFO: 
                                           ccc   pearson  spearman
ENSG00000224114.1 ENSG00000134184.12  0.025833  0.100952  0.065796
ENSG00000213058.3 ENSG00000134184.12  0.025833  0.088562  0.121948
                  ENSG00000224114.1   0.502930  0.985840  0.808105
ENSG00000225972.1 ENSG00000134184.12  0.037476  0.212646  0.114685
                  ENSG00000224114.1   0.024857  0.171265  0.081238
                  ENSG00000213058.3   0.022110  0.164429  0.058899
ENSG00000146678.9 ENSG00000134184.12  0.014114  0.039948  0.024643
                  ENSG00000224114.1   0.015579  0.001691  0.013504
                  ENSG00000213058.3   0.010765  0.006973  0.069214
                  ENSG00000225972.1   0.022293  0.040985  0.072083
ENSG00000211596.3 ENSG00000134184.12  0.014900  0.060547  0.026703
                  ENSG00000224114.1   0.013016  0.057861  0.013412
                  ENSG00000213058.3   0.015778  0.045135  0.045563
                  ENSG00000225972.1   0.079590  0.130493  0.353027
                  ENSG00000146678.9   0.016876  0.021194  0.093994
[2025-07-07 19:30:07,194 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 19:34:06,415 - __main__] INFO: 
                ccc       pearson      spearman
count  1.353222e+09  1.353222e+09  1.353222e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.524853e-04  2.684021e-02  3.030396e-02
50%    5.741119e-03  5.804443e-02  6.549072e-02
75%    1.965332e-02  1.133423e-01  1.189575e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 19:35:40,048 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 19:35:40,051 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000105  0.021591  0.024170
0.242105  0.000248  0.026001  0.029327
0.284211  0.000481  0.030548  0.034546
0.326316  0.000852  0.035278  0.040039
0.368421  0.001521  0.040283  0.045715
0.410526  0.002485  0.045532  0.051697
0.452632  0.003813  0.051178  0.057983
0.494737  0.005508  0.057251  0.064636
0.536842  0.007423  0.063904  0.071777
0.578947  0.009560  0.071167  0.079407
0.621053  0.011871  0.079346  0.087646
0.663158  0.014107  0.088684  0.096741
0.705263  0.016830  0.099487  0.106812
0.747368  0.019455  0.112427  0.118225
0.789474  0.023041  0.128296  0.131714
0.831579  0.027283  0.148804  0.150146
0.873684  0.034607  0.176758  0.175537
0.915789  0.045197  0.218628  0.215820
0.957895  0.070923  0.294434  0.293457
1.000000  1.000000  1.000000  1.000000
[2025-07-07 19:35:56,667 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 19:35:56,668 - __main__] INFO: 0.2    0.000105
0.8    0.024063
Name: ccc, dtype: float64
[2025-07-07 19:35:56,668 - __main__] INFO: CCC lower quantile: 0.00010502338409423828, upper quantile: 0.0240631103515625
[2025-07-07 19:36:15,823 - __main__] INFO: Clustermatch quantiles: lower=0.0006046295166015625, upper=0.016448974609375
[2025-07-07 19:36:34,454 - __main__] INFO: Pearson quantiles: lower=0.03228759765625, upper=0.0980224609375
[2025-07-07 19:36:55,316 - __main__] INFO: Spearman quantiles: lower=0.03656005859375, upper=0.10552978515625
[2025-07-07 19:36:59,574 - __main__] INFO: Pearson higher count: 406231327
[2025-07-07 19:37:02,618 - __main__] INFO: Pearson lower count: 406032235
[2025-07-07 19:37:06,673 - __main__] INFO: Spearman higher count: 406041986
[2025-07-07 19:37:09,728 - __main__] INFO: Spearman lower count: 406130968
[2025-07-07 19:37:14,018 - __main__] INFO: Clustermatch higher count: 406027419
[2025-07-07 19:37:17,074 - __main__] INFO: Clustermatch lower count: 405969419
[2025-07-07 19:37:21,528 - __main__] INFO: Plot dataframe shape: (1353222276, 9)
[2025-07-07 19:37:21,528 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 19:37:30,517 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 19:37:30,517 - __main__] INFO: Data shape for upset plot: (1353222276, 9)
[2025-07-07 19:45:31,877 - __main__] INFO: Gene pairs by categories shape: (1353222276, 9)
[2025-07-07 19:45:31,877 - __main__] INFO: First few entries:
[2025-07-07 19:45:31,885 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              False           True           True                           True  ...  0.065796
                                                True            False          True                          False  ...  0.121948
                                                                True           True                           True  ...  0.808105
                                                                               True                           True  ...  0.114685
                                                False           True           True                           True  ...  0.081238

[5 rows x 9 columns]
[2025-07-07 19:45:31,885 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 19:47:30,316 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_ovary_full.svg
[2025-07-07 19:47:30,316 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_192954/upsetplot_gtex_ovary_full.svg
[2025-07-07 19:47:30,317 - __main__] INFO: Data shape for trimmed plot: (1353222276, 9)
[2025-07-07 19:51:08,781 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 19:51:08,781 - __main__] INFO: Shape: (1353222276, 9)
[2025-07-07 19:54:28,307 - __main__] INFO: Unique index combinations:
[2025-07-07 19:54:28,313 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 19:54:28,314 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 19:54:28,317 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 19:54:28,318 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 19:54:28,321 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 19:54:28,323 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 19:54:28,326 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 20:06:08,818 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 20:06:08,827 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.808105
                                                                               True                           True  ...  0.114685
                                                                               True                           True  ...  0.353027
                                                                               True                           True  ...  0.179565
                                                                               True                           True  ...  0.119019

[5 rows x 9 columns]
[2025-07-07 20:06:10,238 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 20:07:18,482 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_ovary_trimmed.svg
[2025-07-07 20:07:18,483 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_192954/upsetplot_gtex_ovary_trimmed.svg
[2025-07-07 20:07:18,483 - __main__] INFO: Final dataframe shape: (1353222276, 9)
[2025-07-07 20:07:18,483 - __main__] INFO: Final dataframe head:
[2025-07-07 20:07:18,488 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000224114.1 ENSG00000134184.12            True  ...  0.065796
ENSG00000213058.3 ENSG00000134184.12           False  ...  0.121948
                  ENSG00000224114.1             True  ...  0.808105
ENSG00000225972.1 ENSG00000134184.12            True  ...  0.114685
                  ENSG00000224114.1             True  ...  0.081238

[5 rows x 9 columns]
[2025-07-07 20:07:18,488 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-ovary-var_pc_log2.pkl
[2025-07-07 20:07:18,488 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 20:07:22,817 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-ovary-var_pc_log2.pkl
[2025-07-07 20:07:22,817 - __main__] INFO: Script completed successfully!
[2025-07-07 20:07:22,817 - __main__] INFO: All outputs saved to log directory: logs/20250707_192954
[2025-07-07 20:07:28,909 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_200728
[2025-07-07 20:07:28,909 - __main__] INFO: Log directory: logs/20250707_200728
[2025-07-07 20:07:28,909 - __main__] INFO: Configuration:
[2025-07-07 20:07:28,909 - __main__] INFO:   GTEX_TISSUE: pancreas
[2025-07-07 20:07:28,909 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 20:07:28,909 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 20:07:28,909 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 20:07:28,909 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 20:07:28,909 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 20:07:28,909 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_pancreas-var_pc_log2-all.pkl
[2025-07-07 20:07:28,909 - __main__] INFO: Loading correlation data...
[2025-07-07 20:07:40,618 - __main__] INFO: Dataframe shape: (1369711630, 3)
[2025-07-07 20:07:40,618 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 20:07:40,622 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000189372.4  ENSG00000129824.15  0.034668  0.172241  0.171997
ENSG00000172016.15 ENSG00000129824.15  0.066956  0.210815  0.316406
                   ENSG00000189372.4   0.040100  0.121033  0.192505
ENSG00000204140.9  ENSG00000129824.15  0.016159  0.112183  0.097717
                   ENSG00000189372.4   0.009979  0.008148  0.101318
                   ENSG00000172016.15  0.038513  0.137939  0.231812
ENSG00000102837.6  ENSG00000129824.15  0.092468  0.085999  0.293213
                   ENSG00000189372.4   0.090149  0.143188  0.238037
                   ENSG00000172016.15  0.385010  0.573242  0.789551
                   ENSG00000204140.9   0.018417  0.099915  0.145264
ENSG00000204787.8  ENSG00000129824.15  0.095459  0.180542  0.329834
                   ENSG00000189372.4   0.082886  0.180298  0.251465
                   ENSG00000172016.15  0.431885  0.366455  0.773438
                   ENSG00000204140.9   0.018417  0.078064  0.162109
                   ENSG00000102837.6   0.385010  0.381348  0.750977
[2025-07-07 20:07:40,622 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 20:11:50,379 - __main__] INFO: 
                ccc       pearson      spearman
count  1.369712e+09  1.369712e+09  1.369712e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    6.645918e-05  2.262878e-02  2.598572e-02
50%    2.937317e-03  5.529785e-02  5.987549e-02
75%    1.841736e-02  1.473389e-01  1.274414e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 20:13:24,194 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 20:13:24,198 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000019  0.017944  0.020523
0.242105  0.000051  0.021866  0.025101
0.284211  0.000126  0.026062  0.029877
0.326316  0.000261  0.030579  0.034912
0.368421  0.000510  0.035522  0.040314
0.410526  0.000963  0.040985  0.046082
0.452632  0.001687  0.047180  0.052277
0.494737  0.002771  0.054321  0.058990
0.536842  0.004246  0.062744  0.066345
0.578947  0.006096  0.072998  0.074463
0.621053  0.008263  0.085571  0.083618
0.663158  0.010818  0.101196  0.094055
0.705263  0.014030  0.120789  0.107849
0.747368  0.018402  0.145508  0.126099
0.789474  0.024231  0.177612  0.152222
0.831579  0.033112  0.220947  0.192261
0.873684  0.047028  0.282227  0.255615
0.915789  0.073120  0.372803  0.353760
0.957895  0.131226  0.516113  0.508301
1.000000  1.000000  1.000000  1.000000
[2025-07-07 20:13:40,186 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 20:13:40,187 - __main__] INFO: 0.2    0.000019
0.8    0.026169
Name: ccc, dtype: float64
[2025-07-07 20:13:40,187 - __main__] INFO: CCC lower quantile: 1.895427703857422e-05, upper quantile: 0.0261688232421875
[2025-07-07 20:13:58,826 - __main__] INFO: Clustermatch quantiles: lower=0.00016486644744873047, upper=0.01355743408203125
[2025-07-07 20:14:19,611 - __main__] INFO: Pearson quantiles: lower=0.0277099609375, upper=0.11810302734375
[2025-07-07 20:14:39,857 - __main__] INFO: Spearman quantiles: lower=0.03173828125, upper=0.10589599609375
[2025-07-07 20:14:44,183 - __main__] INFO: Pearson higher count: 411002837
[2025-07-07 20:14:47,267 - __main__] INFO: Pearson lower count: 411032203
[2025-07-07 20:14:51,466 - __main__] INFO: Spearman higher count: 410999519
[2025-07-07 20:14:54,565 - __main__] INFO: Spearman lower count: 411177142
[2025-07-07 20:14:58,913 - __main__] INFO: Clustermatch higher count: 410958132
[2025-07-07 20:15:02,013 - __main__] INFO: Clustermatch lower count: 410937556
[2025-07-07 20:15:06,529 - __main__] INFO: Plot dataframe shape: (1369711630, 9)
[2025-07-07 20:15:06,530 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 20:15:15,647 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 20:15:15,647 - __main__] INFO: Data shape for upset plot: (1369711630, 9)
[2025-07-07 20:23:48,265 - __main__] INFO: Gene pairs by categories shape: (1369711630, 9)
[2025-07-07 20:23:48,266 - __main__] INFO: First few entries:
[2025-07-07 20:23:48,274 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.171997
                                                                               True                           True  ...  0.316406
                                                                               True                           True  ...  0.192505
                                                False           False          True                          False  ...  0.097717
               True          False              False           False          False                         False  ...  0.101318

[5 rows x 9 columns]
[2025-07-07 20:23:48,274 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 20:25:46,860 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_pancreas_full.svg
[2025-07-07 20:25:46,860 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_200728/upsetplot_gtex_pancreas_full.svg
[2025-07-07 20:25:46,860 - __main__] INFO: Data shape for trimmed plot: (1369711630, 9)
[2025-07-07 20:29:28,320 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 20:29:28,320 - __main__] INFO: Shape: (1369711630, 9)
[2025-07-07 20:32:47,777 - __main__] INFO: Unique index combinations:
[2025-07-07 20:32:47,784 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 20:32:47,784 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 20:32:47,788 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 20:32:47,789 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 20:32:47,791 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 20:32:47,794 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 20:32:47,796 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 20:44:46,470 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 20:44:46,479 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.171997
                                                                               True                           True  ...  0.316406
                                                                               True                           True  ...  0.192505
                                                                               True                           True  ...  0.231812
                                                                               True                           True  ...  0.238037

[5 rows x 9 columns]
[2025-07-07 20:44:47,900 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 20:45:57,071 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_pancreas_trimmed.svg
[2025-07-07 20:45:57,071 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_200728/upsetplot_gtex_pancreas_trimmed.svg
[2025-07-07 20:45:57,071 - __main__] INFO: Final dataframe shape: (1369711630, 9)
[2025-07-07 20:45:57,071 - __main__] INFO: Final dataframe head:
[2025-07-07 20:45:57,077 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000189372.4  ENSG00000129824.15            True  ...  0.171997
ENSG00000172016.15 ENSG00000129824.15            True  ...  0.316406
                   ENSG00000189372.4             True  ...  0.192505
ENSG00000204140.9  ENSG00000129824.15           False  ...  0.097717
                   ENSG00000189372.4            False  ...  0.101318

[5 rows x 9 columns]
[2025-07-07 20:45:57,077 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-pancreas-var_pc_log2.pkl
[2025-07-07 20:45:57,077 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 20:46:01,439 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-pancreas-var_pc_log2.pkl
[2025-07-07 20:46:01,439 - __main__] INFO: Script completed successfully!
[2025-07-07 20:46:01,439 - __main__] INFO: All outputs saved to log directory: logs/20250707_200728
[2025-07-07 20:46:07,437 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_204607
[2025-07-07 20:46:07,437 - __main__] INFO: Log directory: logs/20250707_204607
[2025-07-07 20:46:07,437 - __main__] INFO: Configuration:
[2025-07-07 20:46:07,437 - __main__] INFO:   GTEX_TISSUE: pituitary
[2025-07-07 20:46:07,437 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 20:46:07,437 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 20:46:07,437 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 20:46:07,437 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 20:46:07,437 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 20:46:07,437 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_pituitary-var_pc_log2-all.pkl
[2025-07-07 20:46:07,437 - __main__] INFO: Loading correlation data...
[2025-07-07 20:46:19,239 - __main__] INFO: Dataframe shape: (1418660011, 3)
[2025-07-07 20:46:19,240 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 20:46:19,244 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000156076.9  ENSG00000145824.12  0.575684  0.504883  0.857422
ENSG00000129824.15 ENSG00000145824.12  0.052704  0.252930  0.309082
                   ENSG00000156076.9   0.059753  0.322754  0.316650
ENSG00000134200.3  ENSG00000145824.12  0.068542  0.189819  0.105896
                   ENSG00000156076.9   0.036224  0.133179  0.180176
                   ENSG00000129824.15  0.024506  0.083496  0.112244
ENSG00000229807.10 ENSG00000145824.12  0.013153  0.057556  0.028946
                   ENSG00000156076.9   0.014359  0.078735  0.054932
                   ENSG00000129824.15  0.281250  0.807129  0.545410
                   ENSG00000134200.3   0.021027  0.124023  0.186279
ENSG00000124205.15 ENSG00000145824.12  0.453613  0.692383  0.825684
                   ENSG00000156076.9   0.455078  0.779297  0.806641
                   ENSG00000129824.15  0.075989  0.327393  0.371338
                   ENSG00000134200.3   0.041779  0.174683  0.132568
                   ENSG00000229807.10  0.023224  0.086731  0.117920
[2025-07-07 20:46:19,244 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 20:50:39,034 - __main__] INFO: 
                ccc       pearson      spearman
count  1.418660e+09  1.418660e+09  1.418660e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.024174e-04  2.333069e-02  2.606201e-02
50%    4.581451e-03  5.181885e-02  5.712891e-02
75%    1.558685e-02  1.062012e-01  1.077881e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 20:52:16,944 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 20:52:16,947 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000064  0.018661  0.020752
0.242105  0.000185  0.022583  0.025192
0.284211  0.000380  0.026657  0.029800
0.326316  0.000706  0.030930  0.034607
0.368421  0.001245  0.035461  0.039581
0.410526  0.002037  0.040253  0.044861
0.452632  0.003099  0.045441  0.050415
0.494737  0.004406  0.051056  0.056366
0.536842  0.005875  0.057281  0.062744
0.578947  0.007469  0.064209  0.069641
0.621053  0.009148  0.072083  0.077271
0.663158  0.010986  0.081177  0.085754
0.705263  0.013031  0.092041  0.095398
0.747368  0.015503  0.105286  0.106934
0.789474  0.018646  0.122070  0.122192
0.831579  0.023132  0.144409  0.142700
0.873684  0.029770  0.176270  0.173462
0.915789  0.041382  0.226196  0.223511
0.957895  0.066956  0.319824  0.313477
1.000000  1.000000  1.000000  1.000000
[2025-07-07 20:52:34,895 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 20:52:34,896 - __main__] INFO: 0.2    0.000064
0.8    0.019608
Name: ccc, dtype: float64
[2025-07-07 20:52:34,896 - __main__] INFO: CCC lower quantile: 6.383657455444336e-05, upper quantile: 0.0196075439453125
[2025-07-07 20:52:52,379 - __main__] INFO: Clustermatch quantiles: lower=0.0004711151123046875, upper=0.01274871826171875
[2025-07-07 20:53:14,470 - __main__] INFO: Pearson quantiles: lower=0.0282440185546875, upper=0.090576171875
[2025-07-07 20:53:34,137 - __main__] INFO: Spearman quantiles: lower=0.031585693359375, upper=0.09405517578125
[2025-07-07 20:53:38,611 - __main__] INFO: Pearson higher count: 425636671
[2025-07-07 20:53:41,801 - __main__] INFO: Pearson lower count: 425770313
[2025-07-07 20:53:46,096 - __main__] INFO: Spearman higher count: 426099428
[2025-07-07 20:53:49,301 - __main__] INFO: Spearman lower count: 425893948
[2025-07-07 20:53:53,799 - __main__] INFO: Clustermatch higher count: 425642628
[2025-07-07 20:53:57,004 - __main__] INFO: Clustermatch lower count: 425737697
[2025-07-07 20:54:01,688 - __main__] INFO: Plot dataframe shape: (1418660011, 9)
[2025-07-07 20:54:01,688 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 20:54:10,994 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 20:54:10,995 - __main__] INFO: Data shape for upset plot: (1418660011, 9)
[2025-07-07 21:02:55,126 - __main__] INFO: Gene pairs by categories shape: (1418660011, 9)
[2025-07-07 21:02:55,127 - __main__] INFO: First few entries:
[2025-07-07 21:02:55,135 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.857422
                                                                               True                           True  ...  0.309082
                                                                               True                           True  ...  0.316650
                                                                               True                           True  ...  0.105896
                                                                               True                           True  ...  0.180176

[5 rows x 9 columns]
[2025-07-07 21:02:55,135 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 21:04:59,174 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_pituitary_full.svg
[2025-07-07 21:04:59,175 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_204607/upsetplot_gtex_pituitary_full.svg
[2025-07-07 21:04:59,175 - __main__] INFO: Data shape for trimmed plot: (1418660011, 9)
[2025-07-07 21:09:00,068 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 21:09:00,068 - __main__] INFO: Shape: (1418660011, 9)
[2025-07-07 21:12:28,398 - __main__] INFO: Unique index combinations:
[2025-07-07 21:12:28,405 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 21:12:28,405 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 21:12:28,409 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 21:12:28,410 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 21:12:28,412 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 21:12:28,415 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 21:12:28,417 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 21:24:39,169 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 21:24:39,178 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.857422
                                                                               True                           True  ...  0.309082
                                                                               True                           True  ...  0.316650
                                                                               True                           True  ...  0.105896
                                                                               True                           True  ...  0.180176

[5 rows x 9 columns]
[2025-07-07 21:24:40,661 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 21:25:52,184 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_pituitary_trimmed.svg
[2025-07-07 21:25:52,184 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_204607/upsetplot_gtex_pituitary_trimmed.svg
[2025-07-07 21:25:52,185 - __main__] INFO: Final dataframe shape: (1418660011, 9)
[2025-07-07 21:25:52,185 - __main__] INFO: Final dataframe head:
[2025-07-07 21:25:52,190 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000156076.9  ENSG00000145824.12            True  ...  0.857422
ENSG00000129824.15 ENSG00000145824.12            True  ...  0.309082
                   ENSG00000156076.9             True  ...  0.316650
ENSG00000134200.3  ENSG00000145824.12            True  ...  0.105896
                   ENSG00000156076.9             True  ...  0.180176

[5 rows x 9 columns]
[2025-07-07 21:25:52,190 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-pituitary-var_pc_log2.pkl
[2025-07-07 21:25:52,190 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 21:25:56,719 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-pituitary-var_pc_log2.pkl
[2025-07-07 21:25:56,719 - __main__] INFO: Script completed successfully!
[2025-07-07 21:25:56,719 - __main__] INFO: All outputs saved to log directory: logs/20250707_204607
[2025-07-07 21:26:02,769 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_212602
[2025-07-07 21:26:02,769 - __main__] INFO: Log directory: logs/20250707_212602
[2025-07-07 21:26:02,769 - __main__] INFO: Configuration:
[2025-07-07 21:26:02,769 - __main__] INFO:   GTEX_TISSUE: prostate
[2025-07-07 21:26:02,769 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 21:26:02,769 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 21:26:02,769 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 21:26:02,769 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 21:26:02,769 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 21:26:02,769 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_prostate-var_pc_log2-all.pkl
[2025-07-07 21:26:02,769 - __main__] INFO: Loading correlation data...
[2025-07-07 21:26:14,371 - __main__] INFO: Dataframe shape: (1395161076, 3)
[2025-07-07 21:26:14,372 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 21:26:14,376 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000102837.6  ENSG00000163810.11  0.014091  0.067688  0.122864
ENSG00000134184.12 ENSG00000163810.11  0.009598  0.008987  0.003052
                   ENSG00000102837.6   0.016708  0.367920  0.032928
ENSG00000142515.14 ENSG00000163810.11  0.035004  0.253662  0.308105
                   ENSG00000102837.6   0.035797  0.174561  0.129883
                   ENSG00000134184.12  0.011398  0.144775  0.104492
ENSG00000224114.1  ENSG00000163810.11  0.022202  0.096741  0.149048
                   ENSG00000102837.6   0.021225  0.003719  0.023514
                   ENSG00000134184.12  0.006641  0.033539  0.045380
                   ENSG00000142515.14  0.007080  0.064270  0.072266
ENSG00000014257.15 ENSG00000163810.11  0.026886  0.003416  0.190430
                   ENSG00000102837.6   0.028976  0.148926  0.109680
                   ENSG00000134184.12  0.007072  0.125854  0.085388
                   ENSG00000142515.14  0.619141  0.845215  0.910156
                   ENSG00000224114.1   0.008736  0.066284  0.069763
[2025-07-07 21:26:14,376 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 21:30:31,761 - __main__] INFO: 
                ccc       pearson      spearman
count  1.395161e+09  1.395161e+09  1.395161e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    2.462864e-04  2.413940e-02  2.821350e-02
50%    5.062103e-03  5.368042e-02  6.210327e-02
75%    1.811218e-02  1.116333e-01  1.179810e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 21:32:08,703 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 21:32:08,707 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000077  0.019333  0.022491
0.242105  0.000206  0.023361  0.027298
0.284211  0.000420  0.027573  0.032318
0.326316  0.000787  0.031982  0.037506
0.368421  0.001362  0.036652  0.042969
0.410526  0.002230  0.041656  0.048706
0.452632  0.003399  0.047028  0.054779
0.494737  0.004864  0.052917  0.061279
0.536842  0.006535  0.059418  0.068237
0.578947  0.008385  0.066711  0.075806
0.621053  0.010345  0.075073  0.084167
0.663158  0.012512  0.084778  0.093445
0.705263  0.014885  0.096375  0.104065
0.747368  0.017914  0.110657  0.117004
0.789474  0.021545  0.128662  0.134155
0.831579  0.026825  0.152466  0.157471
0.873684  0.035370  0.185669  0.192261
0.915789  0.050079  0.236572  0.248047
0.957895  0.078735  0.330566  0.346924
1.000000  1.000000  1.000000  1.000000
[2025-07-07 21:32:27,646 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 21:32:27,647 - __main__] INFO: 0.2    0.000077
0.8    0.022797
Name: ccc, dtype: float64
[2025-07-07 21:32:27,647 - __main__] INFO: CCC lower quantile: 7.706880569458008e-05, upper quantile: 0.022796630859375
[2025-07-07 21:32:43,145 - __main__] INFO: Clustermatch quantiles: lower=0.0005373954772949219, upper=0.014556884765625
[2025-07-07 21:33:05,448 - __main__] INFO: Pearson quantiles: lower=0.0291900634765625, upper=0.09478759765625
[2025-07-07 21:33:26,911 - __main__] INFO: Spearman quantiles: lower=0.03424072265625, upper=0.1026611328125
[2025-07-07 21:33:31,296 - __main__] INFO: Pearson higher count: 418749424
[2025-07-07 21:33:34,433 - __main__] INFO: Pearson lower count: 418644966
[2025-07-07 21:33:38,817 - __main__] INFO: Spearman higher count: 418562164
[2025-07-07 21:33:41,950 - __main__] INFO: Spearman lower count: 418775154
[2025-07-07 21:33:46,356 - __main__] INFO: Clustermatch higher count: 418581789
[2025-07-07 21:33:49,600 - __main__] INFO: Clustermatch lower count: 418940038
[2025-07-07 21:33:53,640 - __main__] INFO: Plot dataframe shape: (1395161076, 9)
[2025-07-07 21:33:53,640 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 21:34:02,894 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 21:34:02,895 - __main__] INFO: Data shape for upset plot: (1395161076, 9)
[2025-07-07 21:42:13,195 - __main__] INFO: Gene pairs by categories shape: (1395161076, 9)
[2025-07-07 21:42:13,195 - __main__] INFO: First few entries:
[2025-07-07 21:42:13,204 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            False          False                         False  ...  0.122864
True           True          False              False           False          False                         False  ...  0.003052
               False         False              False           True           True                           True  ...  0.032928
False          False         False              True            True           True                           True  ...  0.308105
                                                                               True                           True  ...  0.129883

[5 rows x 9 columns]
[2025-07-07 21:42:13,204 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 21:44:14,270 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_prostate_full.svg
[2025-07-07 21:44:14,270 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_212602/upsetplot_gtex_prostate_full.svg
[2025-07-07 21:44:14,270 - __main__] INFO: Data shape for trimmed plot: (1395161076, 9)
[2025-07-07 21:47:59,187 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 21:47:59,188 - __main__] INFO: Shape: (1395161076, 9)
[2025-07-07 21:51:25,238 - __main__] INFO: Unique index combinations:
[2025-07-07 21:51:25,244 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 21:51:25,245 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 21:51:25,248 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 21:51:25,249 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 21:51:25,252 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 21:51:25,254 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 21:51:25,257 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 22:03:27,516 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 22:03:27,524 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.308105
                                                                               True                           True  ...  0.129883
                                                                               True                           True  ...  0.149048
                                                                               True                           True  ...  0.109680
                                                                               True                           True  ...  0.910156

[5 rows x 9 columns]
[2025-07-07 22:03:28,975 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 22:04:40,404 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_prostate_trimmed.svg
[2025-07-07 22:04:40,404 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_212602/upsetplot_gtex_prostate_trimmed.svg
[2025-07-07 22:04:40,404 - __main__] INFO: Final dataframe shape: (1395161076, 9)
[2025-07-07 22:04:40,404 - __main__] INFO: Final dataframe head:
[2025-07-07 22:04:40,410 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000102837.6  ENSG00000163810.11           False  ...  0.122864
ENSG00000134184.12 ENSG00000163810.11           False  ...  0.003052
                   ENSG00000102837.6             True  ...  0.032928
ENSG00000142515.14 ENSG00000163810.11            True  ...  0.308105
                   ENSG00000102837.6             True  ...  0.129883

[5 rows x 9 columns]
[2025-07-07 22:04:40,410 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-prostate-var_pc_log2.pkl
[2025-07-07 22:04:40,410 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 22:04:44,903 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-prostate-var_pc_log2.pkl
[2025-07-07 22:04:44,903 - __main__] INFO: Script completed successfully!
[2025-07-07 22:04:44,903 - __main__] INFO: All outputs saved to log directory: logs/20250707_212602
[2025-07-07 22:04:50,801 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_220450
[2025-07-07 22:04:50,801 - __main__] INFO: Log directory: logs/20250707_220450
[2025-07-07 22:04:50,801 - __main__] INFO: Configuration:
[2025-07-07 22:04:50,801 - __main__] INFO:   GTEX_TISSUE: skin_not_sun_exposed_suprapubic
[2025-07-07 22:04:50,801 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 22:04:50,801 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 22:04:50,802 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 22:04:50,802 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 22:04:50,802 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 22:04:50,802 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_skin_not_sun_exposed_suprapubic-var_pc_log2-all.pkl
[2025-07-07 22:04:50,802 - __main__] INFO: Loading correlation data...
[2025-07-07 22:05:02,772 - __main__] INFO: Dataframe shape: (1458621066, 3)
[2025-07-07 22:05:02,772 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 22:05:02,776 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000182591.5  ENSG00000135443.8   0.404785  0.952148  0.771484
ENSG00000161634.11 ENSG00000135443.8   0.049133  0.145020  0.277588
                   ENSG00000182591.5   0.046173  0.163574  0.318848
ENSG00000204897.6  ENSG00000135443.8   0.491943  0.854980  0.826172
                   ENSG00000182591.5   0.372559  0.814453  0.749023
                   ENSG00000161634.11  0.046173  0.152344  0.305176
ENSG00000212901.3  ENSG00000135443.8   0.309326  0.711426  0.739746
                   ENSG00000182591.5   0.346191  0.799805  0.763184
                   ENSG00000161634.11  0.061768  0.198120  0.327637
                   ENSG00000204897.6   0.323242  0.680176  0.732910
ENSG00000129824.15 ENSG00000135443.8   0.011436  0.102478  0.093262
                   ENSG00000182591.5   0.007187  0.090576  0.009903
                   ENSG00000161634.11  0.010452  0.131958  0.114441
                   ENSG00000204897.6   0.007137  0.085022  0.081970
                   ENSG00000212901.3   0.009026  0.058594  0.075012
[2025-07-07 22:05:02,776 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 22:09:56,708 - __main__] INFO: 
                ccc       pearson      spearman
count  1.458621e+09  1.458621e+09  1.458621e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    6.592274e-05  1.623535e-02  1.855469e-02
50%    2.235413e-03  3.710938e-02  4.150391e-02
75%    9.178162e-03  8.044434e-02  8.264160e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 22:11:36,905 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 22:11:36,908 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000018  0.012909  0.014709
0.242105  0.000053  0.015701  0.017929
0.284211  0.000124  0.018631  0.021271
0.326316  0.000257  0.021713  0.024765
0.368421  0.000494  0.024994  0.028458
0.410526  0.000880  0.028519  0.032349
0.452632  0.001433  0.032349  0.036469
0.494737  0.002140  0.036530  0.040924
0.536842  0.002953  0.041229  0.045776
0.578947  0.003845  0.046509  0.051086
0.621053  0.004814  0.052612  0.057007
0.663158  0.005920  0.059875  0.063721
0.705263  0.007263  0.068665  0.071594
0.747368  0.009041  0.079712  0.081909
0.789474  0.011543  0.094055  0.095398
0.831579  0.015396  0.113586  0.114868
0.873684  0.021545  0.141968  0.144653
0.915789  0.031433  0.187012  0.193481
0.957895  0.052155  0.271973  0.282959
1.000000  1.000000  1.000000  1.000000
[2025-07-07 22:11:58,127 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 22:11:58,128 - __main__] INFO: 0.2    0.000018
0.8    0.012436
Name: ccc, dtype: float64
[2025-07-07 22:11:58,128 - __main__] INFO: CCC lower quantile: 1.7881393432617188e-05, upper quantile: 0.0124359130859375
[2025-07-07 22:12:16,327 - __main__] INFO: Clustermatch quantiles: lower=0.00016450881958007812, upper=0.007068634033203125
[2025-07-07 22:12:39,386 - __main__] INFO: Pearson quantiles: lower=0.0197601318359375, upper=0.06744384765625
[2025-07-07 22:13:01,591 - __main__] INFO: Spearman quantiles: lower=0.0225677490234375, upper=0.07049560546875
[2025-07-07 22:13:06,182 - __main__] INFO: Pearson higher count: 437841489
[2025-07-07 22:13:09,461 - __main__] INFO: Pearson lower count: 437589472
[2025-07-07 22:13:13,377 - __main__] INFO: Spearman higher count: 437724943
[2025-07-07 22:13:16,670 - __main__] INFO: Spearman lower count: 437739836
[2025-07-07 22:13:21,292 - __main__] INFO: Clustermatch higher count: 437636904
[2025-07-07 22:13:24,580 - __main__] INFO: Clustermatch lower count: 437613929
[2025-07-07 22:13:29,364 - __main__] INFO: Plot dataframe shape: (1458621066, 9)
[2025-07-07 22:13:29,364 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 22:13:38,961 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 22:13:38,961 - __main__] INFO: Data shape for upset plot: (1458621066, 9)
[2025-07-07 22:22:42,061 - __main__] INFO: Gene pairs by categories shape: (1458621066, 9)
[2025-07-07 22:22:42,062 - __main__] INFO: First few entries:
[2025-07-07 22:22:42,070 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.771484
                                                                               True                           True  ...  0.277588
                                                                               True                           True  ...  0.318848
                                                                               True                           True  ...  0.826172
                                                                               True                           True  ...  0.749023

[5 rows x 9 columns]
[2025-07-07 22:22:42,070 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 22:24:48,846 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_skin_not_sun_exposed_suprapubic_full.svg
[2025-07-07 22:24:48,846 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_220450/upsetplot_gtex_skin_not_sun_exposed_suprapubic_full.svg
[2025-07-07 22:24:48,846 - __main__] INFO: Data shape for trimmed plot: (1458621066, 9)
[2025-07-07 22:29:04,688 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 22:29:04,688 - __main__] INFO: Shape: (1458621066, 9)
[2025-07-07 22:32:39,126 - __main__] INFO: Unique index combinations:
[2025-07-07 22:32:39,133 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 22:32:39,133 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 22:32:39,137 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 22:32:39,138 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 22:32:39,140 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 22:32:39,143 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 22:32:39,145 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 22:45:00,821 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 22:45:00,830 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.771484
                                                                               True                           True  ...  0.277588
                                                                               True                           True  ...  0.318848
                                                                               True                           True  ...  0.826172
                                                                               True                           True  ...  0.749023

[5 rows x 9 columns]
[2025-07-07 22:45:03,000 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 22:46:18,079 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_skin_not_sun_exposed_suprapubic_trimmed.svg
[2025-07-07 22:46:18,079 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_220450/upsetplot_gtex_skin_not_sun_exposed_suprapubic_trimmed.svg
[2025-07-07 22:46:18,079 - __main__] INFO: Final dataframe shape: (1458621066, 9)
[2025-07-07 22:46:18,079 - __main__] INFO: Final dataframe head:
[2025-07-07 22:46:18,085 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000182591.5  ENSG00000135443.8            True  ...  0.771484
ENSG00000161634.11 ENSG00000135443.8            True  ...  0.277588
                   ENSG00000182591.5            True  ...  0.318848
ENSG00000204897.6  ENSG00000135443.8            True  ...  0.826172
                   ENSG00000182591.5            True  ...  0.749023

[5 rows x 9 columns]
[2025-07-07 22:46:18,085 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-skin_not_sun_exposed_suprapubic-var_pc_log2.pkl
[2025-07-07 22:46:18,085 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 22:46:22,761 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-skin_not_sun_exposed_suprapubic-var_pc_log2.pkl
[2025-07-07 22:46:22,761 - __main__] INFO: Script completed successfully!
[2025-07-07 22:46:22,761 - __main__] INFO: All outputs saved to log directory: logs/20250707_220450
[2025-07-07 22:46:28,878 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_224628
[2025-07-07 22:46:28,878 - __main__] INFO: Log directory: logs/20250707_224628
[2025-07-07 22:46:28,878 - __main__] INFO: Configuration:
[2025-07-07 22:46:28,878 - __main__] INFO:   GTEX_TISSUE: skin_sun_exposed_lower_leg
[2025-07-07 22:46:28,878 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 22:46:28,878 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 22:46:28,878 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 22:46:28,878 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 22:46:28,878 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 22:46:28,878 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_skin_sun_exposed_lower_leg-var_pc_log2-all.pkl
[2025-07-07 22:46:28,878 - __main__] INFO: Loading correlation data...
[2025-07-07 22:46:41,390 - __main__] INFO: Dataframe shape: (1473566328, 3)
[2025-07-07 22:46:41,390 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 22:46:41,394 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000135443.8  ENSG00000129824.15  0.006390  0.080017  0.026352
ENSG00000134184.12 ENSG00000129824.15  0.004036  0.092590  0.048462
                   ENSG00000135443.8   0.003033  0.036377  0.095459
ENSG00000204897.6  ENSG00000129824.15  0.005283  0.059509  0.026657
                   ENSG00000135443.8   0.430420  0.884766  0.828125
                   ENSG00000134184.12  0.001339  0.022171  0.060455
ENSG00000224114.1  ENSG00000129824.15  0.004879  0.033813  0.067993
                   ENSG00000135443.8   0.006298  0.012466  0.067078
                   ENSG00000134184.12  0.004341  0.024368  0.035675
                   ENSG00000204897.6   0.005177  0.026718  0.064636
ENSG00000102891.3  ENSG00000129824.15  0.005665  0.095886  0.093750
                   ENSG00000135443.8   0.019516  0.246704  0.138184
                   ENSG00000134184.12  0.010376  0.180786  0.109863
                   ENSG00000204897.6   0.018524  0.228149  0.153931
                   ENSG00000224114.1   0.001827  0.038452  0.004040
[2025-07-07 22:46:41,395 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 22:51:41,640 - __main__] INFO: 
                ccc       pearson      spearman
count  1.473566e+09  1.473566e+09  1.473566e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    5.239248e-05  1.509857e-02  1.733398e-02
50%    1.960754e-03  3.494263e-02  3.887939e-02
75%    8.300781e-03  7.733154e-02  7.781982e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 22:53:21,390 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 22:53:21,393 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000014  0.011971  0.013741
0.242105  0.000044  0.014595  0.016754
0.284211  0.000104  0.017349  0.019882
0.326316  0.000217  0.020264  0.023163
0.368421  0.000422  0.023376  0.026611
0.410526  0.000759  0.026718  0.030258
0.452632  0.001247  0.030380  0.034149
0.494737  0.001873  0.034393  0.038330
0.536842  0.002604  0.038910  0.042877
0.578947  0.003410  0.044037  0.047852
0.621053  0.004295  0.049957  0.053436
0.663158  0.005287  0.057037  0.059784
0.705263  0.006546  0.065674  0.067322
0.747368  0.008240  0.076538  0.077087
0.789474  0.010651  0.090759  0.090027
0.831579  0.014282  0.110168  0.108704
0.873684  0.019928  0.138550  0.137695
0.915789  0.029404  0.183838  0.185669
0.957895  0.048798  0.269287  0.274170
1.000000  1.000000  1.000000  1.000000
[2025-07-07 22:53:44,043 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 22:53:44,044 - __main__] INFO: 0.2    0.000014
0.8    0.011368
Name: ccc, dtype: float64
[2025-07-07 22:53:44,044 - __main__] INFO: CCC lower quantile: 1.3947486877441406e-05, upper quantile: 0.0113677978515625
[2025-07-07 22:54:04,764 - __main__] INFO: Clustermatch quantiles: lower=0.00013756752014160156, upper=0.00635528564453125
[2025-07-07 22:54:28,624 - __main__] INFO: Pearson quantiles: lower=0.0184173583984375, upper=0.06451416015625
[2025-07-07 22:54:49,603 - __main__] INFO: Spearman quantiles: lower=0.0211029052734375, upper=0.0662841796875
[2025-07-07 22:54:54,258 - __main__] INFO: Pearson higher count: 442105772
[2025-07-07 22:54:57,574 - __main__] INFO: Pearson lower count: 442214102
[2025-07-07 22:55:01,301 - __main__] INFO: Spearman higher count: 442253593
[2025-07-07 22:55:04,635 - __main__] INFO: Spearman lower count: 442372573
[2025-07-07 22:55:09,339 - __main__] INFO: Clustermatch higher count: 442212362
[2025-07-07 22:55:12,676 - __main__] INFO: Clustermatch lower count: 442098250
[2025-07-07 22:55:17,646 - __main__] INFO: Plot dataframe shape: (1473566328, 9)
[2025-07-07 22:55:17,646 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 22:55:27,364 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 22:55:27,364 - __main__] INFO: Data shape for upset plot: (1473566328, 9)
[2025-07-07 23:04:23,257 - __main__] INFO: Gene pairs by categories shape: (1473566328, 9)
[2025-07-07 23:04:23,257 - __main__] INFO: First few entries:
[2025-07-07 23:04:23,266 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              False           True           True                           True  ...  0.026352
                                                                               False                          True  ...  0.048462
                                                True            False          False                         False  ...  0.095459
                                                False           False          False                         False  ...  0.026657
                                                True            True           True                           True  ...  0.828125

[5 rows x 9 columns]
[2025-07-07 23:04:23,266 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 23:06:30,750 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_skin_sun_exposed_lower_leg_full.svg
[2025-07-07 23:06:30,751 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_224628/upsetplot_gtex_skin_sun_exposed_lower_leg_full.svg
[2025-07-07 23:06:30,751 - __main__] INFO: Data shape for trimmed plot: (1473566328, 9)
[2025-07-07 23:10:36,896 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 23:10:36,896 - __main__] INFO: Shape: (1473566328, 9)
[2025-07-07 23:14:14,040 - __main__] INFO: Unique index combinations:
[2025-07-07 23:14:14,046 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 23:14:14,047 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 23:14:14,050 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 23:14:14,051 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 23:14:14,054 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 23:14:14,056 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 23:14:14,059 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-07 23:26:50,953 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-07 23:26:50,962 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.828125
                                                                               True                           True  ...  0.138184
                                                                               True                           True  ...  0.109863
                                                                               True                           True  ...  0.153931
                                                                               True                           True  ...  0.161499

[5 rows x 9 columns]
[2025-07-07 23:26:52,547 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 23:28:07,802 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_skin_sun_exposed_lower_leg_trimmed.svg
[2025-07-07 23:28:07,802 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_224628/upsetplot_gtex_skin_sun_exposed_lower_leg_trimmed.svg
[2025-07-07 23:28:07,802 - __main__] INFO: Final dataframe shape: (1473566328, 9)
[2025-07-07 23:28:07,802 - __main__] INFO: Final dataframe head:
[2025-07-07 23:28:07,808 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000135443.8  ENSG00000129824.15            True  ...  0.026352
ENSG00000134184.12 ENSG00000129824.15            True  ...  0.048462
                   ENSG00000135443.8            False  ...  0.095459
ENSG00000204897.6  ENSG00000129824.15           False  ...  0.026657
                   ENSG00000135443.8             True  ...  0.828125

[5 rows x 9 columns]
[2025-07-07 23:28:07,808 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-skin_sun_exposed_lower_leg-var_pc_log2.pkl
[2025-07-07 23:28:07,808 - __main__] INFO: Saving gene pair intersections data...
[2025-07-07 23:28:12,533 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-skin_sun_exposed_lower_leg-var_pc_log2.pkl
[2025-07-07 23:28:12,533 - __main__] INFO: Script completed successfully!
[2025-07-07 23:28:12,533 - __main__] INFO: All outputs saved to log directory: logs/20250707_224628
[2025-07-07 23:28:18,740 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250707_232818
[2025-07-07 23:28:18,740 - __main__] INFO: Log directory: logs/20250707_232818
[2025-07-07 23:28:18,740 - __main__] INFO: Configuration:
[2025-07-07 23:28:18,740 - __main__] INFO:   GTEX_TISSUE: small_intestine_terminal_ileum
[2025-07-07 23:28:18,740 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-07 23:28:18,740 - __main__] INFO:   TOP_N_GENES: all
[2025-07-07 23:28:18,740 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-07 23:28:18,740 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-07 23:28:18,740 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-07 23:28:18,740 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_small_intestine_terminal_ileum-var_pc_log2-all.pkl
[2025-07-07 23:28:18,740 - __main__] INFO: Loading correlation data...
[2025-07-07 23:28:30,117 - __main__] INFO: Dataframe shape: (1353014190, 3)
[2025-07-07 23:28:30,118 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-07 23:28:30,122 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000172023.7  ENSG00000110244.6   0.254150  0.176758  0.531738
ENSG00000160868.14 ENSG00000110244.6   0.721680  0.773926  0.936523
                   ENSG00000172023.7   0.181763  0.098572  0.480225
ENSG00000110245.11 ENSG00000110244.6   0.916016  0.834473  0.956055
                   ENSG00000172023.7   0.232666  0.061829  0.463623
                   ENSG00000160868.14  0.758301  0.769531  0.944824
ENSG00000118137.9  ENSG00000110244.6   0.796387  0.786621  0.936523
                   ENSG00000172023.7   0.156372  0.030853  0.419678
                   ENSG00000160868.14  0.650391  0.823242  0.937012
                   ENSG00000110245.11  0.758301  0.700684  0.945312
ENSG00000129824.15 ENSG00000110244.6   0.203613  0.339355  0.407959
                   ENSG00000172023.7   0.156860  0.181885  0.381836
                   ENSG00000160868.14  0.201172  0.327148  0.386475
                   ENSG00000110245.11  0.203613  0.299561  0.350098
                   ENSG00000118137.9   0.166382  0.311768  0.345215
[2025-07-07 23:28:30,122 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-07 23:32:18,688 - __main__] INFO: 
                ccc       pearson      spearman
count  1.353014e+09  1.353014e+09  1.353014e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    3.709793e-04  3.326416e-02  3.747559e-02
50%    8.529663e-03  7.702637e-02  8.520508e-02
75%    3.634644e-02  1.802979e-01  1.812744e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-07 23:33:49,148 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-07 23:33:49,151 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000116  0.026520  0.029739
0.242105  0.000338  0.032166  0.036224
0.284211  0.000647  0.038116  0.043030
0.326316  0.001248  0.044403  0.050232
0.368421  0.002209  0.051147  0.057800
0.410526  0.003654  0.058502  0.065918
0.452632  0.005638  0.066650  0.074585
0.494737  0.008186  0.075806  0.083984
0.536842  0.011131  0.086304  0.094177
0.578947  0.014503  0.098633  0.105530
0.621053  0.018311  0.113220  0.118164
0.663158  0.022659  0.130737  0.133423
0.705263  0.028412  0.152100  0.153442
0.747368  0.035706  0.178467  0.179321
0.789474  0.046173  0.211426  0.214722
0.831579  0.060150  0.253906  0.263672
0.873684  0.081787  0.310791  0.331299
0.915789  0.122437  0.391113  0.426514
0.957895  0.196289  0.514648  0.563965
1.000000  1.000000  1.000000  1.000000
[2025-07-07 23:34:07,904 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-07 23:34:07,905 - __main__] INFO: 0.2    0.000116
0.8    0.048584
Name: ccc, dtype: float64
[2025-07-07 23:34:07,905 - __main__] INFO: CCC lower quantile: 0.00011581182479858398, upper quantile: 0.048583984375
[2025-07-07 23:34:26,172 - __main__] INFO: Clustermatch quantiles: lower=0.000850677490234375, upper=0.0275421142578125
[2025-07-07 23:34:43,716 - __main__] INFO: Pearson quantiles: lower=0.040435791015625, upper=0.149169921875
[2025-07-07 23:35:02,941 - __main__] INFO: Spearman quantiles: lower=0.045654296875, upper=0.150634765625
[2025-07-07 23:35:07,202 - __main__] INFO: Pearson higher count: 406166807
[2025-07-07 23:35:10,246 - __main__] INFO: Pearson lower count: 406103919
[2025-07-07 23:35:14,033 - __main__] INFO: Spearman higher count: 406206280
[2025-07-07 23:35:17,088 - __main__] INFO: Spearman lower count: 405994864
[2025-07-07 23:35:21,369 - __main__] INFO: Clustermatch higher count: 405962135
[2025-07-07 23:35:24,423 - __main__] INFO: Clustermatch lower count: 406010120
[2025-07-07 23:35:28,708 - __main__] INFO: Plot dataframe shape: (1353014190, 9)
[2025-07-07 23:35:28,709 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-07 23:35:37,615 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-07 23:35:37,616 - __main__] INFO: Data shape for upset plot: (1353014190, 9)
[2025-07-07 23:43:42,527 - __main__] INFO: Gene pairs by categories shape: (1353014190, 9)
[2025-07-07 23:43:42,527 - __main__] INFO: First few entries:
[2025-07-07 23:43:42,535 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.531738
                                                                               True                           True  ...  0.936523
                                                                False          True                          False  ...  0.480225
                                                                True           True                           True  ...  0.956055
                                                                False          True                          False  ...  0.463623

[5 rows x 9 columns]
[2025-07-07 23:43:42,535 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-07 23:45:41,233 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_small_intestine_terminal_ileum_full.svg
[2025-07-07 23:45:41,233 - __main__] INFO: Copied full upset plot to log directory: logs/20250707_232818/upsetplot_gtex_small_intestine_terminal_ileum_full.svg
[2025-07-07 23:45:41,233 - __main__] INFO: Data shape for trimmed plot: (1353014190, 9)
[2025-07-07 23:49:18,602 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-07 23:49:18,603 - __main__] INFO: Shape: (1353014190, 9)
[2025-07-07 23:52:36,048 - __main__] INFO: Unique index combinations:
[2025-07-07 23:52:36,055 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-07 23:52:36,055 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-07 23:52:36,059 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-07 23:52:36,060 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-07 23:52:36,062 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-07 23:52:36,065 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-07 23:52:36,067 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-08 00:04:09,868 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-08 00:04:09,877 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.531738
                                                                               True                           True  ...  0.936523
                                                                               True                           True  ...  0.956055
                                                                               True                           True  ...  0.944824
                                                                               True                           True  ...  0.936523

[5 rows x 9 columns]
[2025-07-08 00:04:11,355 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 00:05:21,091 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_small_intestine_terminal_ileum_trimmed.svg
[2025-07-08 00:05:21,092 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250707_232818/upsetplot_gtex_small_intestine_terminal_ileum_trimmed.svg
[2025-07-08 00:05:21,092 - __main__] INFO: Final dataframe shape: (1353014190, 9)
[2025-07-08 00:05:21,092 - __main__] INFO: Final dataframe head:
[2025-07-08 00:05:21,098 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000172023.7  ENSG00000110244.6            True  ...  0.531738
ENSG00000160868.14 ENSG00000110244.6            True  ...  0.936523
                   ENSG00000172023.7           False  ...  0.480225
ENSG00000110245.11 ENSG00000110244.6            True  ...  0.956055
                   ENSG00000172023.7           False  ...  0.463623

[5 rows x 9 columns]
[2025-07-08 00:05:21,098 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-small_intestine_terminal_ileum-var_pc_log2.pkl
[2025-07-08 00:05:21,098 - __main__] INFO: Saving gene pair intersections data...
[2025-07-08 00:05:25,412 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-small_intestine_terminal_ileum-var_pc_log2.pkl
[2025-07-08 00:05:25,412 - __main__] INFO: Script completed successfully!
[2025-07-08 00:05:25,412 - __main__] INFO: All outputs saved to log directory: logs/20250707_232818
[2025-07-08 00:05:31,414 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250708_000531
[2025-07-08 00:05:31,414 - __main__] INFO: Log directory: logs/20250708_000531
[2025-07-08 00:05:31,414 - __main__] INFO: Configuration:
[2025-07-08 00:05:31,414 - __main__] INFO:   GTEX_TISSUE: spleen
[2025-07-08 00:05:31,414 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-08 00:05:31,414 - __main__] INFO:   TOP_N_GENES: all
[2025-07-08 00:05:31,414 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-08 00:05:31,414 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-08 00:05:31,414 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-08 00:05:31,414 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_spleen-var_pc_log2-all.pkl
[2025-07-08 00:05:31,414 - __main__] INFO: Loading correlation data...
[2025-07-08 00:05:42,745 - __main__] INFO: Dataframe shape: (1367095905, 3)
[2025-07-08 00:05:42,745 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-08 00:05:42,749 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000012817.15 ENSG00000129824.15  0.459717  0.861328  0.762695
ENSG00000134184.12 ENSG00000129824.15  0.012436  0.023697  0.001091
                   ENSG00000012817.15  0.015572  0.028427  0.038422
ENSG00000067048.16 ENSG00000129824.15  0.489502  0.883301  0.849121
                   ENSG00000012817.15  0.579590  0.906250  0.885742
                   ENSG00000134184.12  0.015244  0.069702  0.049347
ENSG00000239839.6  ENSG00000129824.15  0.012192  0.019775  0.004314
                   ENSG00000012817.15  0.007988  0.004768  0.004425
                   ENSG00000134184.12  0.021454  0.093506  0.108765
                   ENSG00000067048.16  0.007111  0.020142  0.005585
ENSG00000223609.7  ENSG00000129824.15  0.015945  0.190063  0.060608
                   ENSG00000012817.15  0.017365  0.161255  0.068848
                   ENSG00000134184.12  0.017303  0.061340  0.065857
                   ENSG00000067048.16  0.026062  0.224365  0.063904
                   ENSG00000239839.6   0.086365  0.189941  0.426025
[2025-07-08 00:05:42,749 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-08 00:09:52,259 - __main__] INFO: 
                ccc       pearson      spearman
count  1.367096e+09  1.367096e+09  1.367096e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.693964e-04  2.511597e-02  2.763367e-02
50%    4.577637e-03  5.731201e-02  6.127930e-02
75%    1.799011e-02  1.271973e-01  1.173096e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-08 00:11:27,394 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-08 00:11:27,398 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000065  0.020020  0.022003
0.242105  0.000137  0.024307  0.026779
0.284211  0.000294  0.028778  0.031677
0.326316  0.000593  0.033539  0.036835
0.368421  0.001063  0.038574  0.042236
0.410526  0.001817  0.044006  0.047943
0.452632  0.002924  0.049927  0.053986
0.494737  0.004368  0.056427  0.060425
0.536842  0.006107  0.063782  0.067444
0.578947  0.008018  0.072144  0.075012
0.621053  0.010094  0.081909  0.083374
0.663158  0.012314  0.093567  0.092712
0.705263  0.014725  0.107910  0.103333
0.747368  0.017761  0.125977  0.116333
0.789474  0.021606  0.149170  0.134155
0.831579  0.026978  0.180298  0.159058
0.873684  0.035706  0.223999  0.197876
0.915789  0.050507  0.291016  0.261230
0.957895  0.080322  0.406738  0.370850
1.000000  1.000000  1.000000  1.000000
[2025-07-08 00:11:46,485 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-08 00:11:46,486 - __main__] INFO: 0.2    0.000065
0.8    0.022751
Name: ccc, dtype: float64
[2025-07-08 00:11:46,486 - __main__] INFO: CCC lower quantile: 6.538629531860352e-05, upper quantile: 0.0227508544921875
[2025-07-08 00:12:06,303 - __main__] INFO: Clustermatch quantiles: lower=0.00039315223693847656, upper=0.01453399658203125
[2025-07-08 00:12:26,990 - __main__] INFO: Pearson quantiles: lower=0.0305328369140625, upper=0.10595703125
[2025-07-08 00:12:47,798 - __main__] INFO: Spearman quantiles: lower=0.033538818359375, upper=0.1019287109375
[2025-07-08 00:12:52,121 - __main__] INFO: Pearson higher count: 410260048
[2025-07-08 00:12:55,192 - __main__] INFO: Pearson lower count: 410240470
[2025-07-08 00:12:59,310 - __main__] INFO: Spearman higher count: 410364573
[2025-07-08 00:13:02,399 - __main__] INFO: Spearman lower count: 410152290
[2025-07-08 00:13:06,744 - __main__] INFO: Clustermatch higher count: 410175304
[2025-07-08 00:13:09,829 - __main__] INFO: Clustermatch lower count: 410529320
[2025-07-08 00:13:14,247 - __main__] INFO: Plot dataframe shape: (1367095905, 9)
[2025-07-08 00:13:14,247 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-08 00:13:23,263 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-08 00:13:23,263 - __main__] INFO: Data shape for upset plot: (1367095905, 9)
[2025-07-08 00:22:05,404 - __main__] INFO: Gene pairs by categories shape: (1367095905, 9)
[2025-07-08 00:22:05,404 - __main__] INFO: First few entries:
[2025-07-08 00:22:05,413 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.762695
True           True          False              False           False          False                         False  ...  0.001091
False          True          False              False           False          True                          False  ...  0.038422
               False         False              True            True           True                           True  ...  0.849121
                                                                               True                           True  ...  0.885742

[5 rows x 9 columns]
[2025-07-08 00:22:05,413 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 00:24:04,880 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_spleen_full.svg
[2025-07-08 00:24:04,880 - __main__] INFO: Copied full upset plot to log directory: logs/20250708_000531/upsetplot_gtex_spleen_full.svg
[2025-07-08 00:24:04,880 - __main__] INFO: Data shape for trimmed plot: (1367095905, 9)
[2025-07-08 00:27:51,534 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-08 00:27:51,535 - __main__] INFO: Shape: (1367095905, 9)
[2025-07-08 00:31:13,315 - __main__] INFO: Unique index combinations:
[2025-07-08 00:31:13,322 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-08 00:31:13,322 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-08 00:31:13,326 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-08 00:31:13,327 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-08 00:31:13,329 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-08 00:31:13,332 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-08 00:31:13,334 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-08 00:43:38,648 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-08 00:43:38,657 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.762695
                                                                               True                           True  ...  0.849121
                                                                               True                           True  ...  0.885742
                                                                               True                           True  ...  0.426025
                                                                               True                           True  ...  0.115662

[5 rows x 9 columns]
[2025-07-08 00:43:40,220 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 00:44:49,739 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_spleen_trimmed.svg
[2025-07-08 00:44:49,739 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250708_000531/upsetplot_gtex_spleen_trimmed.svg
[2025-07-08 00:44:49,739 - __main__] INFO: Final dataframe shape: (1367095905, 9)
[2025-07-08 00:44:49,739 - __main__] INFO: Final dataframe head:
[2025-07-08 00:44:49,745 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000012817.15 ENSG00000129824.15            True  ...  0.762695
ENSG00000134184.12 ENSG00000129824.15           False  ...  0.001091
                   ENSG00000012817.15           False  ...  0.038422
ENSG00000067048.16 ENSG00000129824.15            True  ...  0.849121
                   ENSG00000012817.15            True  ...  0.885742

[5 rows x 9 columns]
[2025-07-08 00:44:49,745 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-spleen-var_pc_log2.pkl
[2025-07-08 00:44:49,745 - __main__] INFO: Saving gene pair intersections data...
[2025-07-08 00:44:54,157 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-spleen-var_pc_log2.pkl
[2025-07-08 00:44:54,157 - __main__] INFO: Script completed successfully!
[2025-07-08 00:44:54,157 - __main__] INFO: All outputs saved to log directory: logs/20250708_000531
[2025-07-08 00:45:00,208 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250708_004500
[2025-07-08 00:45:00,208 - __main__] INFO: Log directory: logs/20250708_004500
[2025-07-08 00:45:00,208 - __main__] INFO: Configuration:
[2025-07-08 00:45:00,208 - __main__] INFO:   GTEX_TISSUE: stomach
[2025-07-08 00:45:00,208 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-08 00:45:00,208 - __main__] INFO:   TOP_N_GENES: all
[2025-07-08 00:45:00,208 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-08 00:45:00,208 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-08 00:45:00,208 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-08 00:45:00,208 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_stomach-var_pc_log2-all.pkl
[2025-07-08 00:45:00,208 - __main__] INFO: Loading correlation data...
[2025-07-08 00:45:11,602 - __main__] INFO: Dataframe shape: (1402248403, 3)
[2025-07-08 00:45:11,602 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-08 00:45:11,606 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000096088.16 ENSG00000182333.14  0.568848  0.813965  0.910645
ENSG00000229859.9  ENSG00000182333.14  0.396729  0.601562  0.785645
                   ENSG00000096088.16  0.386475  0.668945  0.779785
ENSG00000256713.7  ENSG00000182333.14  0.471924  0.656738  0.848633
                   ENSG00000096088.16  0.519043  0.727539  0.879395
                   ENSG00000229859.9   0.395508  0.490967  0.760742
ENSG00000169605.5  ENSG00000182333.14  0.155762  0.060211  0.383057
                   ENSG00000096088.16  0.161499  0.040192  0.344727
                   ENSG00000229859.9   0.142822  0.048187  0.423096
                   ENSG00000256713.7   0.147095  0.023056  0.355225
ENSG00000186009.4  ENSG00000182333.14  0.312500  0.435547  0.636230
                   ENSG00000096088.16  0.288086  0.351318  0.567383
                   ENSG00000229859.9   0.284180  0.385254  0.636719
                   ENSG00000256713.7   0.280762  0.327637  0.616211
                   ENSG00000169605.5   0.281006  0.388428  0.638672
[2025-07-08 00:45:11,606 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-08 00:49:25,619 - __main__] INFO: 
                ccc       pearson      spearman
count  1.402248e+09  1.402248e+09  1.402248e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    8.541346e-05  2.253723e-02  2.645874e-02
50%    3.801346e-03  5.346680e-02  6.127930e-02
75%    2.244568e-02  1.315918e-01  1.372070e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-08 00:51:01,052 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-08 00:51:01,057 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000031  0.017914  0.020905
0.242105  0.000072  0.021790  0.025558
0.284211  0.000172  0.025894  0.030441
0.326316  0.000371  0.030273  0.035645
0.368421  0.000721  0.035004  0.041138
0.410526  0.001334  0.040192  0.047058
0.452632  0.002281  0.045990  0.053436
0.494737  0.003609  0.052582  0.060364
0.536842  0.005306  0.060181  0.068054
0.578947  0.007339  0.069153  0.076599
0.621053  0.009743  0.079956  0.086365
0.663158  0.012718  0.093079  0.098511
0.705263  0.016617  0.109436  0.114319
0.747368  0.021957  0.130127  0.135620
0.789474  0.029724  0.157104  0.165894
0.831579  0.041016  0.193970  0.210449
0.873684  0.059998  0.247559  0.276367
0.915789  0.093079  0.331299  0.374268
0.957895  0.165771  0.474609  0.522461
1.000000  1.000000  1.000000  1.000000
[2025-07-08 00:51:17,270 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-08 00:51:17,271 - __main__] INFO: 0.2    0.000031
0.8    0.032135
Name: ccc, dtype: float64
[2025-07-08 00:51:17,272 - __main__] INFO: CCC lower quantile: 3.1113624572753906e-05, upper quantile: 0.032135009765625
[2025-07-08 00:51:32,522 - __main__] INFO: Clustermatch quantiles: lower=0.00023126602172851562, upper=0.0160064697265625
[2025-07-08 00:51:51,335 - __main__] INFO: Pearson quantiles: lower=0.027496337890625, upper=0.107177734375
[2025-07-08 00:52:12,084 - __main__] INFO: Spearman quantiles: lower=0.032379150390625, upper=0.11212158203125
[2025-07-08 00:52:16,497 - __main__] INFO: Pearson higher count: 420787255
[2025-07-08 00:52:19,654 - __main__] INFO: Pearson lower count: 420697056
[2025-07-08 00:52:23,700 - __main__] INFO: Spearman higher count: 420683371
[2025-07-08 00:52:26,871 - __main__] INFO: Spearman lower count: 421011510
[2025-07-08 00:52:31,306 - __main__] INFO: Clustermatch higher count: 420751545
[2025-07-08 00:52:34,469 - __main__] INFO: Clustermatch lower count: 420691940
[2025-07-08 00:52:39,099 - __main__] INFO: Plot dataframe shape: (1402248403, 9)
[2025-07-08 00:52:39,099 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-08 00:52:48,328 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-08 00:52:48,328 - __main__] INFO: Data shape for upset plot: (1402248403, 9)
[2025-07-08 01:01:32,754 - __main__] INFO: Gene pairs by categories shape: (1402248403, 9)
[2025-07-08 01:01:32,755 - __main__] INFO: First few entries:
[2025-07-08 01:01:32,763 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.910645
                                                                               True                           True  ...  0.785645
                                                                               True                           True  ...  0.779785
                                                                               True                           True  ...  0.848633
                                                                               True                           True  ...  0.879395

[5 rows x 9 columns]
[2025-07-08 01:01:32,763 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 01:03:35,850 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_stomach_full.svg
[2025-07-08 01:03:35,850 - __main__] INFO: Copied full upset plot to log directory: logs/20250708_004500/upsetplot_gtex_stomach_full.svg
[2025-07-08 01:03:35,850 - __main__] INFO: Data shape for trimmed plot: (1402248403, 9)
[2025-07-08 01:07:30,170 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-08 01:07:30,170 - __main__] INFO: Shape: (1402248403, 9)
[2025-07-08 01:10:55,689 - __main__] INFO: Unique index combinations:
[2025-07-08 01:10:55,695 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-08 01:10:55,696 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-08 01:10:55,699 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-08 01:10:55,700 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-08 01:10:55,703 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-08 01:10:55,705 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-08 01:10:55,708 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-08 01:23:07,876 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-08 01:23:07,885 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.910645
                                                                               True                           True  ...  0.785645
                                                                               True                           True  ...  0.779785
                                                                               True                           True  ...  0.848633
                                                                               True                           True  ...  0.879395

[5 rows x 9 columns]
[2025-07-08 01:23:09,398 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 01:24:21,814 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_stomach_trimmed.svg
[2025-07-08 01:24:21,815 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250708_004500/upsetplot_gtex_stomach_trimmed.svg
[2025-07-08 01:24:21,815 - __main__] INFO: Final dataframe shape: (1402248403, 9)
[2025-07-08 01:24:21,815 - __main__] INFO: Final dataframe head:
[2025-07-08 01:24:21,820 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000096088.16 ENSG00000182333.14            True  ...  0.910645
ENSG00000229859.9  ENSG00000182333.14            True  ...  0.785645
                   ENSG00000096088.16            True  ...  0.779785
ENSG00000256713.7  ENSG00000182333.14            True  ...  0.848633
                   ENSG00000096088.16            True  ...  0.879395

[5 rows x 9 columns]
[2025-07-08 01:24:21,820 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-stomach-var_pc_log2.pkl
[2025-07-08 01:24:21,820 - __main__] INFO: Saving gene pair intersections data...
[2025-07-08 01:24:27,737 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-stomach-var_pc_log2.pkl
[2025-07-08 01:24:27,737 - __main__] INFO: Script completed successfully!
[2025-07-08 01:24:27,737 - __main__] INFO: All outputs saved to log directory: logs/20250708_004500
[2025-07-08 01:24:33,773 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250708_012433
[2025-07-08 01:24:33,773 - __main__] INFO: Log directory: logs/20250708_012433
[2025-07-08 01:24:33,773 - __main__] INFO: Configuration:
[2025-07-08 01:24:33,773 - __main__] INFO:   GTEX_TISSUE: testis
[2025-07-08 01:24:33,773 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-08 01:24:33,773 - __main__] INFO:   TOP_N_GENES: all
[2025-07-08 01:24:33,773 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-08 01:24:33,773 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-08 01:24:33,773 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-08 01:24:33,773 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_testis-var_pc_log2-all.pkl
[2025-07-08 01:24:33,773 - __main__] INFO: Loading correlation data...
[2025-07-08 01:24:45,136 - __main__] INFO: Dataframe shape: (1502917725, 3)
[2025-07-08 01:24:45,136 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-08 01:24:45,141 - __main__] INFO: 
                                           ccc   pearson  spearman
ENSG00000152086.8 ENSG00000134184.12  0.009995  0.088074  0.095886
ENSG00000244734.3 ENSG00000134184.12  0.004284  0.076172  0.019699
                  ENSG00000152086.8   0.014351  0.096375  0.035950
ENSG00000225972.1 ENSG00000134184.12  0.012016  0.168579  0.105530
                  ENSG00000152086.8   0.014214  0.025253  0.118286
                  ENSG00000244734.3   0.009972  0.044464  0.063904
ENSG00000224114.1 ENSG00000134184.12  0.014053  0.089417  0.036560
                  ENSG00000152086.8   0.001136  0.001706  0.023514
                  ENSG00000244734.3   0.009659  0.031204  0.009415
                  ENSG00000225972.1   0.014961  0.023087  0.093018
ENSG00000226454.1 ENSG00000134184.12  0.022903  0.113708  0.100830
                  ENSG00000152086.8   0.029419  0.138672  0.102295
                  ENSG00000244734.3   0.007702  0.107971  0.015396
                  ENSG00000225972.1   0.008369  0.153687  0.037842
                  ENSG00000224114.1   0.001480  0.063660  0.039429
[2025-07-08 01:24:45,141 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-08 01:29:13,099 - __main__] INFO: 
                ccc       pearson      spearman
count  1.502918e+09  1.502918e+09  1.502918e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    1.460075e-03  2.972412e-02  3.096008e-02
50%    7.881165e-03  6.909180e-02  7.073975e-02
75%    2.137756e-02  1.634521e-01  1.643066e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-08 01:30:56,676 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-08 01:30:56,680 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000692  0.023499  0.024475
0.242105  0.001317  0.028717  0.029922
0.284211  0.002169  0.034149  0.035583
0.326316  0.003185  0.039917  0.041504
0.368421  0.004276  0.046021  0.047760
0.410526  0.005413  0.052673  0.054474
0.452632  0.006565  0.059937  0.061707
0.494737  0.007748  0.068054  0.069702
0.536842  0.008995  0.077271  0.078552
0.578947  0.010414  0.087952  0.088623
0.621053  0.012123  0.100769  0.101013
0.663158  0.014214  0.116455  0.116394
0.705263  0.017120  0.136230  0.136108
0.747368  0.021027  0.161621  0.162354
0.789474  0.027100  0.194702  0.197266
0.831579  0.036011  0.238037  0.243164
0.873684  0.050232  0.295166  0.303223
0.915789  0.075317  0.372070  0.383545
0.957895  0.121704  0.484863  0.497314
1.000000  1.000000  1.000000  1.000000
[2025-07-08 01:31:15,411 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-08 01:31:15,412 - __main__] INFO: 0.2    0.000692
0.8    0.029068
Name: ccc, dtype: float64
[2025-07-08 01:31:15,412 - __main__] INFO: CCC lower quantile: 0.0006923675537109375, upper quantile: 0.0290679931640625
[2025-07-08 01:31:34,866 - __main__] INFO: Clustermatch quantiles: lower=0.0025348663330078125, upper=0.016632080078125
[2025-07-08 01:31:58,027 - __main__] INFO: Pearson quantiles: lower=0.036285400390625, upper=0.1334228515625
[2025-07-08 01:32:19,801 - __main__] INFO: Spearman quantiles: lower=0.037750244140625, upper=0.1334228515625
[2025-07-08 01:32:24,538 - __main__] INFO: Pearson higher count: 451199328
[2025-07-08 01:32:27,922 - __main__] INFO: Pearson lower count: 451135508
[2025-07-08 01:32:31,955 - __main__] INFO: Spearman higher count: 450936293
[2025-07-08 01:32:35,350 - __main__] INFO: Spearman lower count: 450924365
[2025-07-08 01:32:40,117 - __main__] INFO: Clustermatch higher count: 451160584
[2025-07-08 01:32:43,513 - __main__] INFO: Clustermatch lower count: 450891150
[2025-07-08 01:32:48,629 - __main__] INFO: Plot dataframe shape: (1502917725, 9)
[2025-07-08 01:32:48,629 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-08 01:32:58,598 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-08 01:32:58,598 - __main__] INFO: Data shape for upset plot: (1502917725, 9)
[2025-07-08 01:42:24,403 - __main__] INFO: Gene pairs by categories shape: (1502917725, 9)
[2025-07-08 01:42:24,403 - __main__] INFO: First few entries:
[2025-07-08 01:42:24,411 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              False           False          False                         False  ...  0.095886
True           False         False              False           False          False                         False  ...  0.019699
                                                                               False                         False  ...  0.035950
False          False         False              False           True           False                          True  ...  0.105530
               True          False              False           False          False                         False  ...  0.118286

[5 rows x 9 columns]
[2025-07-08 01:42:24,411 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 01:44:36,458 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_testis_full.svg
[2025-07-08 01:44:36,459 - __main__] INFO: Copied full upset plot to log directory: logs/20250708_012433/upsetplot_gtex_testis_full.svg
[2025-07-08 01:44:36,459 - __main__] INFO: Data shape for trimmed plot: (1502917725, 9)
[2025-07-08 01:48:56,093 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-08 01:48:56,093 - __main__] INFO: Shape: (1502917725, 9)
[2025-07-08 01:52:35,461 - __main__] INFO: Unique index combinations:
[2025-07-08 01:52:35,467 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-08 01:52:35,468 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-08 01:52:35,472 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-08 01:52:35,473 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-08 01:52:35,475 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-08 01:52:35,478 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-08 01:52:35,480 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-08 02:04:58,249 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-08 02:04:58,257 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.230957
                                                                               True                           True  ...  0.350586
                                                                               True                           True  ...  0.214233
                                                                               True                           True  ...  0.857910
                                                                               True                           True  ...  0.975586

[5 rows x 9 columns]
[2025-07-08 02:05:00,941 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 02:06:18,467 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_testis_trimmed.svg
[2025-07-08 02:06:18,468 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250708_012433/upsetplot_gtex_testis_trimmed.svg
[2025-07-08 02:06:18,468 - __main__] INFO: Final dataframe shape: (1502917725, 9)
[2025-07-08 02:06:18,468 - __main__] INFO: Final dataframe head:
[2025-07-08 02:06:18,473 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000152086.8 ENSG00000134184.12           False  ...  0.095886
ENSG00000244734.3 ENSG00000134184.12           False  ...  0.019699
                  ENSG00000152086.8            False  ...  0.035950
ENSG00000225972.1 ENSG00000134184.12            True  ...  0.105530
                  ENSG00000152086.8            False  ...  0.118286

[5 rows x 9 columns]
[2025-07-08 02:06:18,474 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-testis-var_pc_log2.pkl
[2025-07-08 02:06:18,474 - __main__] INFO: Saving gene pair intersections data...
[2025-07-08 02:06:23,278 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-testis-var_pc_log2.pkl
[2025-07-08 02:06:23,278 - __main__] INFO: Script completed successfully!
[2025-07-08 02:06:23,278 - __main__] INFO: All outputs saved to log directory: logs/20250708_012433
[2025-07-08 02:06:29,419 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250708_020629
[2025-07-08 02:06:29,419 - __main__] INFO: Log directory: logs/20250708_020629
[2025-07-08 02:06:29,419 - __main__] INFO: Configuration:
[2025-07-08 02:06:29,419 - __main__] INFO:   GTEX_TISSUE: thyroid
[2025-07-08 02:06:29,419 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-08 02:06:29,419 - __main__] INFO:   TOP_N_GENES: all
[2025-07-08 02:06:29,420 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-08 02:06:29,420 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-08 02:06:29,420 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-08 02:06:29,420 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_thyroid-var_pc_log2-all.pkl
[2025-07-08 02:06:29,420 - __main__] INFO: Loading correlation data...
[2025-07-08 02:06:41,770 - __main__] INFO: Dataframe shape: (1472317980, 3)
[2025-07-08 02:06:41,771 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-08 02:06:41,776 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000110680.12 ENSG00000129824.15  0.016464  0.150391  0.169434
ENSG00000211593.2  ENSG00000129824.15  0.025360  0.118042  0.201660
                   ENSG00000110680.12  0.007790  0.053619  0.121094
ENSG00000211896.7  ENSG00000129824.15  0.033997  0.138794  0.219482
                   ENSG00000110680.12  0.008446  0.063477  0.148315
                   ENSG00000211593.2   0.597656  0.871094  0.911133
ENSG00000211596.3  ENSG00000129824.15  0.013077  0.138428  0.200439
                   ENSG00000110680.12  0.014130  0.063477  0.159790
                   ENSG00000211593.2   0.597656  0.852539  0.900879
                   ENSG00000211896.7   0.641602  0.942871  0.946777
ENSG00000211592.8  ENSG00000129824.15  0.023376  0.145142  0.213135
                   ENSG00000110680.12  0.008575  0.063965  0.162476
                   ENSG00000211593.2   0.645996  0.896973  0.929199
                   ENSG00000211896.7   0.726074  0.966309  0.970703
                   ENSG00000211596.3   0.748047  0.967773  0.966797
[2025-07-08 02:06:41,776 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-08 02:11:46,172 - __main__] INFO: 
                ccc       pearson      spearman
count  1.472318e+09  1.472318e+09  1.472318e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    6.604195e-05  1.531982e-02  1.759338e-02
50%    2.149582e-03  3.506470e-02  3.924561e-02
75%    8.659363e-03  7.580566e-02  7.757568e-02
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-08 02:13:26,638 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-08 02:13:26,641 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000019  0.012169  0.013962
0.242105  0.000056  0.014809  0.017014
0.284211  0.000126  0.017578  0.020172
0.326316  0.000255  0.020493  0.023483
0.368421  0.000484  0.023605  0.026947
0.410526  0.000852  0.026947  0.030609
0.452632  0.001380  0.030579  0.034515
0.494737  0.002056  0.034546  0.038696
0.536842  0.002838  0.038971  0.043243
0.578947  0.003689  0.043976  0.048218
0.621053  0.004620  0.049713  0.053772
0.663158  0.005665  0.056519  0.060059
0.705263  0.006931  0.064758  0.067383
0.747368  0.008530  0.075073  0.076904
0.789474  0.010910  0.088562  0.089417
0.831579  0.014351  0.106995  0.107361
0.873684  0.019913  0.134155  0.135376
0.915789  0.029526  0.178223  0.182007
0.957895  0.049835  0.263916  0.269531
1.000000  1.000000  1.000000  1.000000
[2025-07-08 02:13:46,390 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-08 02:13:46,391 - __main__] INFO: 0.2    0.000019
0.8    0.011620
Name: ccc, dtype: float64
[2025-07-08 02:13:46,391 - __main__] INFO: CCC lower quantile: 1.901388168334961e-05, upper quantile: 0.01161956787109375
[2025-07-08 02:14:05,427 - __main__] INFO: Clustermatch quantiles: lower=0.00016415119171142578, upper=0.006744384765625
[2025-07-08 02:14:28,909 - __main__] INFO: Pearson quantiles: lower=0.018646240234375, upper=0.0635986328125
[2025-07-08 02:14:50,337 - __main__] INFO: Spearman quantiles: lower=0.021392822265625, upper=0.06640625
[2025-07-08 02:14:54,966 - __main__] INFO: Pearson higher count: 442072171
[2025-07-08 02:14:58,276 - __main__] INFO: Pearson lower count: 441704705
[2025-07-08 02:15:02,007 - __main__] INFO: Spearman higher count: 442009684
[2025-07-08 02:15:05,333 - __main__] INFO: Spearman lower count: 441774658
[2025-07-08 02:15:09,999 - __main__] INFO: Clustermatch higher count: 441851792
[2025-07-08 02:15:13,323 - __main__] INFO: Clustermatch lower count: 441713384
[2025-07-08 02:15:18,386 - __main__] INFO: Plot dataframe shape: (1472317980, 9)
[2025-07-08 02:15:18,386 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-08 02:15:28,146 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-08 02:15:28,146 - __main__] INFO: Data shape for upset plot: (1472317980, 9)
[2025-07-08 02:24:02,684 - __main__] INFO: Gene pairs by categories shape: (1472317980, 9)
[2025-07-08 02:24:02,685 - __main__] INFO: First few entries:
[2025-07-08 02:24:02,693 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.169434
                                                                               True                           True  ...  0.201660
                                                                False          True                          False  ...  0.121094
                                                                True           True                           True  ...  0.219482
                                                                False          True                          False  ...  0.148315

[5 rows x 9 columns]
[2025-07-08 02:24:02,693 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 02:26:11,185 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_thyroid_full.svg
[2025-07-08 02:26:11,185 - __main__] INFO: Copied full upset plot to log directory: logs/20250708_020629/upsetplot_gtex_thyroid_full.svg
[2025-07-08 02:26:11,185 - __main__] INFO: Data shape for trimmed plot: (1472317980, 9)
[2025-07-08 02:30:15,602 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-08 02:30:15,602 - __main__] INFO: Shape: (1472317980, 9)
[2025-07-08 02:33:51,410 - __main__] INFO: Unique index combinations:
[2025-07-08 02:33:51,417 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-08 02:33:51,417 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-08 02:33:51,421 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-08 02:33:51,422 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-08 02:33:51,424 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-08 02:33:51,427 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-08 02:33:51,429 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-08 02:46:20,395 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-08 02:46:20,404 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.169434
                                                                               True                           True  ...  0.201660
                                                                               True                           True  ...  0.219482
                                                                               True                           True  ...  0.911133
                                                                               True                           True  ...  0.200439

[5 rows x 9 columns]
[2025-07-08 02:46:21,946 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 02:47:36,614 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_thyroid_trimmed.svg
[2025-07-08 02:47:36,614 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250708_020629/upsetplot_gtex_thyroid_trimmed.svg
[2025-07-08 02:47:36,614 - __main__] INFO: Final dataframe shape: (1472317980, 9)
[2025-07-08 02:47:36,614 - __main__] INFO: Final dataframe head:
[2025-07-08 02:47:36,620 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000110680.12 ENSG00000129824.15            True  ...  0.169434
ENSG00000211593.2  ENSG00000129824.15            True  ...  0.201660
                   ENSG00000110680.12           False  ...  0.121094
ENSG00000211896.7  ENSG00000129824.15            True  ...  0.219482
                   ENSG00000110680.12           False  ...  0.148315

[5 rows x 9 columns]
[2025-07-08 02:47:36,620 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-thyroid-var_pc_log2.pkl
[2025-07-08 02:47:36,620 - __main__] INFO: Saving gene pair intersections data...
[2025-07-08 02:47:41,331 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-thyroid-var_pc_log2.pkl
[2025-07-08 02:47:41,331 - __main__] INFO: Script completed successfully!
[2025-07-08 02:47:41,331 - __main__] INFO: All outputs saved to log directory: logs/20250708_020629
[2025-07-08 02:47:47,422 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250708_024747
[2025-07-08 02:47:47,422 - __main__] INFO: Log directory: logs/20250708_024747
[2025-07-08 02:47:47,422 - __main__] INFO: Configuration:
[2025-07-08 02:47:47,422 - __main__] INFO:   GTEX_TISSUE: uterus
[2025-07-08 02:47:47,422 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-08 02:47:47,422 - __main__] INFO:   TOP_N_GENES: all
[2025-07-08 02:47:47,422 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-08 02:47:47,422 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-08 02:47:47,422 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-08 02:47:47,422 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_uterus-var_pc_log2-all.pkl
[2025-07-08 02:47:47,422 - __main__] INFO: Loading correlation data...
[2025-07-08 02:47:58,454 - __main__] INFO: Dataframe shape: (1308289128, 3)
[2025-07-08 02:47:58,455 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-08 02:47:58,459 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000224114.1  ENSG00000134184.12  0.015884  0.011795  0.157227
ENSG00000225972.1  ENSG00000134184.12  0.037811  0.046875  0.164185
                   ENSG00000224114.1   0.022202  0.205688  0.050812
ENSG00000213058.3  ENSG00000134184.12  0.037506  0.016876  0.121155
                   ENSG00000224114.1   0.642090  0.982422  0.843262
                   ENSG00000225972.1   0.023102  0.206665  0.034485
ENSG00000124939.5  ENSG00000134184.12  0.021103  0.044312  0.071960
                   ENSG00000224114.1   0.014687  0.038147  0.074524
                   ENSG00000225972.1   0.008072  0.030243  0.007835
                   ENSG00000213058.3   0.013222  0.047150  0.023621
ENSG00000143839.14 ENSG00000134184.12  0.039978  0.051331  0.178833
                   ENSG00000224114.1   0.006878  0.121826  0.103394
                   ENSG00000225972.1   0.015549  0.016815  0.040833
                   ENSG00000213058.3   0.024704  0.123779  0.012650
                   ENSG00000124939.5   0.127441  0.047516  0.489990
[2025-07-08 02:47:58,459 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-08 02:51:46,501 - __main__] INFO: 
                ccc       pearson      spearman
count  1.308289e+09  1.308289e+09  1.308289e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    3.998280e-04  3.034973e-02  3.436279e-02
50%    7.362366e-03  6.542969e-02  7.446289e-02
75%    2.467346e-02  1.269531e-01  1.346436e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-08 02:53:17,252 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-08 02:53:17,256 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000135  0.024460  0.027573
0.242105  0.000348  0.029404  0.033264
0.284211  0.000663  0.034546  0.039276
0.326316  0.001200  0.039856  0.045410
0.368421  0.002028  0.045471  0.051910
0.410526  0.003281  0.051392  0.058655
0.452632  0.004959  0.057709  0.065857
0.494737  0.007057  0.064514  0.073364
0.536842  0.009422  0.071899  0.081421
0.578947  0.012054  0.080078  0.090088
0.621053  0.014824  0.089172  0.099548
0.663158  0.017593  0.099548  0.109741
0.705263  0.020752  0.111633  0.121033
0.747368  0.024414  0.125977  0.133911
0.789474  0.028305  0.143677  0.149048
0.831579  0.034027  0.166260  0.169922
0.873684  0.041718  0.196899  0.198486
0.915789  0.055939  0.242554  0.243408
0.957895  0.087280  0.324219  0.328857
1.000000  1.000000  1.000000  1.000000
[2025-07-08 02:53:32,938 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-08 02:53:32,938 - __main__] INFO: 0.2    0.000135
0.8    0.029526
Name: ccc, dtype: float64
[2025-07-08 02:53:32,939 - __main__] INFO: CCC lower quantile: 0.0001354217529296875, upper quantile: 0.0295257568359375
[2025-07-08 02:53:49,286 - __main__] INFO: Clustermatch quantiles: lower=0.0008225440979003906, upper=0.0203399658203125
[2025-07-08 02:54:08,912 - __main__] INFO: Pearson quantiles: lower=0.0364990234375, upper=0.1099853515625
[2025-07-08 02:54:25,121 - __main__] INFO: Spearman quantiles: lower=0.041534423828125, upper=0.11956787109375
[2025-07-08 02:54:29,223 - __main__] INFO: Pearson higher count: 392645188
[2025-07-08 02:54:32,161 - __main__] INFO: Pearson lower count: 392616669
[2025-07-08 02:54:35,588 - __main__] INFO: Spearman higher count: 392713513
[2025-07-08 02:54:38,537 - __main__] INFO: Spearman lower count: 392487347
[2025-07-08 02:54:42,665 - __main__] INFO: Clustermatch higher count: 392579984
[2025-07-08 02:54:45,615 - __main__] INFO: Clustermatch lower count: 393772301
[2025-07-08 02:54:49,711 - __main__] INFO: Plot dataframe shape: (1308289128, 9)
[2025-07-08 02:54:49,711 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-08 02:54:58,309 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-08 02:54:58,309 - __main__] INFO: Data shape for upset plot: (1308289128, 9)
[2025-07-08 03:02:34,935 - __main__] INFO: Gene pairs by categories shape: (1308289128, 9)
[2025-07-08 03:02:34,935 - __main__] INFO: First few entries:
[2025-07-08 03:02:34,943 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          True          False              True            False          False                         False  ...  0.157227
               False         False              True            False          True                          False  ...  0.164185
                                                False           True           True                           True  ...  0.050812
               True          False              True            False          True                          False  ...  0.121155
               False         False              True            True           True                           True  ...  0.843262

[5 rows x 9 columns]
[2025-07-08 03:02:34,944 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 03:04:27,736 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_uterus_full.svg
[2025-07-08 03:04:27,736 - __main__] INFO: Copied full upset plot to log directory: logs/20250708_024747/upsetplot_gtex_uterus_full.svg
[2025-07-08 03:04:27,736 - __main__] INFO: Data shape for trimmed plot: (1308289128, 9)
[2025-07-08 03:07:46,166 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-08 03:07:46,166 - __main__] INFO: Shape: (1308289128, 9)
[2025-07-08 03:10:58,337 - __main__] INFO: Unique index combinations:
[2025-07-08 03:10:58,343 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-08 03:10:58,344 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-08 03:10:58,347 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-08 03:10:58,348 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-08 03:10:58,351 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-08 03:10:58,353 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-08 03:10:58,356 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-08 03:22:15,183 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-08 03:22:15,192 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.843262
                                                                               True                           True  ...  0.453369
                                                                               True                           True  ...  0.869629
                                                                               True                           True  ...  0.352539
                                                                               True                           True  ...  0.314453

[5 rows x 9 columns]
[2025-07-08 03:22:16,551 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 03:23:22,360 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_uterus_trimmed.svg
[2025-07-08 03:23:22,361 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250708_024747/upsetplot_gtex_uterus_trimmed.svg
[2025-07-08 03:23:22,361 - __main__] INFO: Final dataframe shape: (1308289128, 9)
[2025-07-08 03:23:22,361 - __main__] INFO: Final dataframe head:
[2025-07-08 03:23:22,367 - __main__] INFO: 
                                      Pearson (high)  ...  spearman
ENSG00000224114.1 ENSG00000134184.12           False  ...  0.157227
ENSG00000225972.1 ENSG00000134184.12           False  ...  0.164185
                  ENSG00000224114.1             True  ...  0.050812
ENSG00000213058.3 ENSG00000134184.12           False  ...  0.121155
                  ENSG00000224114.1             True  ...  0.843262

[5 rows x 9 columns]
[2025-07-08 03:23:22,367 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-uterus-var_pc_log2.pkl
[2025-07-08 03:23:22,367 - __main__] INFO: Saving gene pair intersections data...
[2025-07-08 03:23:26,564 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-uterus-var_pc_log2.pkl
[2025-07-08 03:23:26,565 - __main__] INFO: Script completed successfully!
[2025-07-08 03:23:26,565 - __main__] INFO: All outputs saved to log directory: logs/20250708_024747
[2025-07-08 03:23:32,361 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250708_032332
[2025-07-08 03:23:32,361 - __main__] INFO: Log directory: logs/20250708_032332
[2025-07-08 03:23:32,361 - __main__] INFO: Configuration:
[2025-07-08 03:23:32,361 - __main__] INFO:   GTEX_TISSUE: vagina
[2025-07-08 03:23:32,361 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-08 03:23:32,361 - __main__] INFO:   TOP_N_GENES: all
[2025-07-08 03:23:32,361 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-08 03:23:32,361 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-08 03:23:32,361 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-08 03:23:32,361 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_vagina-var_pc_log2-all.pkl
[2025-07-08 03:23:32,361 - __main__] INFO: Loading correlation data...
[2025-07-08 03:23:43,267 - __main__] INFO: Dataframe shape: (1328623926, 3)
[2025-07-08 03:23:43,267 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-08 03:23:43,272 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000205420.10 ENSG00000143536.7   0.475830  0.628906  0.793457
ENSG00000163209.14 ENSG00000143536.7   0.804199  0.932129  0.957520
                   ENSG00000205420.10  0.475830  0.730957  0.847656
ENSG00000145879.10 ENSG00000143536.7   0.714355  0.824219  0.924316
                   ENSG00000205420.10  0.406982  0.614258  0.776367
                   ENSG00000163209.14  0.714355  0.807129  0.899902
ENSG00000169474.4  ENSG00000143536.7   0.714355  0.788086  0.886230
                   ENSG00000205420.10  0.588867  0.802734  0.889648
                   ENSG00000163209.14  0.758301  0.856445  0.915039
                   ENSG00000145879.10  0.670898  0.767578  0.873047
ENSG00000169509.5  ENSG00000143536.7   0.670898  0.765137  0.917969
                   ENSG00000205420.10  0.440918  0.450195  0.725098
                   ENSG00000163209.14  0.758301  0.728027  0.886719
                   ENSG00000145879.10  0.758301  0.743652  0.918945
                   ENSG00000169474.4   0.670898  0.611816  0.841797
[2025-07-08 03:23:43,272 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-08 03:27:27,825 - __main__] INFO: 
                ccc       pearson      spearman
count  1.328624e+09  1.328624e+09  1.328624e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    4.081726e-04  3.265381e-02  3.784180e-02
50%    8.415222e-03  7.318115e-02  8.428955e-02
75%    3.080750e-02  1.577148e-01  1.663818e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-08 03:28:59,704 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-08 03:28:59,708 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000142  0.026199  0.030075
0.242105  0.000337  0.031616  0.036560
0.284211  0.000711  0.037292  0.043396
0.326316  0.001376  0.043274  0.050446
0.368421  0.002338  0.049622  0.057892
0.410526  0.003805  0.056458  0.065674
0.452632  0.005718  0.063904  0.074097
0.494737  0.008087  0.072083  0.083008
0.536842  0.010780  0.081177  0.092773
0.578947  0.013802  0.091614  0.103394
0.621053  0.017181  0.103638  0.115051
0.663158  0.020645  0.117859  0.128174
0.705263  0.025146  0.135010  0.143921
0.747368  0.030396  0.156250  0.164917
0.789474  0.037140  0.182861  0.192505
0.831579  0.047821  0.217529  0.231689
0.873684  0.066467  0.264648  0.289307
0.915789  0.097778  0.333252  0.374512
0.957895  0.162964  0.445312  0.503906
1.000000  1.000000  1.000000  1.000000
[2025-07-08 03:29:16,567 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-08 03:29:16,568 - __main__] INFO: 0.2    0.000142
0.8    0.039917
Name: ccc, dtype: float64
[2025-07-08 03:29:16,568 - __main__] INFO: CCC lower quantile: 0.00014162063598632812, upper quantile: 0.0399169921875
[2025-07-08 03:29:33,130 - __main__] INFO: Clustermatch quantiles: lower=0.0009756088256835938, upper=0.0244903564453125
[2025-07-08 03:29:51,772 - __main__] INFO: Pearson quantiles: lower=0.03948974609375, upper=0.1326904296875
[2025-07-08 03:30:09,283 - __main__] INFO: Spearman quantiles: lower=0.04595947265625, upper=0.1416015625
[2025-07-08 03:30:13,463 - __main__] INFO: Pearson higher count: 398811003
[2025-07-08 03:30:16,449 - __main__] INFO: Pearson lower count: 398621030
[2025-07-08 03:30:20,036 - __main__] INFO: Spearman higher count: 398917525
[2025-07-08 03:30:23,035 - __main__] INFO: Spearman lower count: 398698427
[2025-07-08 03:30:27,244 - __main__] INFO: Clustermatch higher count: 398598253
[2025-07-08 03:30:30,246 - __main__] INFO: Clustermatch lower count: 398587511
[2025-07-08 03:30:34,709 - __main__] INFO: Plot dataframe shape: (1328623926, 9)
[2025-07-08 03:30:34,709 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-08 03:30:43,506 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-08 03:30:43,507 - __main__] INFO: Data shape for upset plot: (1328623926, 9)
[2025-07-08 03:38:54,159 - __main__] INFO: Gene pairs by categories shape: (1328623926, 9)
[2025-07-08 03:38:54,160 - __main__] INFO: First few entries:
[2025-07-08 03:38:54,168 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.793457
                                                                               True                           True  ...  0.957520
                                                                               True                           True  ...  0.847656
                                                                               True                           True  ...  0.924316
                                                                               True                           True  ...  0.776367

[5 rows x 9 columns]
[2025-07-08 03:38:54,168 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 03:40:50,714 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_vagina_full.svg
[2025-07-08 03:40:50,714 - __main__] INFO: Copied full upset plot to log directory: logs/20250708_032332/upsetplot_gtex_vagina_full.svg
[2025-07-08 03:40:50,714 - __main__] INFO: Data shape for trimmed plot: (1328623926, 9)
[2025-07-08 03:44:23,347 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-08 03:44:23,347 - __main__] INFO: Shape: (1328623926, 9)
[2025-07-08 03:47:37,440 - __main__] INFO: Unique index combinations:
[2025-07-08 03:47:37,446 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-08 03:47:37,447 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-08 03:47:37,450 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-08 03:47:37,451 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-08 03:47:37,454 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-08 03:47:37,457 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-08 03:47:37,460 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-08 03:59:29,895 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-08 03:59:29,903 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.793457
                                                                               True                           True  ...  0.957520
                                                                               True                           True  ...  0.847656
                                                                               True                           True  ...  0.924316
                                                                               True                           True  ...  0.776367

[5 rows x 9 columns]
[2025-07-08 03:59:31,319 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 04:00:39,081 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_vagina_trimmed.svg
[2025-07-08 04:00:39,081 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250708_032332/upsetplot_gtex_vagina_trimmed.svg
[2025-07-08 04:00:39,081 - __main__] INFO: Final dataframe shape: (1328623926, 9)
[2025-07-08 04:00:39,081 - __main__] INFO: Final dataframe head:
[2025-07-08 04:00:39,088 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000205420.10 ENSG00000143536.7             True  ...  0.793457
ENSG00000163209.14 ENSG00000143536.7             True  ...  0.957520
                   ENSG00000205420.10            True  ...  0.847656
ENSG00000145879.10 ENSG00000143536.7             True  ...  0.924316
                   ENSG00000205420.10            True  ...  0.776367

[5 rows x 9 columns]
[2025-07-08 04:00:39,088 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-vagina-var_pc_log2.pkl
[2025-07-08 04:00:39,088 - __main__] INFO: Saving gene pair intersections data...
[2025-07-08 04:00:43,680 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-vagina-var_pc_log2.pkl
[2025-07-08 04:00:43,680 - __main__] INFO: Script completed successfully!
[2025-07-08 04:00:43,680 - __main__] INFO: All outputs saved to log directory: logs/20250708_032332
[2025-07-08 04:00:49,663 - __main__] INFO: Starting compute_intersections.py with timestamp: 20250708_040049
[2025-07-08 04:00:49,663 - __main__] INFO: Log directory: logs/20250708_040049
[2025-07-08 04:00:49,663 - __main__] INFO: Configuration:
[2025-07-08 04:00:49,663 - __main__] INFO:   GTEX_TISSUE: whole_blood
[2025-07-08 04:00:49,663 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-08 04:00:49,663 - __main__] INFO:   TOP_N_GENES: all
[2025-07-08 04:00:49,663 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-08 04:00:49,663 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-08 04:00:49,663 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-08 04:00:49,663 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_whole_blood-var_pc_log2-all.pkl
[2025-07-08 04:00:49,663 - __main__] INFO: Loading correlation data...
[2025-07-08 04:01:01,169 - __main__] INFO: Dataframe shape: (1420258456, 3)
[2025-07-08 04:01:01,169 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-08 04:01:01,173 - __main__] INFO: 
                                            ccc   pearson  spearman
ENSG00000135245.9  ENSG00000169429.10  0.780273  0.571777  0.854004
ENSG00000163631.16 ENSG00000169429.10  0.401611  0.126953  0.709473
                   ENSG00000135245.9   0.429199  0.110596  0.675781
ENSG00000277632.1  ENSG00000169429.10  0.789551  0.456543  0.850586
                   ENSG00000135245.9   0.780273  0.438965  0.834473
                   ENSG00000163631.16  0.408447  0.129272  0.683105
ENSG00000239839.6  ENSG00000169429.10  0.139404  0.127197  0.379883
                   ENSG00000135245.9   0.159912  0.209106  0.422607
                   ENSG00000163631.16  0.127686  0.021088  0.388916
                   ENSG00000277632.1   0.151489  0.199707  0.402832
ENSG00000186652.9  ENSG00000169429.10  0.524414  0.256348  0.760254
                   ENSG00000135245.9   0.516602  0.223633  0.735840
                   ENSG00000163631.16  0.401611  0.054565  0.730957
                   ENSG00000277632.1   0.547363  0.238403  0.756348
                   ENSG00000239839.6   0.272705  0.229248  0.626465
[2025-07-08 04:01:01,173 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-08 04:05:37,979 - __main__] INFO: 
                ccc       pearson      spearman
count  1.420258e+09  1.420258e+09  1.420258e+09
mean            NaN           NaN           NaN
std    0.000000e+00  0.000000e+00  0.000000e+00
min    0.000000e+00  0.000000e+00  0.000000e+00
25%    9.417534e-06  1.380920e-02  1.846313e-02
50%    1.724243e-03  3.686523e-02  4.556274e-02
75%    1.770020e-02  1.121826e-01  1.149902e-01
max    1.000000e+00  1.000000e+00  1.000000e+00
[2025-07-08 04:07:13,856 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-08 04:07:13,860 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000000  0.010834  0.014435
0.242105  0.000007  0.013321  0.017822
0.284211  0.000028  0.016022  0.021423
0.326316  0.000072  0.019012  0.025314
0.368421  0.000173  0.022354  0.029541
0.410526  0.000395  0.026199  0.034149
0.452632  0.000836  0.030685  0.039215
0.494737  0.001602  0.036102  0.044800
0.536842  0.002752  0.042816  0.051086
0.578947  0.004311  0.051239  0.058258
0.621053  0.006351  0.061798  0.066895
0.663158  0.009033  0.074829  0.078125
0.705263  0.012596  0.090820  0.092896
0.747368  0.017319  0.110779  0.113464
0.789474  0.023804  0.136475  0.143066
0.831579  0.032898  0.171631  0.186523
0.873684  0.046875  0.222534  0.251465
0.915789  0.071655  0.303223  0.351074
0.957895  0.135376  0.446289  0.509766
1.000000  1.000000  1.000000  1.000000
[2025-07-08 04:07:30,832 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-08 04:07:30,833 - __main__] INFO: 0.2    0.000000
0.8    0.025803
Name: ccc, dtype: float64
[2025-07-08 04:07:30,833 - __main__] INFO: CCC lower quantile: 0.0, upper quantile: 0.0258026123046875
[2025-07-08 04:07:48,693 - __main__] INFO: Clustermatch quantiles: lower=4.0411949157714844e-05, upper=0.0120849609375
[2025-07-08 04:08:09,198 - __main__] INFO: Pearson quantiles: lower=0.0171051025390625, upper=0.088623046875
[2025-07-08 04:08:30,511 - __main__] INFO: Spearman quantiles: lower=0.022857666015625, upper=0.0908203125
[2025-07-08 04:08:34,979 - __main__] INFO: Pearson higher count: 426239078
[2025-07-08 04:08:38,174 - __main__] INFO: Pearson lower count: 426176507
[2025-07-08 04:08:42,620 - __main__] INFO: Spearman higher count: 426120169
[2025-07-08 04:08:45,831 - __main__] INFO: Spearman lower count: 426175678
[2025-07-08 04:08:50,330 - __main__] INFO: Clustermatch higher count: 426160888
[2025-07-08 04:08:53,548 - __main__] INFO: Clustermatch lower count: 426110460
[2025-07-08 04:08:58,305 - __main__] INFO: Plot dataframe shape: (1420258456, 9)
[2025-07-08 04:08:58,305 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-08 04:09:07,710 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-08 04:09:07,711 - __main__] INFO: Data shape for upset plot: (1420258456, 9)
[2025-07-08 04:18:09,959 - __main__] INFO: Gene pairs by categories shape: (1420258456, 9)
[2025-07-08 04:18:09,959 - __main__] INFO: First few entries:
[2025-07-08 04:18:09,968 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.854004
                                                                               True                           True  ...  0.709473
                                                                               True                           True  ...  0.675781
                                                                               True                           True  ...  0.850586
                                                                               True                           True  ...  0.834473

[5 rows x 9 columns]
[2025-07-08 04:18:09,968 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 04:20:14,103 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_whole_blood_full.svg
[2025-07-08 04:20:14,103 - __main__] INFO: Copied full upset plot to log directory: logs/20250708_040049/upsetplot_gtex_whole_blood_full.svg
[2025-07-08 04:20:14,103 - __main__] INFO: Data shape for trimmed plot: (1420258456, 9)
[2025-07-08 04:23:58,700 - __main__] INFO: Gene pairs by categories for trimmed plot:
[2025-07-08 04:23:58,701 - __main__] INFO: Shape: (1420258456, 9)
[2025-07-08 04:27:24,905 - __main__] INFO: Unique index combinations:
[2025-07-08 04:27:24,912 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-08 04:27:24,913 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-08 04:27:24,916 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-08 04:27:24,917 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-08 04:27:24,920 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-08 04:27:24,922 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-08 04:27:24,925 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-08 04:39:01,728 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-08 04:39:01,737 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.854004
                                                                               True                           True  ...  0.709473
                                                                               True                           True  ...  0.675781
                                                                               True                           True  ...  0.850586
                                                                               True                           True  ...  0.834473

[5 rows x 9 columns]
[2025-07-08 04:39:03,247 - __main__] INFO: Creating trimmed upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-08 04:40:15,826 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_whole_blood_trimmed.svg
[2025-07-08 04:40:15,826 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250708_040049/upsetplot_gtex_whole_blood_trimmed.svg
[2025-07-08 04:40:15,826 - __main__] INFO: Final dataframe shape: (1420258456, 9)
[2025-07-08 04:40:15,826 - __main__] INFO: Final dataframe head:
[2025-07-08 04:40:15,832 - __main__] INFO: 
                                       Pearson (high)  ...  spearman
ENSG00000135245.9  ENSG00000169429.10            True  ...  0.854004
ENSG00000163631.16 ENSG00000169429.10            True  ...  0.709473
                   ENSG00000135245.9             True  ...  0.675781
ENSG00000277632.1  ENSG00000169429.10            True  ...  0.850586
                   ENSG00000135245.9             True  ...  0.834473

[5 rows x 9 columns]
[2025-07-08 04:40:15,832 - __main__] INFO: Output file for gene pair intersections: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-whole_blood-var_pc_log2.pkl
[2025-07-08 04:40:15,832 - __main__] INFO: Saving gene pair intersections data...
[2025-07-08 04:40:20,410 - __main__] INFO: Saved gene pair intersections to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-whole_blood-var_pc_log2.pkl
[2025-07-08 04:40:20,410 - __main__] INFO: Script completed successfully!
[2025-07-08 04:40:20,410 - __main__] INFO: All outputs saved to log directory: logs/20250708_040049
