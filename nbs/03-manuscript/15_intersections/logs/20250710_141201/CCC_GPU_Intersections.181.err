[2025-07-09 22:08:37,296 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: adipose_subcutaneous
[2025-07-09 22:08:37,296 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-adipose_subcutaneous-var_pc_log2.pkl
[2025-07-09 22:08:51,619 - __main__] INFO: Loaded dataframe shape: (1460025703, 9)
[2025-07-09 22:08:51,619 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-09 22:08:51,619 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-09 22:08:51,619 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-09 22:19:58,275 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_adipose_subcutaneous_full.svg
[2025-07-09 22:19:58,276 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_adipose_subcutaneous_full.svg
[2025-07-09 22:19:58,276 - __main__] INFO: Creating trimmed upset plot...
[2025-07-09 22:28:07,207 - __main__] INFO: Unique index combinations:
[2025-07-09 22:28:07,213 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-09 22:28:07,214 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-09 22:28:07,217 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-09 22:28:07,218 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-09 22:28:07,221 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-09 22:28:07,223 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-09 22:28:07,226 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-09 22:41:37,870 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-09 22:41:37,879 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.404541
                                                                               True                           True  ...  0.102783
                                                                               True                           True  ...  0.463379
                                                                               True                           True  ...  0.709961
                                                                               True                           True  ...  0.286377

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-09 22:42:54,360 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_adipose_subcutaneous_trimmed.svg
[2025-07-09 22:42:54,361 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_adipose_subcutaneous_trimmed.svg
[2025-07-09 22:42:54,418 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-09 22:42:54,418 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-09 22:43:01,062 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: adipose_visceral_omentum
[2025-07-09 22:43:01,063 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-adipose_visceral_omentum-var_pc_log2.pkl
[2025-07-09 22:43:14,034 - __main__] INFO: Loaded dataframe shape: (1440046611, 9)
[2025-07-09 22:43:14,034 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-09 22:43:14,034 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-09 22:43:14,034 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-09 22:53:45,098 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_adipose_visceral_omentum_full.svg
[2025-07-09 22:53:45,098 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_adipose_visceral_omentum_full.svg
[2025-07-09 22:53:45,098 - __main__] INFO: Creating trimmed upset plot...
[2025-07-09 23:00:56,086 - __main__] INFO: Unique index combinations:
[2025-07-09 23:00:56,093 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-09 23:00:56,094 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-09 23:00:56,097 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-09 23:00:56,098 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-09 23:00:56,100 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-09 23:00:56,103 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-09 23:00:56,105 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-09 23:13:34,172 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-09 23:13:34,181 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.285645
                                                                               True                           True  ...  0.341309
                                                                               True                           True  ...  0.165649
                                                                               True                           True  ...  0.309570
                                                                               True                           True  ...  0.305176

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-09 23:14:48,798 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_adipose_visceral_omentum_trimmed.svg
[2025-07-09 23:14:48,799 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_adipose_visceral_omentum_trimmed.svg
[2025-07-09 23:14:48,855 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-09 23:14:48,856 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-09 23:14:55,910 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: adrenal_gland
[2025-07-09 23:14:55,910 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-adrenal_gland-var_pc_log2.pkl
[2025-07-09 23:15:07,437 - __main__] INFO: Loaded dataframe shape: (1358012670, 9)
[2025-07-09 23:15:07,438 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-09 23:15:07,438 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-09 23:15:07,438 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-09 23:25:00,778 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_adrenal_gland_full.svg
[2025-07-09 23:25:00,779 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_adrenal_gland_full.svg
[2025-07-09 23:25:00,779 - __main__] INFO: Creating trimmed upset plot...
[2025-07-09 23:31:47,009 - __main__] INFO: Unique index combinations:
[2025-07-09 23:31:47,016 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-09 23:31:47,017 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-09 23:31:47,020 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-09 23:31:47,021 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-09 23:31:47,024 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-09 23:31:47,026 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-09 23:31:47,029 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-09 23:44:17,374 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-09 23:44:17,384 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.125854
                                                                               True                           True  ...  0.965332
                                                                               True                           True  ...  0.152344
                                                                               True                           True  ...  0.178223
                                                                               True                           True  ...  0.760254

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-09 23:45:28,502 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_adrenal_gland_trimmed.svg
[2025-07-09 23:45:28,503 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_adrenal_gland_trimmed.svg
[2025-07-09 23:45:28,556 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-09 23:45:28,556 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-09 23:45:35,449 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: artery_aorta
[2025-07-09 23:45:35,449 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-artery_aorta-var_pc_log2.pkl
[2025-07-09 23:45:47,681 - __main__] INFO: Loaded dataframe shape: (1419832116, 9)
[2025-07-09 23:45:47,682 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-09 23:45:47,682 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-09 23:45:47,682 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-09 23:56:17,929 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_aorta_full.svg
[2025-07-09 23:56:17,930 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_artery_aorta_full.svg
[2025-07-09 23:56:17,930 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 00:03:22,214 - __main__] INFO: Unique index combinations:
[2025-07-10 00:03:22,221 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 00:03:22,222 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 00:03:22,225 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 00:03:22,226 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 00:03:22,229 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 00:03:22,231 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 00:03:22,233 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 00:16:11,783 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 00:16:11,792 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.671387
                                                                               True                           True  ...  0.812988
                                                                               True                           True  ...  0.679199
                                                                               True                           True  ...  0.716797
                                                                               True                           True  ...  0.708008

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 00:17:26,039 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_aorta_trimmed.svg
[2025-07-10 00:17:26,040 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_artery_aorta_trimmed.svg
[2025-07-10 00:17:26,096 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 00:17:26,096 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 00:17:33,160 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: artery_coronary
[2025-07-10 00:17:33,160 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-artery_coronary-var_pc_log2.pkl
[2025-07-10 00:17:44,643 - __main__] INFO: Loaded dataframe shape: (1373430255, 9)
[2025-07-10 00:17:44,643 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 00:17:44,644 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 00:17:44,644 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 00:27:39,346 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_coronary_full.svg
[2025-07-10 00:27:39,347 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_artery_coronary_full.svg
[2025-07-10 00:27:39,347 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 00:34:27,043 - __main__] INFO: Unique index combinations:
[2025-07-10 00:34:27,050 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 00:34:27,050 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 00:34:27,054 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 00:34:27,055 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 00:34:27,057 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 00:34:27,060 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 00:34:27,062 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 00:46:48,749 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 00:46:48,758 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.702148
                                                                               True                           True  ...  0.238037
                                                                               True                           True  ...  0.209839
                                                                               True                           True  ...  0.975586
                                                                               True                           True  ...  0.815918

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 00:48:00,794 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_coronary_trimmed.svg
[2025-07-10 00:48:00,794 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_artery_coronary_trimmed.svg
[2025-07-10 00:48:00,849 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 00:48:00,849 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 00:48:07,455 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: artery_tibial
[2025-07-10 00:48:07,455 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-artery_tibial-var_pc_log2.pkl
[2025-07-10 00:48:19,653 - __main__] INFO: Loaded dataframe shape: (1454033701, 9)
[2025-07-10 00:48:19,653 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 00:48:19,654 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 00:48:19,654 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 00:59:11,134 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_tibial_full.svg
[2025-07-10 00:59:11,134 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_artery_tibial_full.svg
[2025-07-10 00:59:11,134 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 01:06:31,210 - __main__] INFO: Unique index combinations:
[2025-07-10 01:06:31,218 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 01:06:31,219 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 01:06:31,222 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 01:06:31,223 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 01:06:31,225 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 01:06:31,228 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 01:06:31,230 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 01:19:24,307 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 01:19:24,316 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.693359
                                                                               True                           True  ...  0.629883
                                                                               True                           True  ...  0.619629
                                                                               True                           True  ...  0.580078
                                                                               True                           True  ...  0.620605

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 01:20:41,087 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_artery_tibial_trimmed.svg
[2025-07-10 01:20:41,088 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_artery_tibial_trimmed.svg
[2025-07-10 01:20:41,147 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 01:20:41,147 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 01:20:48,102 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: bladder
[2025-07-10 01:20:48,102 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-bladder-var_pc_log2.pkl
[2025-07-10 01:20:58,116 - __main__] INFO: Loaded dataframe shape: (995271420, 9)
[2025-07-10 01:20:58,116 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 01:20:58,116 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 01:20:58,116 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 01:28:57,889 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_bladder_full.svg
[2025-07-10 01:28:57,889 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_bladder_full.svg
[2025-07-10 01:28:57,889 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 01:33:53,015 - __main__] INFO: Unique index combinations:
[2025-07-10 01:33:53,022 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 01:33:53,022 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 01:33:53,026 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 01:33:53,027 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 01:33:53,029 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 01:33:53,032 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 01:33:53,034 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 01:43:36,267 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 01:43:36,277 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.408203
                                                                               True                           True  ...  0.797852
                                                                               True                           True  ...  0.353271
                                                                               True                           True  ...  0.876465
                                                                               True                           True  ...  0.757324

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 01:44:29,810 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_bladder_trimmed.svg
[2025-07-10 01:44:29,811 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_bladder_trimmed.svg
[2025-07-10 01:44:29,852 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 01:44:29,852 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 01:44:36,231 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_amygdala
[2025-07-10 01:44:36,231 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_amygdala-var_pc_log2.pkl
[2025-07-10 01:44:49,799 - __main__] INFO: Loaded dataframe shape: (1313153128, 9)
[2025-07-10 01:44:49,799 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 01:44:49,799 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 01:44:49,799 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 01:54:29,034 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_amygdala_full.svg
[2025-07-10 01:54:29,035 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_amygdala_full.svg
[2025-07-10 01:54:29,035 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 02:01:03,826 - __main__] INFO: Unique index combinations:
[2025-07-10 02:01:03,833 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 02:01:03,834 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 02:01:03,837 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 02:01:03,838 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 02:01:03,841 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 02:01:03,843 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 02:01:03,846 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 02:13:01,053 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 02:13:01,062 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.552246
                                                                               True                           True  ...  0.509766
                                                                               True                           True  ...  0.841309
                                                                               True                           True  ...  0.663086
                                                                               True                           True  ...  0.757324

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 02:14:09,783 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_amygdala_trimmed.svg
[2025-07-10 02:14:09,783 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_amygdala_trimmed.svg
[2025-07-10 02:14:09,836 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 02:14:09,836 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 02:14:16,589 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_anterior_cingulate_cortex_ba24
[2025-07-10 02:14:16,589 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_anterior_cingulate_cortex_ba24-var_pc_log2.pkl
[2025-07-10 02:14:32,404 - __main__] INFO: Loaded dataframe shape: (1345637503, 9)
[2025-07-10 02:14:32,405 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 02:14:32,405 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 02:14:32,405 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 02:24:15,993 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_anterior_cingulate_cortex_ba24_full.svg
[2025-07-10 02:24:15,993 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_anterior_cingulate_cortex_ba24_full.svg
[2025-07-10 02:24:15,993 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 02:31:06,295 - __main__] INFO: Unique index combinations:
[2025-07-10 02:31:06,302 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 02:31:06,303 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 02:31:06,306 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 02:31:06,307 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 02:31:06,310 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 02:31:06,312 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 02:31:06,315 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 02:43:52,444 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 02:43:52,454 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.549316
                                                                               True                           True  ...  0.382324
                                                                               True                           True  ...  0.840332
                                                                               True                           True  ...  0.763184
                                                                               True                           True  ...  0.657715

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 02:45:01,938 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_anterior_cingulate_cortex_ba24_trimmed.svg
[2025-07-10 02:45:01,939 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_anterior_cingulate_cortex_ba24_trimmed.svg
[2025-07-10 02:45:01,991 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 02:45:01,991 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 02:45:08,508 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_caudate_basal_ganglia
[2025-07-10 02:45:08,508 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_caudate_basal_ganglia-var_pc_log2.pkl
[2025-07-10 02:45:24,113 - __main__] INFO: Loaded dataframe shape: (1377836265, 9)
[2025-07-10 02:45:24,113 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 02:45:24,113 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 02:45:24,113 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 02:55:28,409 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_caudate_basal_ganglia_full.svg
[2025-07-10 02:55:28,409 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_caudate_basal_ganglia_full.svg
[2025-07-10 02:55:28,409 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 03:04:05,806 - __main__] INFO: Unique index combinations:
[2025-07-10 03:04:05,814 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 03:04:05,815 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 03:04:05,818 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 03:04:05,819 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 03:04:05,822 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 03:04:05,824 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 03:04:05,827 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 03:15:46,902 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 03:15:46,911 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.188477
                                                                               True                           True  ...  0.479736
                                                                               True                           True  ...  0.672852
                                                                               True                           True  ...  0.334717
                                                                               True                           True  ...  0.391357

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 03:16:57,824 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_caudate_basal_ganglia_trimmed.svg
[2025-07-10 03:16:57,824 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_caudate_basal_ganglia_trimmed.svg
[2025-07-10 03:16:57,878 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 03:16:57,878 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 03:17:04,438 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_cerebellar_hemisphere
[2025-07-10 03:17:04,438 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_cerebellar_hemisphere-var_pc_log2.pkl
[2025-07-10 03:17:20,497 - __main__] INFO: Loaded dataframe shape: (1357283151, 9)
[2025-07-10 03:17:20,497 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 03:17:20,497 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 03:17:20,497 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 03:27:21,334 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cerebellar_hemisphere_full.svg
[2025-07-10 03:27:21,334 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_cerebellar_hemisphere_full.svg
[2025-07-10 03:27:21,334 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 03:34:06,464 - __main__] INFO: Unique index combinations:
[2025-07-10 03:34:06,471 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 03:34:06,472 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 03:34:06,475 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 03:34:06,476 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 03:34:06,479 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 03:34:06,481 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 03:34:06,484 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 03:46:25,275 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 03:46:25,284 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.777344
                                                                               True                           True  ...  0.784668
                                                                               True                           True  ...  0.905273
                                                                               True                           True  ...  0.828613
                                                                               True                           True  ...  0.608398

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 03:47:35,127 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cerebellar_hemisphere_trimmed.svg
[2025-07-10 03:47:35,128 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_cerebellar_hemisphere_trimmed.svg
[2025-07-10 03:47:35,181 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 03:47:35,181 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 03:47:41,856 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_cerebellum
[2025-07-10 03:47:41,856 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_cerebellum-var_pc_log2.pkl
[2025-07-10 03:47:57,661 - __main__] INFO: Loaded dataframe shape: (1373692320, 9)
[2025-07-10 03:47:57,661 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 03:47:57,661 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 03:47:57,661 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 03:58:01,332 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cerebellum_full.svg
[2025-07-10 03:58:01,332 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_cerebellum_full.svg
[2025-07-10 03:58:01,332 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 04:04:54,770 - __main__] INFO: Unique index combinations:
[2025-07-10 04:04:54,777 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 04:04:54,777 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 04:04:54,781 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 04:04:54,782 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 04:04:54,784 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 04:04:54,787 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 04:04:54,789 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 04:17:34,774 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 04:17:34,783 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.556152
                                                                               True                           True  ...  0.811523
                                                                               True                           True  ...  0.519043
                                                                               True                           True  ...  0.869141
                                                                               True                           True  ...  0.518555

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 04:18:45,596 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cerebellum_trimmed.svg
[2025-07-10 04:18:45,597 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_cerebellum_trimmed.svg
[2025-07-10 04:18:45,651 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 04:18:45,651 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 04:18:52,318 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_cortex
[2025-07-10 04:18:52,318 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_cortex-var_pc_log2.pkl
[2025-07-10 04:19:08,197 - __main__] INFO: Loaded dataframe shape: (1428371076, 9)
[2025-07-10 04:19:08,197 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 04:19:08,197 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 04:19:08,197 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 04:29:42,363 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cortex_full.svg
[2025-07-10 04:29:42,363 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_cortex_full.svg
[2025-07-10 04:29:42,363 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 04:37:32,682 - __main__] INFO: Unique index combinations:
[2025-07-10 04:37:32,689 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 04:37:32,689 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 04:37:32,693 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 04:37:32,694 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 04:37:32,696 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 04:37:32,699 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 04:37:32,701 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 04:51:39,574 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 04:51:39,583 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.881836
                                                                               True                           True  ...  0.619141
                                                                               True                           True  ...  0.559570
                                                                               True                           True  ...  0.557129
                                                                               True                           True  ...  0.901367

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 04:52:54,227 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_cortex_trimmed.svg
[2025-07-10 04:52:54,227 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_cortex_trimmed.svg
[2025-07-10 04:52:54,286 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 04:52:54,286 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 04:53:00,968 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_frontal_cortex_ba9
[2025-07-10 04:53:00,968 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_frontal_cortex_ba9-var_pc_log2.pkl
[2025-07-10 04:53:19,038 - __main__] INFO: Loaded dataframe shape: (1359576585, 9)
[2025-07-10 04:53:19,038 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 04:53:19,038 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 04:53:19,038 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 05:03:17,655 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_frontal_cortex_ba9_full.svg
[2025-07-10 05:03:17,656 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_frontal_cortex_ba9_full.svg
[2025-07-10 05:03:17,656 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 05:10:00,609 - __main__] INFO: Unique index combinations:
[2025-07-10 05:10:00,616 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 05:10:00,617 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 05:10:00,620 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 05:10:00,621 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 05:10:00,623 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 05:10:00,626 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 05:10:00,628 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 05:22:26,205 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 05:22:26,214 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.531250
                                                                               True                           True  ...  0.150024
                                                                               True                           True  ...  0.875488
                                                                               True                           True  ...  0.851074
                                                                               True                           True  ...  0.932129

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 05:23:36,613 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_frontal_cortex_ba9_trimmed.svg
[2025-07-10 05:23:36,614 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_frontal_cortex_ba9_trimmed.svg
[2025-07-10 05:23:36,667 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 05:23:36,667 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 05:23:43,402 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_hippocampus
[2025-07-10 05:23:43,402 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_hippocampus-var_pc_log2.pkl
[2025-07-10 05:24:00,952 - __main__] INFO: Loaded dataframe shape: (1381565895, 9)
[2025-07-10 05:24:00,952 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 05:24:00,952 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 05:24:00,952 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 05:34:11,598 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_hippocampus_full.svg
[2025-07-10 05:34:11,599 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_hippocampus_full.svg
[2025-07-10 05:34:11,599 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 05:41:09,476 - __main__] INFO: Unique index combinations:
[2025-07-10 05:41:09,484 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 05:41:09,485 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 05:41:09,488 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 05:41:09,489 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 05:41:09,491 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 05:41:09,494 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 05:41:09,496 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 05:53:30,115 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 05:53:30,124 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.338867
                                                                               True                           True  ...  0.573242
                                                                               True                           True  ...  0.344971
                                                                               True                           True  ...  0.943359
                                                                               True                           True  ...  0.414795

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 05:54:42,270 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_hippocampus_trimmed.svg
[2025-07-10 05:54:42,270 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_hippocampus_trimmed.svg
[2025-07-10 05:54:42,326 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 05:54:42,326 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 05:54:48,944 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_hypothalamus
[2025-07-10 05:54:48,944 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_hypothalamus-var_pc_log2.pkl
[2025-07-10 05:55:06,384 - __main__] INFO: Loaded dataframe shape: (1371020430, 9)
[2025-07-10 05:55:06,384 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 05:55:06,384 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 05:55:06,384 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 06:05:08,916 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_hypothalamus_full.svg
[2025-07-10 06:05:08,916 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_hypothalamus_full.svg
[2025-07-10 06:05:08,916 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 06:12:01,810 - __main__] INFO: Unique index combinations:
[2025-07-10 06:12:01,818 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 06:12:01,819 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 06:12:01,822 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 06:12:01,823 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 06:12:01,826 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 06:12:01,828 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 06:12:01,831 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 06:24:40,748 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 06:24:40,758 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.938965
                                                                               True                           True  ...  0.807617
                                                                               True                           True  ...  0.609863
                                                                               True                           True  ...  0.872070
                                                                               True                           True  ...  0.874023

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 06:25:51,227 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_hypothalamus_trimmed.svg
[2025-07-10 06:25:51,228 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_hypothalamus_trimmed.svg
[2025-07-10 06:25:51,283 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 06:25:51,283 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 06:25:57,828 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_nucleus_accumbens_basal_ganglia
[2025-07-10 06:25:57,828 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_nucleus_accumbens_basal_ganglia-var_pc_log2.pkl
[2025-07-10 06:26:14,792 - __main__] INFO: Loaded dataframe shape: (1389198405, 9)
[2025-07-10 06:26:14,792 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 06:26:14,792 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 06:26:14,792 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 06:36:35,505 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_nucleus_accumbens_basal_ganglia_full.svg
[2025-07-10 06:36:35,505 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_nucleus_accumbens_basal_ganglia_full.svg
[2025-07-10 06:36:35,505 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 06:45:46,549 - __main__] INFO: Unique index combinations:
[2025-07-10 06:45:46,557 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 06:45:46,558 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 06:45:46,561 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 06:45:46,562 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 06:45:46,565 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 06:45:46,567 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 06:45:46,569 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 06:57:39,697 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 06:57:39,706 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.243408
                                                                               True                           True  ...  0.406006
                                                                               True                           True  ...  0.374756
                                                                               True                           True  ...  0.878906
                                                                               True                           True  ...  0.420898

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 06:58:52,022 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_nucleus_accumbens_basal_ganglia_trimmed.svg
[2025-07-10 06:58:52,023 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_nucleus_accumbens_basal_ganglia_trimmed.svg
[2025-07-10 06:58:52,077 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 06:58:52,077 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 06:58:58,785 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_putamen_basal_ganglia
[2025-07-10 06:58:58,785 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_putamen_basal_ganglia-var_pc_log2.pkl
[2025-07-10 06:59:15,404 - __main__] INFO: Loaded dataframe shape: (1336936195, 9)
[2025-07-10 06:59:15,404 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 06:59:15,404 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 06:59:15,404 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 07:09:04,464 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_putamen_basal_ganglia_full.svg
[2025-07-10 07:09:04,464 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_putamen_basal_ganglia_full.svg
[2025-07-10 07:09:04,464 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 07:16:08,115 - __main__] INFO: Unique index combinations:
[2025-07-10 07:16:08,123 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 07:16:08,124 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 07:16:08,127 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 07:16:08,128 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 07:16:08,130 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 07:16:08,133 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 07:16:08,135 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 07:28:06,985 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 07:28:06,994 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.271240
                                                                               True                           True  ...  0.590332
                                                                               True                           True  ...  0.269287
                                                                               True                           True  ...  0.278564
                                                                               True                           True  ...  0.952637

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 07:29:16,337 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_putamen_basal_ganglia_trimmed.svg
[2025-07-10 07:29:16,338 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_putamen_basal_ganglia_trimmed.svg
[2025-07-10 07:29:16,391 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 07:29:16,391 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 07:29:23,209 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_spinal_cord_cervical_c1
[2025-07-10 07:29:23,209 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_spinal_cord_cervical_c1-var_pc_log2.pkl
[2025-07-10 07:29:37,817 - __main__] INFO: Loaded dataframe shape: (1305886065, 9)
[2025-07-10 07:29:37,817 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 07:29:37,817 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 07:29:37,817 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 07:39:17,254 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_spinal_cord_cervical_c1_full.svg
[2025-07-10 07:39:17,255 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_spinal_cord_cervical_c1_full.svg
[2025-07-10 07:39:17,255 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 07:45:45,276 - __main__] INFO: Unique index combinations:
[2025-07-10 07:45:45,283 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 07:45:45,284 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 07:45:45,287 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 07:45:45,288 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 07:45:45,291 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 07:45:45,293 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 07:45:45,297 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 07:57:51,483 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 07:57:51,492 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.895996
                                                                               True                           True  ...  0.912109
                                                                               True                           True  ...  0.947266
                                                                               True                           True  ...  0.730469
                                                                               True                           True  ...  0.816406

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 07:58:59,049 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_spinal_cord_cervical_c1_trimmed.svg
[2025-07-10 07:58:59,050 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_spinal_cord_cervical_c1_trimmed.svg
[2025-07-10 07:58:59,102 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 07:58:59,103 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 07:59:05,658 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: brain_substantia_nigra
[2025-07-10 07:59:05,658 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-brain_substantia_nigra-var_pc_log2.pkl
[2025-07-10 07:59:20,180 - __main__] INFO: Loaded dataframe shape: (1278940600, 9)
[2025-07-10 07:59:20,180 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 07:59:20,180 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 07:59:20,180 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 08:08:49,199 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_substantia_nigra_full.svg
[2025-07-10 08:08:49,200 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_substantia_nigra_full.svg
[2025-07-10 08:08:49,200 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 08:15:09,698 - __main__] INFO: Unique index combinations:
[2025-07-10 08:15:09,705 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 08:15:09,706 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 08:15:09,709 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 08:15:09,710 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 08:15:09,712 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 08:15:09,715 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 08:15:09,717 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 08:26:40,357 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 08:26:40,366 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.974609
                                                                               True                           True  ...  0.684570
                                                                               True                           True  ...  0.677734
                                                                               True                           True  ...  0.654297
                                                                               True                           True  ...  0.663574

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 08:27:46,451 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_brain_substantia_nigra_trimmed.svg
[2025-07-10 08:27:46,451 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_brain_substantia_nigra_trimmed.svg
[2025-07-10 08:27:46,502 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 08:27:46,502 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 08:27:53,189 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: breast_mammary_tissue
[2025-07-10 08:27:53,189 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-breast_mammary_tissue-var_pc_log2.pkl
[2025-07-10 08:28:09,778 - __main__] INFO: Loaded dataframe shape: (1452847560, 9)
[2025-07-10 08:28:09,778 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 08:28:09,779 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 08:28:09,779 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 08:38:51,221 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_breast_mammary_tissue_full.svg
[2025-07-10 08:38:51,221 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_breast_mammary_tissue_full.svg
[2025-07-10 08:38:51,221 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 08:47:22,980 - __main__] INFO: Unique index combinations:
[2025-07-10 08:47:22,988 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 08:47:22,989 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 08:47:22,992 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 08:47:22,993 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 08:47:22,996 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 08:47:22,998 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 08:47:23,000 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 08:59:25,123 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 08:59:25,133 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.797852
                                                                               True                           True  ...  0.776855
                                                                               True                           True  ...  0.849121
                                                                               True                           True  ...  0.763672
                                                                               True                           True  ...  0.841797

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 09:00:41,579 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_breast_mammary_tissue_trimmed.svg
[2025-07-10 09:00:41,579 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_breast_mammary_tissue_trimmed.svg
[2025-07-10 09:00:41,636 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 09:00:41,637 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 09:00:48,485 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: cells_cultured_fibroblasts
[2025-07-10 09:00:48,485 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cells_cultured_fibroblasts-var_pc_log2.pkl
[2025-07-10 09:01:04,327 - __main__] INFO: Loaded dataframe shape: (1401877725, 9)
[2025-07-10 09:01:04,327 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 09:01:04,327 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 09:01:04,327 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 09:11:22,971 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cells_cultured_fibroblasts_full.svg
[2025-07-10 09:11:22,972 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_cells_cultured_fibroblasts_full.svg
[2025-07-10 09:11:22,972 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 09:19:30,726 - __main__] INFO: Unique index combinations:
[2025-07-10 09:19:30,733 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 09:19:30,733 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 09:19:30,737 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 09:19:30,738 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 09:19:30,740 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 09:19:30,743 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 09:19:30,745 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 09:31:14,521 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 09:31:14,530 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.672363
                                                                               True                           True  ...  0.653809
                                                                               True                           True  ...  0.834473
                                                                               True                           True  ...  0.560059
                                                                               True                           True  ...  0.498535

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 09:32:28,292 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cells_cultured_fibroblasts_trimmed.svg
[2025-07-10 09:32:28,293 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_cells_cultured_fibroblasts_trimmed.svg
[2025-07-10 09:32:28,348 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 09:32:28,348 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 09:32:35,220 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: cells_ebvtransformed_lymphocytes
[2025-07-10 09:32:35,220 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cells_ebvtransformed_lymphocytes-var_pc_log2.pkl
[2025-07-10 09:32:50,486 - __main__] INFO: Loaded dataframe shape: (1338539670, 9)
[2025-07-10 09:32:50,486 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 09:32:50,486 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 09:32:50,486 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 09:42:38,040 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cells_ebvtransformed_lymphocytes_full.svg
[2025-07-10 09:42:38,041 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_cells_ebvtransformed_lymphocytes_full.svg
[2025-07-10 09:42:38,041 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 09:49:53,774 - __main__] INFO: Unique index combinations:
[2025-07-10 09:49:53,782 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 09:49:53,783 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 09:49:53,786 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 09:49:53,787 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 09:49:53,789 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 09:49:53,792 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 09:49:53,794 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 10:01:35,017 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 10:01:35,027 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.429199
                                                                               True                           True  ...  0.241089
                                                                               True                           True  ...  0.447266
                                                                               True                           True  ...  0.381592
                                                                               True                           True  ...  0.353271

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 10:02:46,017 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cells_ebvtransformed_lymphocytes_trimmed.svg
[2025-07-10 10:02:46,018 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_cells_ebvtransformed_lymphocytes_trimmed.svg
[2025-07-10 10:02:46,072 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 10:02:46,072 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 10:02:52,899 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: cervix_ectocervix
[2025-07-10 10:02:52,899 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cervix_ectocervix-var_pc_log2.pkl
[2025-07-10 10:03:02,806 - __main__] INFO: Loaded dataframe shape: (871468626, 9)
[2025-07-10 10:03:02,806 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 10:03:02,806 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 10:03:02,806 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 10:10:07,011 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cervix_ectocervix_full.svg
[2025-07-10 10:10:07,012 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_cervix_ectocervix_full.svg
[2025-07-10 10:10:07,012 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 10:14:22,383 - __main__] INFO: Unique index combinations:
[2025-07-10 10:14:22,390 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 10:14:22,391 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 10:14:22,394 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 10:14:22,395 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 10:14:22,398 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 10:14:22,400 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 10:14:22,403 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 10:22:27,564 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 10:22:27,573 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.683105
                                                                               True                           True  ...  0.950195
                                                                               True                           True  ...  0.666504
                                                                               True                           True  ...  0.950195
                                                                               True                           True  ...  0.666504

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 10:23:16,076 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cervix_ectocervix_trimmed.svg
[2025-07-10 10:23:16,077 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_cervix_ectocervix_trimmed.svg
[2025-07-10 10:23:16,114 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 10:23:16,114 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 10:23:22,272 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: cervix_endocervix
[2025-07-10 10:23:22,272 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-cervix_endocervix-var_pc_log2.pkl
[2025-07-10 10:23:32,389 - __main__] INFO: Loaded dataframe shape: (883533666, 9)
[2025-07-10 10:23:32,389 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 10:23:32,390 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 10:23:32,390 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 10:30:43,532 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cervix_endocervix_full.svg
[2025-07-10 10:30:43,533 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_cervix_endocervix_full.svg
[2025-07-10 10:30:43,533 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 10:35:04,212 - __main__] INFO: Unique index combinations:
[2025-07-10 10:35:04,219 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 10:35:04,219 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 10:35:04,223 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 10:35:04,224 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 10:35:04,226 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 10:35:04,229 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 10:35:04,231 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 10:43:08,408 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 10:43:08,417 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.814453
                                                                               True                           True  ...  0.818359
                                                                               True                           True  ...  0.984863
                                                                               True                           True  ...  0.866699
                                                                               True                           True  ...  0.960449

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 10:43:57,100 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_cervix_endocervix_trimmed.svg
[2025-07-10 10:43:57,100 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_cervix_endocervix_trimmed.svg
[2025-07-10 10:43:57,138 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 10:43:57,138 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 10:44:03,252 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: colon_sigmoid
[2025-07-10 10:44:03,252 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-colon_sigmoid-var_pc_log2.pkl
[2025-07-10 10:44:18,624 - __main__] INFO: Loaded dataframe shape: (1414189153, 9)
[2025-07-10 10:44:18,625 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 10:44:18,625 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 10:44:18,625 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 10:54:40,591 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_colon_sigmoid_full.svg
[2025-07-10 10:54:40,592 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_colon_sigmoid_full.svg
[2025-07-10 10:54:40,592 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 11:02:49,291 - __main__] INFO: Unique index combinations:
[2025-07-10 11:02:49,298 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 11:02:49,298 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 11:02:49,302 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 11:02:49,303 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 11:02:49,305 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 11:02:49,308 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 11:02:49,310 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 11:14:52,611 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 11:14:52,620 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.152100
                                                                               True                           True  ...  0.839844
                                                                               True                           True  ...  0.279053
                                                                               True                           True  ...  0.453857
                                                                               True                           True  ...  0.385010

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 11:16:08,548 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_colon_sigmoid_trimmed.svg
[2025-07-10 11:16:08,548 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_colon_sigmoid_trimmed.svg
[2025-07-10 11:16:08,606 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 11:16:08,606 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 11:16:15,501 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: colon_transverse
[2025-07-10 11:16:15,501 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-colon_transverse-var_pc_log2.pkl
[2025-07-10 11:16:31,203 - __main__] INFO: Loaded dataframe shape: (1425646503, 9)
[2025-07-10 11:16:31,203 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 11:16:31,203 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 11:16:31,203 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 11:27:02,089 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_colon_transverse_full.svg
[2025-07-10 11:27:02,089 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_colon_transverse_full.svg
[2025-07-10 11:27:02,089 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 11:35:03,430 - __main__] INFO: Unique index combinations:
[2025-07-10 11:35:03,438 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 11:35:03,439 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 11:35:03,442 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 11:35:03,443 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 11:35:03,445 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 11:35:03,448 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 11:35:03,450 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 11:47:19,703 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 11:47:19,713 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.925781
                                                                               True                           True  ...  0.522461
                                                                               True                           True  ...  0.523438
                                                                               True                           True  ...  0.435791
                                                                               True                           True  ...  0.870605

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 11:48:33,535 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_colon_transverse_trimmed.svg
[2025-07-10 11:48:33,535 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_colon_transverse_trimmed.svg
[2025-07-10 11:48:33,593 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 11:48:33,593 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 11:48:40,424 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: esophagus_gastroesophageal_junction
[2025-07-10 11:48:40,424 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-esophagus_gastroesophageal_junction-var_pc_log2.pkl
[2025-07-10 11:48:55,913 - __main__] INFO: Loaded dataframe shape: (1407708330, 9)
[2025-07-10 11:48:55,913 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 11:48:55,913 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 11:48:55,913 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 11:59:18,278 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_gastroesophageal_junction_full.svg
[2025-07-10 11:59:18,279 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_esophagus_gastroesophageal_junction_full.svg
[2025-07-10 11:59:18,279 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 12:06:57,206 - __main__] INFO: Unique index combinations:
[2025-07-10 12:06:57,213 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 12:06:57,213 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 12:06:57,217 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 12:06:57,218 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 12:06:57,220 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 12:06:57,223 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 12:06:57,225 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 12:19:02,935 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 12:19:02,944 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.986816
                                                                               True                           True  ...  0.131836
                                                                               True                           True  ...  0.162109
                                                                               True                           True  ...  0.163452
                                                                               True                           True  ...  0.812500

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 12:20:16,387 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_gastroesophageal_junction_trimmed.svg
[2025-07-10 12:20:16,388 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_esophagus_gastroesophageal_junction_trimmed.svg
[2025-07-10 12:20:16,443 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 12:20:16,443 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 12:20:23,237 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: esophagus_mucosa
[2025-07-10 12:20:23,237 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-esophagus_mucosa-var_pc_log2.pkl
[2025-07-10 12:20:39,113 - __main__] INFO: Loaded dataframe shape: (1429226380, 9)
[2025-07-10 12:20:39,113 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 12:20:39,113 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 12:20:39,113 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 12:31:07,624 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_mucosa_full.svg
[2025-07-10 12:31:07,625 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_esophagus_mucosa_full.svg
[2025-07-10 12:31:07,625 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 12:38:48,669 - __main__] INFO: Unique index combinations:
[2025-07-10 12:38:48,676 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 12:38:48,676 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 12:38:48,680 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 12:38:48,681 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 12:38:48,683 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 12:38:48,686 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 12:38:48,688 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 12:50:39,601 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 12:50:39,610 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.657227
                                                                               True                           True  ...  0.770996
                                                                               True                           True  ...  0.228394
                                                                               True                           True  ...  0.689941
                                                                               True                           True  ...  0.780273

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 12:51:53,972 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_mucosa_trimmed.svg
[2025-07-10 12:51:53,972 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_esophagus_mucosa_trimmed.svg
[2025-07-10 12:51:54,028 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 12:51:54,028 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 12:52:00,727 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: esophagus_muscularis
[2025-07-10 12:52:00,727 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-esophagus_muscularis-var_pc_log2.pkl
[2025-07-10 12:52:16,674 - __main__] INFO: Loaded dataframe shape: (1438705261, 9)
[2025-07-10 12:52:16,674 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 12:52:16,674 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 12:52:16,674 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 13:02:49,681 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_muscularis_full.svg
[2025-07-10 13:02:49,681 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_esophagus_muscularis_full.svg
[2025-07-10 13:02:49,681 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 13:10:45,758 - __main__] INFO: Unique index combinations:
[2025-07-10 13:10:45,765 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 13:10:45,765 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 13:10:45,769 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 13:10:45,770 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 13:10:45,772 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 13:10:45,775 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 13:10:45,777 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 13:23:12,225 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 13:23:12,234 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.768555
                                                                               True                           True  ...  0.697754
                                                                               True                           True  ...  0.636719
                                                                               True                           True  ...  0.810547
                                                                               True                           True  ...  0.899902

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 13:24:27,531 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_esophagus_muscularis_trimmed.svg
[2025-07-10 13:24:27,532 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_esophagus_muscularis_trimmed.svg
[2025-07-10 13:24:27,589 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 13:24:27,589 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 13:24:34,401 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: fallopian_tube
[2025-07-10 13:24:34,401 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-fallopian_tube-var_pc_log2.pkl
[2025-07-10 13:24:44,355 - __main__] INFO: Loaded dataframe shape: (869799486, 9)
[2025-07-10 13:24:44,355 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 13:24:44,355 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 13:24:44,355 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 13:31:55,751 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_fallopian_tube_full.svg
[2025-07-10 13:31:55,751 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_fallopian_tube_full.svg
[2025-07-10 13:31:55,751 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 13:36:16,123 - __main__] INFO: Unique index combinations:
[2025-07-10 13:36:16,130 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 13:36:16,131 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 13:36:16,134 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 13:36:16,135 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 13:36:16,138 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 13:36:16,140 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 13:36:16,143 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 13:44:07,207 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 13:44:07,216 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.733398
                                                                               True                           True  ...  0.899902
                                                                               True                           True  ...  0.916504
                                                                               True                           True  ...  0.950195
                                                                               True                           True  ...  0.816895

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 13:44:55,931 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_fallopian_tube_trimmed.svg
[2025-07-10 13:44:55,932 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_fallopian_tube_trimmed.svg
[2025-07-10 13:44:55,969 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 13:44:55,969 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 13:45:02,063 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: heart_atrial_appendage
[2025-07-10 13:45:02,063 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-heart_atrial_appendage-var_pc_log2.pkl
[2025-07-10 13:45:18,592 - __main__] INFO: Loaded dataframe shape: (1416051153, 9)
[2025-07-10 13:45:18,592 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 13:45:18,592 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 13:45:18,592 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 13:55:44,832 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_heart_atrial_appendage_full.svg
[2025-07-10 13:55:44,833 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_heart_atrial_appendage_full.svg
[2025-07-10 13:55:44,833 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 14:03:05,352 - __main__] INFO: Unique index combinations:
[2025-07-10 14:03:05,359 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 14:03:05,360 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 14:03:05,363 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 14:03:05,364 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 14:03:05,367 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 14:03:05,369 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 14:03:05,372 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 14:15:27,502 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 14:15:27,511 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.209595
                                                                               True                           True  ...  0.774414
                                                                               True                           True  ...  0.214844
                                                                               True                           True  ...  0.151855
                                                                               True                           True  ...  0.213257

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 14:16:40,666 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_heart_atrial_appendage_trimmed.svg
[2025-07-10 14:16:40,667 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_heart_atrial_appendage_trimmed.svg
[2025-07-10 14:16:40,722 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 14:16:40,722 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 14:16:47,544 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: heart_left_ventricle
[2025-07-10 14:16:47,544 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-heart_left_ventricle-var_pc_log2.pkl
[2025-07-10 14:17:02,841 - __main__] INFO: Loaded dataframe shape: (1389303828, 9)
[2025-07-10 14:17:02,842 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 14:17:02,842 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 14:17:02,842 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 14:27:12,554 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_heart_left_ventricle_full.svg
[2025-07-10 14:27:12,554 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_heart_left_ventricle_full.svg
[2025-07-10 14:27:12,554 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 14:34:05,541 - __main__] INFO: Unique index combinations:
[2025-07-10 14:34:05,548 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 14:34:05,548 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 14:34:05,552 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 14:34:05,553 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 14:34:05,555 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 14:34:05,558 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 14:34:05,560 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 14:46:35,492 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 14:46:35,500 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.755371
                                                                               True                           True  ...  0.356689
                                                                               True                           True  ...  0.666992
                                                                               True                           True  ...  0.123474
                                                                               True                           True  ...  0.902344

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 14:47:47,265 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_heart_left_ventricle_trimmed.svg
[2025-07-10 14:47:47,265 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_heart_left_ventricle_trimmed.svg
[2025-07-10 14:47:47,320 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 14:47:47,320 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 14:47:54,007 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: kidney_cortex
[2025-07-10 14:47:54,007 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-kidney_cortex-var_pc_log2.pkl
[2025-07-10 14:48:07,632 - __main__] INFO: Loaded dataframe shape: (1231692528, 9)
[2025-07-10 14:48:07,632 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 14:48:07,632 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 14:48:07,632 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 14:57:22,055 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_kidney_cortex_full.svg
[2025-07-10 14:57:22,056 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_kidney_cortex_full.svg
[2025-07-10 14:57:22,056 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 15:03:31,188 - __main__] INFO: Unique index combinations:
[2025-07-10 15:03:31,195 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 15:03:31,196 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 15:03:31,199 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 15:03:31,200 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 15:03:31,203 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 15:03:31,205 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 15:03:31,208 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 15:13:57,315 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 15:13:57,324 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.916992
                                                                               True                           True  ...  0.972168
                                                                               True                           True  ...  0.935547
                                                                               True                           True  ...  0.937500
                                                                               True                           True  ...  0.913574

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 15:15:01,691 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_kidney_cortex_trimmed.svg
[2025-07-10 15:15:01,692 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_kidney_cortex_trimmed.svg
[2025-07-10 15:15:01,740 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 15:15:01,740 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 15:15:08,282 - __main__] INFO: Starting compute_intersections.py for tissue: kidney_medulla
[2025-07-10 15:15:08,282 - __main__] INFO: Log directory: logs/20250709_220836
[2025-07-10 15:15:08,282 - __main__] INFO: Configuration:
[2025-07-10 15:15:08,282 - __main__] INFO:   GTEX_TISSUE: kidney_medulla
[2025-07-10 15:15:08,282 - __main__] INFO:   GENE_SEL_STRATEGY: var_pc_log2
[2025-07-10 15:15:08,282 - __main__] INFO:   TOP_N_GENES: all
[2025-07-10 15:15:08,282 - __main__] INFO:   Q_DIFF: 0.3
[2025-07-10 15:15:08,282 - __main__] INFO:   OUTPUT_DIR: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections
[2025-07-10 15:15:08,282 - __main__] INFO:   USE_EXISTING: True
[2025-07-10 15:15:08,282 - __main__] INFO:   LOG_DIR: logs/20250709_220836
[2025-07-10 15:15:08,282 - __main__] INFO: Input correlation file template: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_{tissue}-{gene_sel_strategy}-{corr_method}.pkl
[2025-07-10 15:15:08,282 - __main__] INFO: Input correlation file: /pividori_lab/haoyu_projects/ccc-gpu/data/gtex/similarity_matrices/all/gtex_v8_data_kidney_medulla-var_pc_log2-all.pkl
[2025-07-10 15:15:08,282 - __main__] INFO: Loading correlation data...
[2025-07-10 15:15:13,086 - __main__] INFO: Dataframe shape: (692459505, 3)
[2025-07-10 15:15:13,086 - __main__] INFO: Dataframe head (first 15 rows):
[2025-07-10 15:15:13,091 - __main__] INFO: 
                                       ccc   pearson  spearman
ENSG00000211592.8  ENSG00000211596.3   1.0  1.000000  1.000000
ENSG00000116218.12 ENSG00000211596.3   1.0  0.130737  0.799805
                   ENSG00000211592.8   1.0  0.145020  0.799805
ENSG00000211893.3  ENSG00000211596.3   1.0  0.951172  1.000000
                   ENSG00000211592.8   1.0  0.955566  1.000000
                   ENSG00000116218.12  1.0  0.429932  0.799805
ENSG00000211594.2  ENSG00000211596.3   1.0  1.000000  0.799805
                   ENSG00000211592.8   1.0  0.999512  0.799805
                   ENSG00000116218.12  1.0  0.116821  0.600098
                   ENSG00000211893.3   1.0  0.946777  0.799805
ENSG00000211597.2  ENSG00000211596.3   1.0  1.000000  1.000000
                   ENSG00000211592.8   1.0  1.000000  1.000000
                   ENSG00000116218.12  1.0  0.129150  0.799805
                   ENSG00000211893.3   1.0  0.950684  1.000000
                   ENSG00000211594.2   1.0  1.000000  0.799805
[2025-07-10 15:15:13,091 - __main__] INFO: Dataframe statistics:
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:1487: RuntimeWarning: overflow encountered in cast
  return dtype.type(n)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/numpy/core/_methods.py:49: RuntimeWarning: overflow encountered in reduce
  return umr_sum(a, axis, dtype, out, keepdims, initial, where)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/nanops.py:731: RuntimeWarning: invalid value encountered in scalar divide
  the_mean = the_sum / count if count > 0 else np.nan
[2025-07-10 15:16:48,531 - __main__] INFO: 
               ccc       pearson      spearman
count  692459505.0  6.924595e+08  6.924595e+08
mean           NaN           NaN           NaN
std            0.0  0.000000e+00  0.000000e+00
min            0.0  0.000000e+00  0.000000e+00
25%            0.0  2.866211e-01  2.583008e-01
50%            0.0  5.302734e-01  3.999023e-01
75%            1.0  7.929688e-01  7.998047e-01
max            1.0  1.000000e+00  1.000000e+00
[2025-07-10 15:17:25,301 - __main__] INFO: Quantiles from 20% to 100% in 20 steps:
[2025-07-10 15:17:25,305 - __main__] INFO: 
               ccc   pearson  spearman
0.200000  0.000000  0.231201  0.258301
0.242105  0.000000  0.278076  0.258301
0.284211  0.000000  0.324219  0.272217
0.326316  0.000000  0.353271  0.333252
0.368421  0.000000  0.397705  0.399902
0.410526  0.000000  0.440918  0.399902
0.452632  0.000000  0.483887  0.399902
0.494737  0.000000  0.524902  0.399902
0.536842  0.000000  0.566895  0.600098
0.578947  0.000000  0.608887  0.632324
0.621053  0.000000  0.654297  0.737793
0.663158  0.333252  0.700195  0.774414
0.705263  0.333252  0.745117  0.774414
0.747368  1.000000  0.790039  0.799805
0.789474  1.000000  0.833008  0.799805
0.831579  1.000000  0.874512  0.799805
0.873684  1.000000  0.912598  0.799805
0.915789  1.000000  0.946777  0.948730
0.957895  1.000000  0.977051  1.000000
1.000000  1.000000  1.000000  1.000000
[2025-07-10 15:17:30,084 - __main__] INFO: CCC quantiles test (0.20):
[2025-07-10 15:17:30,085 - __main__] INFO: 0.2    0.0
0.8    1.0
Name: ccc, dtype: float64
[2025-07-10 15:17:30,085 - __main__] INFO: CCC lower quantile: 0.0, upper quantile: 1.0
[2025-07-10 15:17:35,310 - __main__] INFO: Clustermatch quantiles: lower=0.0, upper=0.333251953125
[2025-07-10 15:17:45,662 - __main__] INFO: Pearson quantiles: lower=0.333251953125, upper=0.73974609375
[2025-07-10 15:17:54,942 - __main__] INFO: Spearman quantiles: lower=0.316162109375, upper=0.7744140625
[2025-07-10 15:17:56,686 - __main__] INFO: Pearson higher count: 207755797
[2025-07-10 15:17:58,240 - __main__] INFO: Pearson lower count: 212920704
[2025-07-10 15:17:59,982 - __main__] INFO: Spearman higher count: 261251764
[2025-07-10 15:18:01,537 - __main__] INFO: Spearman lower count: 218201451
[2025-07-10 15:18:03,524 - __main__] INFO: Clustermatch higher count: 260031150
[2025-07-10 15:18:05,144 - __main__] INFO: Clustermatch lower count: 432428355
[2025-07-10 15:18:06,966 - __main__] INFO: Plot dataframe shape: (692459505, 9)
[2025-07-10 15:18:06,966 - __main__] INFO: Plot dataframe columns: ['pearson_higher', 'pearson_lower', 'spearman_higher', 'spearman_lower', 'clustermatch_higher', 'clustermatch_lower', 'ccc', 'pearson', 'spearman']
[2025-07-10 15:18:11,488 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 15:18:11,488 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 15:23:14,977 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_kidney_medulla_full.svg
[2025-07-10 15:23:14,978 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_kidney_medulla_full.svg
[2025-07-10 15:23:14,978 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 15:26:25,272 - __main__] INFO: Unique index combinations:
[2025-07-10 15:26:25,278 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                 True
1            False          False  ...            True                 True
2            False          False  ...           False                 True
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...            True                False
6            False          False  ...           False                False
7            False          False  ...            True                False
8            False           True  ...           False                 True
9            False           True  ...           False                 True
10           False           True  ...           False                False
11           False           True  ...           False                False
12            True          False  ...           False                 True
13            True          False  ...            True                 True
14            True          False  ...           False                False
15            True          False  ...            True                False
16            True           True  ...           False                 True
17            True           True  ...           False                False

[18 rows x 6 columns]
[2025-07-10 15:26:25,279 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 15:26:25,282 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
3            False          False  ...            True                 True
7            False          False  ...            True                False
9            False           True  ...           False                 True
11           False           True  ...           False                False
13            True          False  ...            True                 True
15            True          False  ...            True                False
16            True           True  ...           False                 True
17            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 15:26:25,283 - __main__] INFO: Number of combinations where first 3 are all False: 4
[2025-07-10 15:26:25,285 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)]
[2025-07-10 15:26:25,287 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)]
[2025-07-10 15:26:25,289 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
Traceback (most recent call last):
  File "/home/zhhaoyu/_projs/ccc-gpu/nbs/03-manuscript/15_intersections/compute_intersections.py", line 507, in <module>
    main()
  File "/home/zhhaoyu/_projs/ccc-gpu/nbs/03-manuscript/15_intersections/compute_intersections.py", line 490, in main
    generate_upset_plots(df_plot, categories, args, OUTPUT_FIGURE_NAME, LOG_DIR, logger)
  File "/home/zhhaoyu/_projs/ccc-gpu/nbs/03-manuscript/15_intersections/compute_intersections.py", line 159, in generate_upset_plots
    gene_pairs_by_cats = gene_pairs_by_cats.loc[
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexing.py", line 1191, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexing.py", line 1420, in _getitem_axis
    return self._getitem_iterable(key, axis=axis)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexing.py", line 1360, in _getitem_iterable
    keyarr, indexer = self._get_listlike_indexer(key, axis)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexing.py", line 1558, in _get_listlike_indexer
    keyarr, indexer = ax._get_indexer_strict(key, axis_name)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexes/multi.py", line 2766, in _get_indexer_strict
    return super()._get_indexer_strict(key, axis_name)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 6200, in _get_indexer_strict
    self._raise_if_missing(keyarr, indexer, axis_name)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexes/multi.py", line 2786, in _raise_if_missing
    return super()._raise_if_missing(key, indexer, axis_name)
  File "/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/pandas/core/indexes/base.py", line 6252, in _raise_if_missing
    raise KeyError(f"{not_found} not in index")
KeyError: '[(False, False, False, True, True, False), (True, True, False, False, False, False), (True, False, False, False, True, False), (False, True, False, True, False, False)] not in index'
[2025-07-10 15:34:47,987 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: liver
[2025-07-10 15:34:47,987 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-liver-var_pc_log2.pkl
[2025-07-10 15:35:02,313 - __main__] INFO: Loaded dataframe shape: (1313153128, 9)
[2025-07-10 15:35:02,313 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 15:35:02,313 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 15:35:02,313 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 15:44:39,952 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_liver_full.svg
[2025-07-10 15:44:39,953 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_liver_full.svg
[2025-07-10 15:44:39,953 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 15:51:09,586 - __main__] INFO: Unique index combinations:
[2025-07-10 15:51:09,593 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 15:51:09,594 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 15:51:09,597 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 15:51:09,598 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 15:51:09,601 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 15:51:09,604 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 15:51:09,606 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 16:03:18,197 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 16:03:18,206 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.986328
                                                                               True                           True  ...  0.734863
                                                                               True                           True  ...  0.735352
                                                                               True                           True  ...  0.848145
                                                                               True                           True  ...  0.123230

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 16:04:27,156 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_liver_trimmed.svg
[2025-07-10 16:04:27,156 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_liver_trimmed.svg
[2025-07-10 16:04:27,208 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 16:04:27,208 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 16:04:33,795 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: lung
[2025-07-10 16:04:33,795 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-lung-var_pc_log2.pkl
[2025-07-10 16:04:50,342 - __main__] INFO: Loaded dataframe shape: (1461917628, 9)
[2025-07-10 16:04:50,343 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 16:04:50,343 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 16:04:50,343 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 16:15:33,997 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_lung_full.svg
[2025-07-10 16:15:33,998 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_lung_full.svg
[2025-07-10 16:15:33,998 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 16:23:02,581 - __main__] INFO: Unique index combinations:
[2025-07-10 16:23:02,588 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 16:23:02,588 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 16:23:02,592 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 16:23:02,593 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 16:23:02,595 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 16:23:02,598 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 16:23:02,600 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 16:36:22,319 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 16:36:22,328 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.848145
                                                                               True                           True  ...  0.542969
                                                                               True                           True  ...  0.598145
                                                                               True                           True  ...  0.839355
                                                                               True                           True  ...  0.989258

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 16:37:39,008 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_lung_trimmed.svg
[2025-07-10 16:37:39,009 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_lung_trimmed.svg
[2025-07-10 16:37:39,067 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 16:37:39,067 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 16:37:45,838 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: minor_salivary_gland
[2025-07-10 16:37:45,838 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-minor_salivary_gland-var_pc_log2.pkl
[2025-07-10 16:38:00,676 - __main__] INFO: Loaded dataframe shape: (1331409003, 9)
[2025-07-10 16:38:00,677 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 16:38:00,677 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 16:38:00,677 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 16:48:19,813 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_minor_salivary_gland_full.svg
[2025-07-10 16:48:19,813 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_minor_salivary_gland_full.svg
[2025-07-10 16:48:19,813 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 16:57:03,491 - __main__] INFO: Unique index combinations:
[2025-07-10 16:57:03,498 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 16:57:03,498 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 16:57:03,502 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 16:57:03,503 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 16:57:03,505 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 16:57:03,508 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 16:57:03,510 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 17:08:26,037 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 17:08:26,046 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.250488
                                                                               True                           True  ...  0.911621
                                                                               True                           True  ...  0.271729
                                                                               True                           True  ...  0.916504
                                                                               True                           True  ...  0.256592

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 17:09:35,447 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_minor_salivary_gland_trimmed.svg
[2025-07-10 17:09:35,447 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_minor_salivary_gland_trimmed.svg
[2025-07-10 17:09:35,501 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 17:09:35,501 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 17:09:42,286 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: muscle_skeletal
[2025-07-10 17:09:42,287 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-muscle_skeletal-var_pc_log2.pkl
[2025-07-10 17:09:58,624 - __main__] INFO: Loaded dataframe shape: (1460025703, 9)
[2025-07-10 17:09:58,624 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 17:09:58,624 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 17:09:58,624 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 17:21:18,806 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_muscle_skeletal_full.svg
[2025-07-10 17:21:18,806 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_muscle_skeletal_full.svg
[2025-07-10 17:21:18,806 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 17:29:38,996 - __main__] INFO: Unique index combinations:
[2025-07-10 17:29:39,003 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 17:29:39,004 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 17:29:39,007 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 17:29:39,008 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 17:29:39,011 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 17:29:39,013 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 17:29:39,016 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 17:41:59,897 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 17:41:59,906 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.406738
                                                                               True                           True  ...  0.134277
                                                                               True                           True  ...  0.553711
                                                                               True                           True  ...  0.176758
                                                                               True                           True  ...  0.446045

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 17:43:16,513 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_muscle_skeletal_trimmed.svg
[2025-07-10 17:43:16,514 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_muscle_skeletal_trimmed.svg
[2025-07-10 17:43:16,573 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 17:43:16,573 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 17:43:23,604 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: nerve_tibial
[2025-07-10 17:43:23,604 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-nerve_tibial-var_pc_log2.pkl
[2025-07-10 17:43:40,599 - __main__] INFO: Loaded dataframe shape: (1472643585, 9)
[2025-07-10 17:43:40,599 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 17:43:40,599 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 17:43:40,599 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 17:54:21,711 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_nerve_tibial_full.svg
[2025-07-10 17:54:21,711 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_nerve_tibial_full.svg
[2025-07-10 17:54:21,711 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 18:02:06,316 - __main__] INFO: Unique index combinations:
[2025-07-10 18:02:06,323 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 18:02:06,323 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 18:02:06,327 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 18:02:06,328 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 18:02:06,330 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 18:02:06,333 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 18:02:06,335 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 18:14:13,125 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 18:14:13,134 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.742676
                                                                               True                           True  ...  0.150513
                                                                               True                           True  ...  0.343994
                                                                               True                           True  ...  0.115601
                                                                               True                           True  ...  0.556641

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 18:15:30,848 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_nerve_tibial_trimmed.svg
[2025-07-10 18:15:30,848 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_nerve_tibial_trimmed.svg
[2025-07-10 18:15:30,907 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 18:15:30,907 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 18:15:37,778 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: ovary
[2025-07-10 18:15:37,778 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-ovary-var_pc_log2.pkl
[2025-07-10 18:15:52,967 - __main__] INFO: Loaded dataframe shape: (1353222276, 9)
[2025-07-10 18:15:52,967 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 18:15:52,968 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 18:15:52,968 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 18:25:42,064 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_ovary_full.svg
[2025-07-10 18:25:42,065 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_ovary_full.svg
[2025-07-10 18:25:42,065 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 18:32:24,501 - __main__] INFO: Unique index combinations:
[2025-07-10 18:32:24,508 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 18:32:24,509 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 18:32:24,512 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 18:32:24,513 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 18:32:24,516 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 18:32:24,518 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 18:32:24,521 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 18:44:49,600 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 18:44:49,609 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.808105
                                                                               True                           True  ...  0.114685
                                                                               True                           True  ...  0.353027
                                                                               True                           True  ...  0.179565
                                                                               True                           True  ...  0.119019

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 18:46:00,708 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_ovary_trimmed.svg
[2025-07-10 18:46:00,709 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_ovary_trimmed.svg
[2025-07-10 18:46:00,762 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 18:46:00,762 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 18:46:07,553 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: pancreas
[2025-07-10 18:46:07,553 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-pancreas-var_pc_log2.pkl
[2025-07-10 18:46:22,595 - __main__] INFO: Loaded dataframe shape: (1369711630, 9)
[2025-07-10 18:46:22,595 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 18:46:22,595 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 18:46:22,595 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 18:56:18,213 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_pancreas_full.svg
[2025-07-10 18:56:18,214 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_pancreas_full.svg
[2025-07-10 18:56:18,214 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 19:03:00,259 - __main__] INFO: Unique index combinations:
[2025-07-10 19:03:00,266 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 19:03:00,266 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 19:03:00,270 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 19:03:00,271 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 19:03:00,273 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 19:03:00,276 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 19:03:00,278 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 19:15:17,861 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 19:15:17,870 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.171997
                                                                               True                           True  ...  0.316406
                                                                               True                           True  ...  0.192505
                                                                               True                           True  ...  0.231812
                                                                               True                           True  ...  0.238037

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 19:16:28,154 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_pancreas_trimmed.svg
[2025-07-10 19:16:28,155 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_pancreas_trimmed.svg
[2025-07-10 19:16:28,208 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 19:16:28,208 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 19:16:34,805 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: pituitary
[2025-07-10 19:16:34,805 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-pituitary-var_pc_log2.pkl
[2025-07-10 19:16:52,957 - __main__] INFO: Loaded dataframe shape: (1418660011, 9)
[2025-07-10 19:16:52,957 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 19:16:52,957 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 19:16:52,957 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 19:27:16,465 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_pituitary_full.svg
[2025-07-10 19:27:16,466 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_pituitary_full.svg
[2025-07-10 19:27:16,466 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 19:34:19,647 - __main__] INFO: Unique index combinations:
[2025-07-10 19:34:19,654 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 19:34:19,655 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 19:34:19,658 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 19:34:19,659 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 19:34:19,662 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 19:34:19,664 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 19:34:19,666 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 19:46:16,530 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 19:46:16,539 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.857422
                                                                               True                           True  ...  0.309082
                                                                               True                           True  ...  0.316650
                                                                               True                           True  ...  0.105896
                                                                               True                           True  ...  0.180176

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 19:47:30,589 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_pituitary_trimmed.svg
[2025-07-10 19:47:30,589 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_pituitary_trimmed.svg
[2025-07-10 19:47:30,646 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 19:47:30,647 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 19:47:37,285 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: prostate
[2025-07-10 19:47:37,285 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-prostate-var_pc_log2.pkl
[2025-07-10 19:47:54,837 - __main__] INFO: Loaded dataframe shape: (1395161076, 9)
[2025-07-10 19:47:54,837 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 19:47:54,837 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 19:47:54,837 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 19:58:06,871 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_prostate_full.svg
[2025-07-10 19:58:06,872 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_prostate_full.svg
[2025-07-10 19:58:06,872 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 20:04:57,546 - __main__] INFO: Unique index combinations:
[2025-07-10 20:04:57,553 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 20:04:57,554 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 20:04:57,558 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 20:04:57,559 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 20:04:57,561 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 20:04:57,564 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 20:04:57,566 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 20:17:50,306 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 20:17:50,315 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.308105
                                                                               True                           True  ...  0.129883
                                                                               True                           True  ...  0.149048
                                                                               True                           True  ...  0.109680
                                                                               True                           True  ...  0.910156

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 20:19:03,630 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_prostate_trimmed.svg
[2025-07-10 20:19:03,630 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_prostate_trimmed.svg
[2025-07-10 20:19:03,685 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 20:19:03,685 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 20:19:10,196 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: skin_not_sun_exposed_suprapubic
[2025-07-10 20:19:10,196 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-skin_not_sun_exposed_suprapubic-var_pc_log2.pkl
[2025-07-10 20:19:28,240 - __main__] INFO: Loaded dataframe shape: (1458621066, 9)
[2025-07-10 20:19:28,240 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 20:19:28,240 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 20:19:28,240 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 20:29:54,503 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_skin_not_sun_exposed_suprapubic_full.svg
[2025-07-10 20:29:54,504 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_skin_not_sun_exposed_suprapubic_full.svg
[2025-07-10 20:29:54,504 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 20:37:01,620 - __main__] INFO: Unique index combinations:
[2025-07-10 20:37:01,627 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 20:37:01,627 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 20:37:01,631 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 20:37:01,632 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 20:37:01,634 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 20:37:01,637 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 20:37:01,639 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 20:49:56,631 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 20:49:56,640 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.771484
                                                                               True                           True  ...  0.277588
                                                                               True                           True  ...  0.318848
                                                                               True                           True  ...  0.826172
                                                                               True                           True  ...  0.749023

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 20:51:12,971 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_skin_not_sun_exposed_suprapubic_trimmed.svg
[2025-07-10 20:51:12,972 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_skin_not_sun_exposed_suprapubic_trimmed.svg
[2025-07-10 20:51:13,029 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 20:51:13,029 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 20:51:19,669 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: skin_sun_exposed_lower_leg
[2025-07-10 20:51:19,669 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-skin_sun_exposed_lower_leg-var_pc_log2.pkl
[2025-07-10 20:51:38,175 - __main__] INFO: Loaded dataframe shape: (1473566328, 9)
[2025-07-10 20:51:38,175 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 20:51:38,175 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 20:51:38,175 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 21:02:11,722 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_skin_sun_exposed_lower_leg_full.svg
[2025-07-10 21:02:11,722 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_skin_sun_exposed_lower_leg_full.svg
[2025-07-10 21:02:11,722 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 21:09:28,214 - __main__] INFO: Unique index combinations:
[2025-07-10 21:09:28,221 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 21:09:28,222 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 21:09:28,226 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 21:09:28,227 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 21:09:28,229 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 21:09:28,232 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 21:09:28,234 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 21:22:43,500 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 21:22:43,510 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.828125
                                                                               True                           True  ...  0.138184
                                                                               True                           True  ...  0.109863
                                                                               True                           True  ...  0.153931
                                                                               True                           True  ...  0.161499

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 21:24:00,191 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_skin_sun_exposed_lower_leg_trimmed.svg
[2025-07-10 21:24:00,191 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_skin_sun_exposed_lower_leg_trimmed.svg
[2025-07-10 21:24:00,248 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 21:24:00,249 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 21:24:07,048 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: small_intestine_terminal_ileum
[2025-07-10 21:24:07,048 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-small_intestine_terminal_ileum-var_pc_log2.pkl
[2025-07-10 21:24:22,854 - __main__] INFO: Loaded dataframe shape: (1353014190, 9)
[2025-07-10 21:24:22,855 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 21:24:22,855 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 21:24:22,855 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 21:34:10,404 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_small_intestine_terminal_ileum_full.svg
[2025-07-10 21:34:10,404 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_small_intestine_terminal_ileum_full.svg
[2025-07-10 21:34:10,404 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 21:40:52,327 - __main__] INFO: Unique index combinations:
[2025-07-10 21:40:52,334 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 21:40:52,334 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 21:40:52,338 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 21:40:52,339 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 21:40:52,341 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 21:40:52,343 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 21:40:52,346 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 21:52:51,028 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 21:52:51,037 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.531738
                                                                               True                           True  ...  0.936523
                                                                               True                           True  ...  0.956055
                                                                               True                           True  ...  0.944824
                                                                               True                           True  ...  0.936523

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 21:54:00,190 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_small_intestine_terminal_ileum_trimmed.svg
[2025-07-10 21:54:00,191 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_small_intestine_terminal_ileum_trimmed.svg
[2025-07-10 21:54:00,244 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 21:54:00,244 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 21:54:06,808 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: spleen
[2025-07-10 21:54:06,808 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-spleen-var_pc_log2.pkl
[2025-07-10 21:54:22,190 - __main__] INFO: Loaded dataframe shape: (1367095905, 9)
[2025-07-10 21:54:22,190 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 21:54:22,190 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 21:54:22,190 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 22:04:17,916 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_spleen_full.svg
[2025-07-10 22:04:17,916 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_spleen_full.svg
[2025-07-10 22:04:17,916 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 22:11:12,300 - __main__] INFO: Unique index combinations:
[2025-07-10 22:11:12,307 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 22:11:12,308 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 22:11:12,311 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 22:11:12,312 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 22:11:12,315 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 22:11:12,317 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 22:11:12,320 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 22:23:48,353 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 22:23:48,362 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.762695
                                                                               True                           True  ...  0.849121
                                                                               True                           True  ...  0.885742
                                                                               True                           True  ...  0.426025
                                                                               True                           True  ...  0.115662

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 22:24:58,486 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_spleen_trimmed.svg
[2025-07-10 22:24:58,486 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_spleen_trimmed.svg
[2025-07-10 22:24:58,539 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 22:24:58,540 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 22:25:05,036 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: stomach
[2025-07-10 22:25:05,036 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-stomach-var_pc_log2.pkl
[2025-07-10 22:25:19,907 - __main__] INFO: Loaded dataframe shape: (1402248403, 9)
[2025-07-10 22:25:19,907 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 22:25:19,907 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 22:25:19,907 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 22:35:44,290 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_stomach_full.svg
[2025-07-10 22:35:44,290 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_stomach_full.svg
[2025-07-10 22:35:44,290 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 22:42:56,906 - __main__] INFO: Unique index combinations:
[2025-07-10 22:42:56,913 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 22:42:56,913 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 22:42:56,917 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 22:42:56,918 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 22:42:56,920 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 22:42:56,923 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 22:42:56,925 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 22:56:37,690 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 22:56:37,699 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.910645
                                                                               True                           True  ...  0.785645
                                                                               True                           True  ...  0.779785
                                                                               True                           True  ...  0.848633
                                                                               True                           True  ...  0.879395

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 22:57:49,533 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_stomach_trimmed.svg
[2025-07-10 22:57:49,533 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_stomach_trimmed.svg
[2025-07-10 22:57:49,587 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 22:57:49,587 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 22:57:56,212 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: testis
[2025-07-10 22:57:56,212 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-testis-var_pc_log2.pkl
[2025-07-10 22:58:12,362 - __main__] INFO: Loaded dataframe shape: (1502917725, 9)
[2025-07-10 22:58:12,362 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 22:58:12,362 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 22:58:12,362 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 23:12:07,008 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_testis_full.svg
[2025-07-10 23:12:07,008 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_testis_full.svg
[2025-07-10 23:12:07,009 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 23:21:42,909 - __main__] INFO: Unique index combinations:
[2025-07-10 23:21:42,917 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 23:21:42,917 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 23:21:42,921 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 23:21:42,922 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 23:21:42,924 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 23:21:42,927 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 23:21:42,929 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-10 23:34:21,612 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-10 23:34:21,621 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.230957
                                                                               True                           True  ...  0.350586
                                                                               True                           True  ...  0.214233
                                                                               True                           True  ...  0.857910
                                                                               True                           True  ...  0.975586

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 23:35:39,422 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_testis_trimmed.svg
[2025-07-10 23:35:39,422 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_testis_trimmed.svg
[2025-07-10 23:35:39,482 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-10 23:35:39,482 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-10 23:35:46,499 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: thyroid
[2025-07-10 23:35:46,499 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-thyroid-var_pc_log2.pkl
[2025-07-10 23:36:02,808 - __main__] INFO: Loaded dataframe shape: (1472317980, 9)
[2025-07-10 23:36:02,808 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-10 23:36:02,808 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-10 23:36:02,808 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-10 23:46:39,183 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_thyroid_full.svg
[2025-07-10 23:46:39,184 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_thyroid_full.svg
[2025-07-10 23:46:39,184 - __main__] INFO: Creating trimmed upset plot...
[2025-07-10 23:54:09,735 - __main__] INFO: Unique index combinations:
[2025-07-10 23:54:09,742 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-10 23:54:09,743 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-10 23:54:09,746 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-10 23:54:09,747 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-10 23:54:09,750 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-10 23:54:09,752 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-10 23:54:09,755 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-11 00:06:50,920 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-11 00:06:50,929 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.169434
                                                                               True                           True  ...  0.201660
                                                                               True                           True  ...  0.219482
                                                                               True                           True  ...  0.911133
                                                                               True                           True  ...  0.200439

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-11 00:08:07,627 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_thyroid_trimmed.svg
[2025-07-11 00:08:07,627 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_thyroid_trimmed.svg
[2025-07-11 00:08:07,687 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-11 00:08:07,687 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-11 00:08:14,464 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: uterus
[2025-07-11 00:08:14,464 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-uterus-var_pc_log2.pkl
[2025-07-11 00:08:27,757 - __main__] INFO: Loaded dataframe shape: (1308289128, 9)
[2025-07-11 00:08:27,757 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-11 00:08:27,757 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-11 00:08:27,757 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-11 00:18:00,343 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_uterus_full.svg
[2025-07-11 00:18:00,343 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_uterus_full.svg
[2025-07-11 00:18:00,343 - __main__] INFO: Creating trimmed upset plot...
[2025-07-11 00:24:27,087 - __main__] INFO: Unique index combinations:
[2025-07-11 00:24:27,094 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-11 00:24:27,094 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-11 00:24:27,098 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-11 00:24:27,099 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-11 00:24:27,101 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-11 00:24:27,103 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-11 00:24:27,106 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-11 00:36:25,457 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-11 00:36:25,466 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.843262
                                                                               True                           True  ...  0.453369
                                                                               True                           True  ...  0.869629
                                                                               True                           True  ...  0.352539
                                                                               True                           True  ...  0.314453

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-11 00:37:34,143 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_uterus_trimmed.svg
[2025-07-11 00:37:34,143 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_uterus_trimmed.svg
[2025-07-11 00:37:34,195 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-11 00:37:34,196 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-11 00:37:40,670 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: vagina
[2025-07-11 00:37:40,670 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-vagina-var_pc_log2.pkl
[2025-07-11 00:37:54,085 - __main__] INFO: Loaded dataframe shape: (1328623926, 9)
[2025-07-11 00:37:54,085 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-11 00:37:54,085 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-11 00:37:54,085 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-11 00:47:31,161 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_vagina_full.svg
[2025-07-11 00:47:31,161 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_vagina_full.svg
[2025-07-11 00:47:31,161 - __main__] INFO: Creating trimmed upset plot...
[2025-07-11 00:54:02,527 - __main__] INFO: Unique index combinations:
[2025-07-11 00:54:02,534 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-11 00:54:02,534 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-11 00:54:02,538 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-11 00:54:02,539 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-11 00:54:02,541 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-11 00:54:02,544 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-11 00:54:02,546 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-11 01:05:58,142 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-11 01:05:58,151 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.793457
                                                                               True                           True  ...  0.957520
                                                                               True                           True  ...  0.847656
                                                                               True                           True  ...  0.924316
                                                                               True                           True  ...  0.776367

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-11 01:07:06,604 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_vagina_trimmed.svg
[2025-07-11 01:07:06,604 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_vagina_trimmed.svg
[2025-07-11 01:07:06,656 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-11 01:07:06,656 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
[2025-07-11 01:07:13,262 - __main__] INFO: Starting compute_intersections.py with --use-existing flag for tissue: whole_blood
[2025-07-11 01:07:13,262 - __main__] INFO: Loading existing intersection data from: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/gene_pair_intersections-gtex_v8-whole_blood-var_pc_log2.pkl
[2025-07-11 01:07:27,784 - __main__] INFO: Loaded dataframe shape: (1420258456, 9)
[2025-07-11 01:07:27,785 - __main__] INFO: Loaded dataframe columns: ['Pearson (high)', 'Pearson (low)', 'Spearman (high)', 'Spearman (low)', 'Clustermatch (high)', 'Clustermatch (low)', 'ccc', 'pearson', 'spearman']
[2025-07-11 01:07:27,785 - __main__] INFO: Categories for upset plot: ['Spearman (low)', 'Pearson (low)', 'Clustermatch (low)', 'Spearman (high)', 'Pearson (high)', 'Clustermatch (high)']
[2025-07-11 01:07:27,785 - __main__] INFO: Creating full upset plot...
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-11 01:17:49,387 - __main__] INFO: Saved full upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_whole_blood_full.svg
[2025-07-11 01:17:49,387 - __main__] INFO: Copied full upset plot to log directory: logs/20250709_220836/upsetplot_gtex_whole_blood_full.svg
[2025-07-11 01:17:49,387 - __main__] INFO: Creating trimmed upset plot...
[2025-07-11 01:24:46,019 - __main__] INFO: Unique index combinations:
[2025-07-11 01:24:46,025 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
0            False          False  ...           False                False
1            False          False  ...           False                 True
2            False          False  ...            True                False
3            False          False  ...            True                 True
4            False          False  ...           False                False
5            False          False  ...           False                 True
6            False          False  ...            True                False
7            False          False  ...            True                 True
8            False          False  ...           False                False
9            False          False  ...            True                False
10           False          False  ...           False                False
11           False          False  ...            True                False
12           False           True  ...           False                False
13           False           True  ...           False                 True
14           False           True  ...           False                False
15           False           True  ...           False                 True
16           False           True  ...           False                False
17           False           True  ...           False                False
18            True          False  ...           False                False
19            True          False  ...           False                 True
20            True          False  ...            True                False
21            True          False  ...            True                 True
22            True          False  ...           False                False
23            True          False  ...            True                False
24            True           True  ...           False                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[27 rows x 6 columns]
[2025-07-11 01:24:46,026 - __main__] INFO: Combinations with exactly 3 True values:
[2025-07-11 01:24:46,029 - __main__] INFO: 
    Spearman (low)  Pearson (low)  ...  Pearson (high)  Clustermatch (high)
7            False          False  ...            True                 True
11           False          False  ...            True                False
15           False           True  ...           False                 True
17           False           True  ...           False                False
21            True          False  ...            True                 True
23            True          False  ...            True                False
25            True           True  ...           False                 True
26            True           True  ...           False                False

[8 rows x 6 columns]
[2025-07-11 01:24:46,030 - __main__] INFO: Number of combinations where first 3 are all False: 8
[2025-07-11 01:24:46,033 - __main__] INFO: Agreements on top: [(False, False, False, False, True, True)
 (False, False, False, True, False, True)
 (False, False, False, True, True, False)]
[2025-07-11 01:24:46,035 - __main__] INFO: Agreements on bottom: [(False, True, True, False, False, False)
 (True, False, True, False, False, False)
 (True, True, False, False, False, False)]
[2025-07-11 01:24:46,038 - __main__] INFO: Disagreements: [(False, False, True, False, True, False)
 (False, False, True, True, False, False)
 (False, False, True, True, True, False)
 (False, True, False, False, False, True)
 (False, True, False, True, False, False)
 (False, True, False, True, False, True)
 (False, True, True, True, False, False)
 (True, False, False, False, False, True)
 (True, False, False, False, True, False)
 (True, False, False, False, True, True)
 (True, False, True, False, True, False)
 (True, True, False, False, False, True)]
[2025-07-11 01:37:34,678 - __main__] INFO: Gene pairs by categories after reordering:
[2025-07-11 01:37:34,687 - __main__] INFO: 
                                                                                                    Pearson (high)  ...  spearman
Spearman (low) Pearson (low) Clustermatch (low) Spearman (high) Pearson (high) Clustermatch (high)                  ...          
False          False         False              True            True           True                           True  ...  0.854004
                                                                               True                           True  ...  0.709473
                                                                               True                           True  ...  0.675781
                                                                               True                           True  ...  0.850586
                                                                               True                           True  ...  0.834473

[5 rows x 9 columns]
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:795: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linewidth"].fillna(1, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:796: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["facecolor"].fillna(self._facecolor, inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:797: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["edgecolor"].fillna(styles["facecolor"], inplace=True)
/home/zhhaoyu/miniforge3/envs/ccc-gpu/lib/python3.10/site-packages/upsetplot/plotting.py:798: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  styles["linestyle"].fillna("solid", inplace=True)
[2025-07-11 01:38:47,511 - __main__] INFO: Saved trimmed upset plot to: /pividori_lab/haoyu_projects/ccc-gpu/results/gene_pair_intersections/upsetplot_gtex_whole_blood_trimmed.svg
[2025-07-11 01:38:47,512 - __main__] INFO: Copied trimmed upset plot to log directory: logs/20250709_220836/upsetplot_gtex_whole_blood_trimmed.svg
[2025-07-11 01:38:47,567 - __main__] INFO: Plots generated successfully from existing data!
[2025-07-11 01:38:47,567 - __main__] INFO: All outputs saved to log directory: logs/20250709_220836
